unit Boitata_TLB;

// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// PASTLWTR : 1.2
// File generated on 31/07/2024 12:37:04 from Type Library described below.

// ************************************************************************  //
// Type Lib: G:\Meu Drive\Projetos\Herdom\OCX-Boitata\Ocx\Boitata.tlb (1)
// LIBID: {9733DA08-BE09-41BF-A86E-F18E2FA40D84}
// LCID: 0
// Helpfile: 
// HelpString: Boitata Library
// DepndLst: 
//   (1) v2.0 stdole, (C:\Windows\SysWOW64\stdole2.tlb)
//   (2) v4.0 StdVCL, (C:\Windows\SysWOW64\stdvcl40.dll)
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers. 
{$WARN SYMBOL_PLATFORM OFF}
{$WRITEABLECONST ON}
{$VARPROPSETTER ON}
interface

uses Windows, ActiveX, Classes, Graphics, StdVCL, Variants;
  

// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLASS_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  BoitataMajorVersion = 1;
  BoitataMinorVersion = 0;

  LIBID_Boitata: TGUID = '{9733DA08-BE09-41BF-A86E-F18E2FA40D84}';

  IID_ISessao: TGUID = '{ECDE42FC-9C24-439F-B855-80E1C8260472}';
  CLASS_Sessao: TGUID = '{00EF2DE0-7D16-47A4-85FB-075539776757}';
  IID_IVisita: TGUID = '{D80205DD-D18D-43CD-A078-09C8BADEF610}';
  CLASS_Visita: TGUID = '{A8AE12F6-1B1C-4EF8-A089-183FE88095CA}';
  IID_IMensagem: TGUID = '{D8AA394F-A8E2-4A80-A07B-FFD771578C7D}';
  CLASS_Mensagem: TGUID = '{732E2BD3-03F0-49EA-B615-14759B20E12A}';
  IID_IMensagens: TGUID = '{13C9F84C-9F98-4820-8D88-326CE974484E}';
  CLASS_Mensagens: TGUID = '{5D4BCB80-49A7-4DB1-A1C5-5C6833DAE98D}';
  IID_IBanner: TGUID = '{14C945C6-C3F8-4EFB-82EC-B1832ADCEDC6}';
  CLASS_Banner: TGUID = '{654745F3-654A-435F-93D2-218BFC6A86BC}';
  IID_IBanners: TGUID = '{D7CED7B3-3ABB-45CD-8CFB-A7D78FF69EDD}';
  CLASS_Banners: TGUID = '{83B8D09F-CA77-435B-9B33-7F9F8F667386}';
  IID_IBannersVisita: TGUID = '{7CDEDAE0-D299-449B-8D27-0F0F7B10026F}';
  CLASS_BannersVisita: TGUID = '{272EF77E-DAFB-4C44-BB39-E986F1DA23D6}';
  IID_ITiposBanner: TGUID = '{BFD5C6BF-9155-48D6-B4BC-ADD36F280B08}';
  CLASS_TiposBanner: TGUID = '{C99AC792-6DF5-4716-9521-94F74EFD4A36}';
  IID_ITiposPagina: TGUID = '{DB35C01B-1D80-4596-9224-F66EF98F7274}';
  CLASS_TiposPagina: TGUID = '{2A548A57-16D0-471A-A678-F2F8B9CA112F}';
  IID_ILayoutsPagina: TGUID = '{029526E5-03BF-47B5-9CF2-F0178BA390BB}';
  CLASS_LayoutsPagina: TGUID = '{A0E0D31B-2E3B-4A23-AC7E-5CBA93293FFD}';
  IID_IGrupoPaginas: TGUID = '{188118F3-817E-4AEF-A045-C87543644FFE}';
  CLASS_GrupoPaginas: TGUID = '{289B3F29-6C5F-4FD0-93C7-1A605E32A709}';
  IID_IGruposPaginas: TGUID = '{BA48120B-62F3-4687-9F3B-76AB18C1A0ED}';
  CLASS_GruposPaginas: TGUID = '{BA079CFD-9EB0-4008-B45E-5690AB1735CF}';
  IID_IBannersDefault: TGUID = '{A5D66860-B7E7-482C-8873-78D3ACE00516}';
  CLASS_BannersDefault: TGUID = '{35BDE0CE-6A77-40CD-ADB3-8D75BC2D0779}';
  IID_IPaginas: TGUID = '{8F6D9E37-58EE-4326-8CBE-B88426B10000}';
  CLASS_Paginas: TGUID = '{2365C423-4D99-48D6-AF41-7C4671CDBA6B}';
  IID_ITiposTarget: TGUID = '{82F05683-C87C-4E3F-BB74-5F2457506D26}';
  CLASS_TiposTarget: TGUID = '{C0306449-8843-4C46-BBB3-915D2247BE0B}';
  IID_IAnunciante: TGUID = '{F1D281DA-F234-4020-8712-8892BA614CC1}';
  CLASS_Anunciante: TGUID = '{09B23B57-128D-4E3E-81D3-1CA20B07C68D}';
  IID_IAnunciantes: TGUID = '{6F6003D9-E20B-432B-9065-9A0D9C3E43FA}';
  CLASS_Anunciantes: TGUID = '{DCAB83B9-DD60-45F6-B825-7C3BB17BA816}';
  IID_IPrograma: TGUID = '{1A9308C3-F3FE-4150-8D6D-3B11E3B01315}';
  CLASS_Programa: TGUID = '{B152D9AB-46BD-4B45-B7F8-D2B1A2535747}';
  IID_IProgramas: TGUID = '{97AB474B-A003-477D-804E-27B9873A1ED8}';
  CLASS_Programas: TGUID = '{E6AAAD20-3402-4D76-A8EC-D22D3B7BA3A5}';
  IID_IResultadosAnuncio: TGUID = '{547DB6CE-C174-4737-BDC9-6112B7617745}';
  CLASS_ResultadosAnuncio: TGUID = '{79FDBA86-8C03-434A-BC2F-B0E418ED02C0}';
  IID_IUsuario: TGUID = '{74D1CCBC-3C39-465A-A3E6-CD864724E69F}';
  CLASS_Usuario: TGUID = '{5A01A865-1823-434D-B96D-B23403ECFB18}';
  IID_IItemMenu: TGUID = '{82827CC7-5082-4631-909B-DB3E087A9DC2}';
  CLASS_ItemMenu: TGUID = '{6C36D834-E679-4B82-B025-7CA322497823}';
  IID_IBloqueio: TGUID = '{60D462A6-B209-4AE3-9201-438AF04E87B8}';
  CLASS_Bloqueio: TGUID = '{159621B3-14BD-4ED7-8C2E-9B28299C9DF0}';
  IID_IProdutor: TGUID = '{F35AAD5A-91D7-4794-B4AC-6B4B71EA868A}';
  CLASS_Produtor: TGUID = '{0952232E-F9CE-41C1-9E0B-8DBC0CD37848}';
  IID_IAcesso: TGUID = '{9E3DC518-0A77-4BC5-A51D-9BF9F2B86886}';
  CLASS_Acesso: TGUID = '{1408C4B9-5D67-4DD3-95C5-8D04B52073AC}';
  IID_IPessoas: TGUID = '{DDE74ECE-4C37-4FA0-93E7-B46BCF800D57}';
  CLASS_Pessoas: TGUID = '{3A299E9B-50E6-418C-9F36-E02524547AA5}';
  IID_IPapeis: TGUID = '{6A9D89EE-162D-448D-8A76-FFA37E1A27F1}';
  CLASS_Papeis: TGUID = '{32911715-46BA-44FA-BD77-4A7C82735C05}';
  IID_IUsuarios: TGUID = '{50784262-2BC3-429B-A6E3-D6176FC38825}';
  CLASS_Usuarios: TGUID = '{3CAE5962-682D-4B0D-B8BF-6B8C91CD37EC}';
  IID_IComunicado: TGUID = '{08C05AE4-910B-11D6-A34A-ABCB68004322}';
  CLASS_Comunicado: TGUID = '{08C05AE6-910B-11D6-A34A-ABCB68004322}';
  IID_IComunicados: TGUID = '{08C05AE8-910B-11D6-A34A-ABCB68004322}';
  CLASS_Comunicados: TGUID = '{08C05AEA-910B-11D6-A34A-ABCB68004322}';
  IID_IBloqueios: TGUID = '{75581DA5-9511-11D6-A34A-A91CD2608F22}';
  CLASS_Bloqueios: TGUID = '{75581DA7-9511-11D6-A34A-A91CD2608F22}';
  IID_IPerfil: TGUID = '{75581DA9-9511-11D6-A34A-A91CD2608F22}';
  CLASS_Perfil: TGUID = '{75581DAB-9511-11D6-A34A-A91CD2608F22}';
  IID_IAcessoTecnicoProdutor: TGUID = '{75581DB1-9511-11D6-A34A-A91CD2608F22}';
  CLASS_AcessoTecnicoProdutor: TGUID = '{75581DB3-9511-11D6-A34A-A91CD2608F22}';
  IID_IAcessoAssociacaoProdutor: TGUID = '{75581DB5-9511-11D6-A34A-A91CD2608F22}';
  CLASS_AcessoAssociacaoProdutor: TGUID = '{75581DB7-9511-11D6-A34A-A91CD2608F22}';
  IID_IPerfis: TGUID = '{C4444438-F28B-4589-8189-F111A813E50C}';
  CLASS_Perfis: TGUID = '{32F75E66-597D-4A29-B688-F8C63080D446}';
  IID_IMotivoBloqueio: TGUID = '{57B2DF20-9687-11D6-A34A-EC347E25B022}';
  CLASS_MotivoBloqueio: TGUID = '{57B2DF22-9687-11D6-A34A-EC347E25B022}';
  IID_IMotivosBloqueio: TGUID = '{57B2DF24-9687-11D6-A34A-EC347E25B022}';
  CLASS_MotivosBloqueio: TGUID = '{57B2DF26-9687-11D6-A34A-EC347E25B022}';
  IID_IPaises: TGUID = '{792611C0-9A44-11D6-B075-00E07DAEF481}';
  CLASS_Paises: TGUID = '{792611C2-9A44-11D6-B075-00E07DAEF481}';
  IID_ICodigosSisbov: TGUID = '{4DBA7FAF-9A89-487F-916F-B4284108B6B9}';
  CLASS_CodigosSisbov: TGUID = '{C7009DC8-E7BC-48F6-8A7B-81A847D0A0A0}';
  IID_IEstados: TGUID = '{46ADB180-9AFD-11D6-B075-00E07DAEF481}';
  CLASS_Estados: TGUID = '{46ADB182-9AFD-11D6-B075-00E07DAEF481}';
  IID_IMicroRegioes: TGUID = '{A94A3060-9B0D-11D6-B075-00E07DAEF481}';
  CLASS_MicroRegioes: TGUID = '{A94A3062-9B0D-11D6-B075-00E07DAEF481}';
  IID_IRacas: TGUID = '{AD937304-9B32-11D6-B075-00E07DAEF481}';
  CLASS_Racas: TGUID = '{AD937306-9B32-11D6-B075-00E07DAEF481}';
  IID_IPelagens: TGUID = '{7FF0B4C0-9B3D-11D6-B075-00E07DAEF481}';
  CLASS_Pelagens: TGUID = '{7FF0B4C2-9B3D-11D6-B075-00E07DAEF481}';
  IID_ILocal: TGUID = '{C10DB144-9CFC-11D6-A34A-9E07ADEB7323}';
  CLASS_Local: TGUID = '{C10DB146-9CFC-11D6-A34A-9E07ADEB7323}';
  IID_ILocais: TGUID = '{C10DB148-9CFC-11D6-A34A-9E07ADEB7323}';
  CLASS_Locais: TGUID = '{C10DB14A-9CFC-11D6-A34A-9E07ADEB7323}';
  IID_ITiposOrigem: TGUID = '{D89FADE0-9D56-11D6-B075-00E07DAEF481}';
  CLASS_TiposOrigem: TGUID = '{D89FADE2-9D56-11D6-B075-00E07DAEF481}';
  IID_IFazendas: TGUID = '{63804AE4-9DB2-11D6-A34A-DB62E7263D22}';
  CLASS_Fazendas: TGUID = '{63804AE6-9DB2-11D6-A34A-DB62E7263D22}';
  IID_IFazenda: TGUID = '{63804AE8-9DB2-11D6-A34A-DB62E7263D22}';
  CLASS_Fazenda: TGUID = '{63804AEA-9DB2-11D6-A34A-DB62E7263D22}';
  IID_IRegimesAlimentares: TGUID = '{376E6000-9E24-11D6-B075-00E07DAEF481}';
  CLASS_RegimesAlimentares: TGUID = '{376E6002-9E24-11D6-B075-00E07DAEF481}';
  IID_IAssociacoesRaca: TGUID = '{376E6004-9E24-11D6-B075-00E07DAEF481}';
  CLASS_AssociacoesRaca: TGUID = '{376E6006-9E24-11D6-B075-00E07DAEF481}';
  IID_IGrausSangue: TGUID = '{82B8AC20-9E63-11D6-B075-00E07DAEF481}';
  CLASS_GrausSangue: TGUID = '{82B8AC22-9E63-11D6-B075-00E07DAEF481}';
  IID_ITiposIdentificador: TGUID = '{A1FA3560-9E75-11D6-A34A-BFE3F2C1B223}';
  CLASS_TiposIdentificador: TGUID = '{A1FA3562-9E75-11D6-A34A-BFE3F2C1B223}';
  IID_ICategoriasAnimal: TGUID = '{EC261EC5-9EEC-11D6-B075-00E07DAEF481}';
  CLASS_CategoriasAnimal: TGUID = '{EC261EC7-9EEC-11D6-B075-00E07DAEF481}';
  IID_ITiposFonteAgua: TGUID = '{EC261EC9-9EEC-11D6-B075-00E07DAEF481}';
  CLASS_TiposFonteAgua: TGUID = '{EC261ECB-9EEC-11D6-B075-00E07DAEF481}';
  IID_IAnimal: TGUID = '{BA7B9AA0-9F49-11D6-A34A-BFB2F9F3A223}';
  CLASS_Animal: TGUID = '{BA7B9AA2-9F49-11D6-A34A-BFB2F9F3A223}';
  IID_IAnimais: TGUID = '{BA7B9AA4-9F49-11D6-A34A-BFB2F9F3A223}';
  CLASS_Animais: TGUID = '{BA7B9AA6-9F49-11D6-A34A-BFB2F9F3A223}';
  IID_ILote: TGUID = '{0F9D2300-9FBD-11D6-B075-00E07DAEF481}';
  CLASS_Lote: TGUID = '{0F9D2302-9FBD-11D6-B075-00E07DAEF481}';
  IID_ILotes: TGUID = '{49BDB801-9FDC-11D6-B075-00E07DAEF481}';
  CLASS_Lotes: TGUID = '{49BDB803-9FDC-11D6-B075-00E07DAEF481}';
  IID_IRaca: TGUID = '{25AFEE80-A2DC-11D6-B075-00E07DAEF481}';
  CLASS_Raca: TGUID = '{25AFEE82-A2DC-11D6-B075-00E07DAEF481}';
  IID_ILocalidade: TGUID = '{D976AA57-2F58-476B-8114-09960BAC8142}';
  CLASS_Localidade: TGUID = '{3567A08A-CAC7-4D6A-B481-9D2C359761D8}';
  IID_ILocalidades: TGUID = '{ED2C6249-FED8-4307-8929-B4765C60996F}';
  CLASS_Localidades: TGUID = '{A6027FEA-CDAD-4423-B4EE-7A041BB38DBC}';
  IID_IPelagem: TGUID = '{8B086E60-A313-11D6-B075-00E07DAEF481}';
  CLASS_Pelagem: TGUID = '{8B086E62-A313-11D6-B075-00E07DAEF481}';
  IID_IPessoaSecundaria: TGUID = '{63BDEEA0-A3DD-11D6-B075-00E07DAEF481}';
  CLASS_PessoaSecundaria: TGUID = '{63BDEEA2-A3DD-11D6-B075-00E07DAEF481}';
  IID_IPapeisSecundarios: TGUID = '{DE71D8E4-A46A-11D6-B075-00E07DAEF481}';
  CLASS_PapeisSecundarios: TGUID = '{DE71D8E6-A46A-11D6-B075-00E07DAEF481}';
  IID_IPessoasSecundarias: TGUID = '{DE71D8E8-A46A-11D6-B075-00E07DAEF481}';
  CLASS_PessoasSecundarias: TGUID = '{DE71D8EA-A46A-11D6-B075-00E07DAEF481}';
  IID_IFazendaTrabalho: TGUID = '{E8BB58C0-A72C-11D6-A34A-8CE9E2916B5D}';
  CLASS_FazendaTrabalho: TGUID = '{E8BB58C2-A72C-11D6-A34A-8CE9E2916B5D}';
  IID_IOpcoesEnvioComunicado: TGUID = '{4D912AC0-A7CA-11D6-A34A-EE976AE0AA5D}';
  CLASS_OpcoesEnvioComunicado: TGUID = '{4D912AC2-A7CA-11D6-A34A-EE976AE0AA5D}';
  IID_IPessoa: TGUID = '{4D912AC4-A7CA-11D6-A34A-EE976AE0AA5D}';
  CLASS_Pessoa: TGUID = '{4D912AC6-A7CA-11D6-A34A-EE976AE0AA5D}';
  IID_IPais: TGUID = '{1420EA00-A85B-11D6-B075-00E07DAEF481}';
  CLASS_Pais: TGUID = '{1420EA02-A85B-11D6-B075-00E07DAEF481}';
  IID_IEstado: TGUID = '{9FFAFEA0-A868-11D6-B075-00E07DAEF481}';
  CLASS_Estado: TGUID = '{9FFAFEA2-A868-11D6-B075-00E07DAEF481}';
  IID_ITiposContato: TGUID = '{27BF4147-17CA-49FD-A0D3-E7D1B9E34BFD}';
  CLASS_TiposContato: TGUID = '{BCB4CC38-AB46-44E9-B938-38B72FBED81D}';
  IID_ITiposEndereco: TGUID = '{035E9A38-AABE-4908-86BA-CC2315A258A7}';
  CLASS_TiposEndereco: TGUID = '{A29E239C-6AD1-433B-9D41-58446D1D4F9A}';
  IID_IMicroRegiao: TGUID = '{7E0D75E0-A91F-11D6-B075-00E07DAEF481}';
  CLASS_MicroRegiao: TGUID = '{7E0D75E2-A91F-11D6-B075-00E07DAEF481}';
  IID_IPropriedadeRural: TGUID = '{201FF6E0-AC82-11D6-A34A-D3BEB0108A5D}';
  CLASS_PropriedadeRural: TGUID = '{201FF6E2-AC82-11D6-A34A-D3BEB0108A5D}';
  IID_IPropriedadesRurais: TGUID = '{201FF6E4-AC82-11D6-A34A-D3BEB0108A5D}';
  CLASS_PropriedadesRurais: TGUID = '{201FF6E6-AC82-11D6-A34A-D3BEB0108A5D}';
  IID_IAptidoes: TGUID = '{5A818B00-ADEA-11D6-B075-00E07DAEF481}';
  CLASS_Aptidoes: TGUID = '{5A818B02-ADEA-11D6-B075-00E07DAEF481}';
  IID_IEspecies: TGUID = '{51F83240-AE08-11D6-B075-00E07DAEF481}';
  CLASS_Especies: TGUID = '{51F83242-AE08-11D6-B075-00E07DAEF481}';
  IID_ITiposMorte: TGUID = '{51F83244-AE08-11D6-B075-00E07DAEF481}';
  CLASS_TiposMorte: TGUID = '{51F83246-AE08-11D6-B075-00E07DAEF481}';
  IID_ICausasMorte: TGUID = '{51F83248-AE08-11D6-B075-00E07DAEF481}';
  CLASS_CausasMorte: TGUID = '{51F8324A-AE08-11D6-B075-00E07DAEF481}';
  IID_IGrausInstrucao: TGUID = '{089CD620-B040-11D6-B075-00E07DAEF481}';
  CLASS_GrausInstrucao: TGUID = '{089CD622-B040-11D6-B075-00E07DAEF481}';
  IID_IPosicoesIdentificador: TGUID = '{04ECF840-B066-11D6-B075-00E07DAEF481}';
  CLASS_PosicoesIdentificador: TGUID = '{04ECF842-B066-11D6-B075-00E07DAEF481}';
  IID_IAnimalResumido: TGUID = '{51B69860-B2C9-11D6-A34A-956B3BD2F055}';
  CLASS_AnimalResumido: TGUID = '{51B69862-B2C9-11D6-A34A-956B3BD2F055}';
  IID_IFiliacao: TGUID = '{51B69864-B2C9-11D6-A34A-956B3BD2F055}';
  CLASS_Filiacao: TGUID = '{51B69866-B2C9-11D6-A34A-956B3BD2F055}';
  IID_IRegistro: TGUID = '{51B69868-B2C9-11D6-A34A-956B3BD2F055}';
  CLASS_Registro: TGUID = '{51B6986A-B2C9-11D6-A34A-956B3BD2F055}';
  IID_IAssociacaoRaca: TGUID = '{E6A252E0-B358-11D6-B075-00E07DAEF481}';
  CLASS_AssociacaoRaca: TGUID = '{E6A252E2-B358-11D6-B075-00E07DAEF481}';
  IID_IGrauSangue: TGUID = '{DD5613C0-B380-11D6-B075-00E07DAEF481}';
  CLASS_GrauSangue: TGUID = '{DD5613C2-B380-11D6-B075-00E07DAEF481}';
  IID_ITiposLugar: TGUID = '{810F91D4-9E70-4FEA-82F2-F54BB041D84B}';
  CLASS_TiposLugar: TGUID = '{C617BEA4-9ADA-43B5-B7E1-7981E3EF8E77}';
  IID_ISituacoesSisBov: TGUID = '{857DEBA2-51C1-4FCE-8389-2A2DE27AD50D}';
  CLASS_SituacoesSisBov: TGUID = '{C9D03454-57A0-4016-B957-7FF54D174D81}';
  IID_IPessoasContatos: TGUID = '{20597B0E-5756-418F-835E-68DCBBDEEF3F}';
  CLASS_PessoasContatos: TGUID = '{0D32DB78-AF44-4EE1-84B6-DCF2D4031C69}';
  IID_IIdentificadorDoProdutor: TGUID = '{CE7C373C-25DB-46C1-95DB-0688FE3128E3}';
  CLASS_IdentificadorDoProdutor: TGUID = '{A7447E39-8331-4E73-8EEF-37E072A7F4E2}';
  IID_IParametro: TGUID = '{0C3448D9-1628-4E6E-8105-B9F322804709}';
  CLASS_Parametro: TGUID = '{A640D21C-D7ED-4613-B3EF-FA73FC857B8F}';
  IID_IGrandezasResumo: TGUID = '{BD784F50-4222-4BD4-808A-E88B9C2F8827}';
  CLASS_GrandezasResumo: TGUID = '{2A3A2EAC-6860-422B-AF56-6EFF77A8EB2D}';
  IID_IGruposEvento: TGUID = '{20EE3BB2-CF27-4EF5-8D72-421808164A4E}';
  CLASS_GruposEvento: TGUID = '{BBFB3D36-7A3E-4C3D-A584-31390A56178E}';
  IID_ITiposEvento: TGUID = '{797CE152-30D0-4B03-9538-95190109206D}';
  CLASS_TiposEvento: TGUID = '{1C4BCD4B-C667-4996-AC73-6B10B43A47A7}';
  IID_ITipoInsumo: TGUID = '{317011BA-4E58-4B60-BA0E-0DDBF8569061}';
  CLASS_TipoInsumo: TGUID = '{BFFD9F08-7D09-43AF-A310-908E6289069E}';
  IID_ITiposInsumo: TGUID = '{3F650F0F-09B1-4E84-9081-AA9728B8F76E}';
  CLASS_TiposInsumo: TGUID = '{EB58ECFC-A4C4-45B9-B57E-A541D6023F22}';
  IID_ISubTipoInsumo: TGUID = '{415D3573-E3AB-4643-9582-C6AD67FB5773}';
  CLASS_SubTipoInsumo: TGUID = '{A166D3B7-5E05-48EF-B965-4EEDC0B1FFD3}';
  IID_ISubTiposInsumo: TGUID = '{399B4B00-AE98-4A84-9C06-D6A92F94FB81}';
  CLASS_SubTiposInsumo: TGUID = '{567D3E9E-3793-450C-801E-C38D29057EEE}';
  IID_IUnidadeMedida: TGUID = '{95903909-0BA6-4862-A6B1-B459F6A14585}';
  CLASS_UnidadeMedida: TGUID = '{D589A8B6-9E0B-41AC-81F7-6C892DA0523A}';
  IID_IUnidadesMedida: TGUID = '{8F0822F8-C001-489B-B9AF-E7306D3E9831}';
  CLASS_UnidadesMedida: TGUID = '{BE7074EF-5031-403F-8EB3-4D08EDA1683C}';
  IID_IFabricanteInsumo: TGUID = '{94B11EC8-03FE-4BD3-81E4-8E4B567260AD}';
  CLASS_FabricanteInsumo: TGUID = '{6F99E3E8-F46B-4731-9079-77A1E3A45FE7}';
  IID_IFabricantesInsumo: TGUID = '{B0F4C364-4A91-4CDF-99F3-0175E372B913}';
  CLASS_FabricantesInsumo: TGUID = '{0855FBC7-7E67-40A1-B185-DD41B84175A4}';
  IID_IEvento: TGUID = '{50308EF8-6E96-4A31-BE47-6F1FCFBD5567}';
  CLASS_Evento: TGUID = '{C478EFC6-2A50-4586-BF17-C22F12BCC2D8}';
  IID_IEventos: TGUID = '{D5481A3D-9DBF-402D-8669-F5E1905CE191}';
  CLASS_Eventos: TGUID = '{6F9EDD01-6C1C-4DE3-8413-EDD3726D2B94}';
  IID_IMudancasCategoriaAnimal: TGUID = '{8100E9CF-1964-4931-A830-F2BC7C5235D5}';
  CLASS_MudancasCategoriaAnimal: TGUID = '{0411C658-A735-42F2-909C-7D401D9C5648}';
  IID_IInsumo: TGUID = '{60E563A1-75A5-4C9E-8ED3-9E259992D876}';
  CLASS_Insumo: TGUID = '{AF1DF529-25AD-4DFE-B52A-94F44DB3D7D9}';
  IID_IInsumos: TGUID = '{A4F060B1-5F22-4D97-AAE3-8B4BD10F4D8F}';
  CLASS_Insumos: TGUID = '{41E20612-8708-4708-9F1F-6087806F300A}';
  IID_IEntradaInsumo: TGUID = '{9FEBB4D9-B380-4532-B738-3E64F548C717}';
  CLASS_EntradaInsumo: TGUID = '{6C7B8233-3AFA-41AC-A7F5-04C3510DF9AD}';
  IID_IEntradasInsumo: TGUID = '{E1B844D2-8133-4F7B-AE01-07FEAF8FEE02}';
  CLASS_EntradasInsumo: TGUID = '{7C4016E5-A9EB-4346-915C-02FD8C5E82E6}';
  IID_IRelatorios: TGUID = '{4029B83F-FDD2-4125-95EF-31D119ACFD65}';
  CLASS_Relatorios: TGUID = '{19F93A15-A210-4232-AD46-F47157F0008E}';
  IID_IRelatorio: TGUID = '{EEE671BD-59C0-44BE-8BA4-1BCC539F801E}';
  CLASS_Relatorio: TGUID = '{EC685FF3-B9D2-49D1-B991-BD82A9704C51}';
  IID_IOrientacoes: TGUID = '{75EC4915-B11E-4E82-90AC-59A2E7E4D8DF}';
  CLASS_Orientacoes: TGUID = '{12EB9513-51E0-496C-B10F-B51C4D71FBAB}';
  IID_ITamanhosFonte: TGUID = '{4EBDC389-41AB-47EA-9C7D-3E5F4CA92273}';
  CLASS_TamanhosFonte: TGUID = '{4C2E3A7C-DB1C-48C0-96B4-30954F9EDDD7}';
  IID_ILargurasLinhaRelatorio: TGUID = '{EE8F9EA8-DEC1-4405-B174-82FDA8FD98A8}';
  CLASS_LargurasLinhaRelatorio: TGUID = '{2F4DA3F6-F6F0-410E-AB3B-120DD6C29586}';
  IID_IInterfaceSisbov: TGUID = '{694254C6-9A57-4779-AD37-F09BCC2174B0}';
  CLASS_InterfaceSisbov: TGUID = '{FC830808-E4C7-4643-A43B-929FC6FA3274}';
  IID_ITiposArquivoSisBov: TGUID = '{28FB01E6-4BD9-402E-B65B-4BD64F5AE73D}';
  CLASS_TiposArquivoSisBov: TGUID = '{0A4A204C-1D8D-4C94-B831-B0C0F582786A}';
  IID_ITiposSubEventoSanitario: TGUID = '{A7B7468F-4EE8-4C11-BA7E-A6EC20109B3B}';
  CLASS_TiposSubEventoSanitario: TGUID = '{4D91CB53-7EE0-4C93-B4CF-F0119EFBF8EB}';
  IID_IArquivoSisbov: TGUID = '{D2DA0126-49F4-437A-ACC6-57C1F430F6E0}';
  CLASS_ArquivoSisbov: TGUID = '{4E82D03E-CC39-4B65-96DB-3D4C255A57BC}';
  IID_IAnimaisVisita: TGUID = '{8F6218E7-7B7A-427F-B3E1-A0FC40EB27D2}';
  CLASS_AnimaisVisita: TGUID = '{228C5F96-74AC-45BD-A2B7-A9FE24D5BA92}';
  IID_IAnimalVisita: TGUID = '{B25D3105-C2BB-49BD-8E46-E5EFE879CC8C}';
  CLASS_AnimalVisita: TGUID = '{3050F726-6346-43F4-BDEC-B679BE3069FF}';
  IID_IReprodutorMultiplo: TGUID = '{B206A385-F60B-4139-BA98-EAC827C6A6F5}';
  CLASS_ReprodutorMultiplo: TGUID = '{7C67A2A3-1DF2-4B7C-9768-B0929B2D3876}';
  IID_IReprodutoresMultiplos: TGUID = '{30241E73-48E6-456C-9BB9-89CBD8A878EF}';
  CLASS_ReprodutoresMultiplos: TGUID = '{6DF0A808-8D4C-4786-BD99-2128A8437A50}';
  IID_IParametrosPesoAjustado: TGUID = '{63013854-7181-4EC4-A51D-92603452B99D}';
  CLASS_ParametrosPesoAjustado: TGUID = '{0ADF4D71-0161-4152-813F-AB052342DA7E}';
  IID_IModelosCertificado: TGUID = '{61FAF441-18FA-43CE-9673-7AABF71A527C}';
  CLASS_ModelosCertificado: TGUID = '{906C9827-16E2-4474-A99C-C4A2AF850868}';
  IID_IImportacoes: TGUID = '{84C186D8-4705-4E58-9F28-A07EAF237402}';
  CLASS_Importacoes: TGUID = '{E92B7FBF-71CD-4422-989D-E07812187D5C}';
  IID_IImportacao: TGUID = '{DF8115DF-6B49-4301-A4A6-736264AED05E}';
  CLASS_Importacao: TGUID = '{1AC7045B-735C-4F91-AB58-953223EF11C4}';
  IID_ITipoAgrupamentoRacas: TGUID = '{10081832-3D3D-4F91-8068-D56DE4817350}';
  CLASS_TipoAgrupamentoRacas: TGUID = '{654A94A8-5371-48AD-809E-39E9F916541B}';
  IID_ITiposAgrupamentoRacas: TGUID = '{186EC668-F661-4DEC-9884-7F29ED603396}';
  CLASS_TiposAgrupamentoRacas: TGUID = '{BA7E2E95-F337-42B9-BEA3-C615DA36D318}';
  IID_IAgrupamentoRacas: TGUID = '{DD0F4494-65B8-42D4-8273-B88AF4E336F7}';
  CLASS_AgrupamentoRacas: TGUID = '{DD28B156-4A9F-4E2D-804E-AD36FE0B3093}';
  IID_IAgrupamentosRacas: TGUID = '{7E472824-DBFB-487F-A5FD-CAC409EFA38B}';
  CLASS_AgrupamentosRacas: TGUID = '{C7669780-21DA-470A-B136-C8D7B49C2A6A}';
  IID_ITarefa: TGUID = '{B24C4EAF-9543-4E37-B825-6F7E24AD2AE8}';
  CLASS_Tarefa: TGUID = '{BF214F5D-A27E-4150-B6E4-4786E5BDBD10}';
  IID_ITarefas: TGUID = '{C2611AAA-8CE5-418A-A275-5851A24264AF}';
  CLASS_Tarefas: TGUID = '{0B5E8E59-9AA5-4475-A5F6-A75ED568DAAD}';
  IID_ISituacoesTarefa: TGUID = '{281F58CE-CD9F-446F-AB8C-C47BA37061D4}';
  CLASS_SituacoesTarefa: TGUID = '{D8921C60-47E6-4CCC-98F5-C403490B0A70}';
  IID_IMovimentoEstoqueSemen: TGUID = '{85981B38-210A-4B1C-AFFD-35F24A4C7B75}';
  CLASS_MovimentoEstoqueSemen: TGUID = '{436310C1-319E-4F85-A8B5-78169204F4AE}';
  IID_IEstoqueSemen: TGUID = '{38BDA0A0-D879-4DEA-97CA-2ADE3668E33A}';
  CLASS_EstoqueSemen: TGUID = '{14CD6915-C59A-485F-A6D5-577393B90C92}';
  IID_ITiposMovimentoEstoqueSemen: TGUID = '{769E09AF-BA6B-4EC7-ACC1-4C70F6E8FD59}';
  CLASS_TiposMovimentoEstoqueSemen: TGUID = '{12F71F38-C6BC-4948-B01E-414F667BDC54}';
  IID_ITiposAvaliacao: TGUID = '{015DC8FF-5657-4D2F-81CF-7687CC611BA0}';
  CLASS_TiposAvaliacao: TGUID = '{699B798D-FAC1-4F82-B4BB-445D39F1F28A}';
  IID_ITipoAvaliacao: TGUID = '{356BCAC5-3F51-4288-B8DD-D2692443CFE2}';
  CLASS_TipoAvaliacao: TGUID = '{3971325B-DAAC-43E9-A176-3DACB0A7FC47}';
  IID_ICaracteristicasAvaliacao: TGUID = '{F5D548EF-47AD-48BC-A3CA-A9E99566D8AE}';
  CLASS_CaracteristicasAvaliacao: TGUID = '{FD69FF1D-2303-41D6-9D72-B84A0BFC6C5A}';
  IID_ICaracteristicaAvaliacao: TGUID = '{3C303976-3B93-46F7-835F-F972CB96751D}';
  CLASS_CaracteristicaAvaliacao: TGUID = '{7C41181C-F312-4219-BD5D-1C27E86341FF}';
  IID_ISituacoesCria: TGUID = '{646D382C-97B7-4897-9F23-BAA0E2B0FFD4}';
  CLASS_SituacoesCria: TGUID = '{C1EB16AB-0616-4608-995C-AB4027355040}';
  IID_IGrausDificuldade: TGUID = '{C2C08753-A0FE-4D70-8498-1326F624A857}';
  CLASS_GrausDificuldade: TGUID = '{0CCF3663-742B-4FBE-9163-3DB510593F56}';
  IID_IMotivosDescarte: TGUID = '{EC90F243-0981-4048-946F-7D35EA8FC506}';
  CLASS_MotivosDescarte: TGUID = '{1C4A0752-1B69-4180-BDCB-FC4EDFF6D721}';
  IID_IImportacoesDadoGeral: TGUID = '{D2BE7F58-80FE-42C3-A3FC-E6457C8B4CF1}';
  CLASS_ImportacoesDadoGeral: TGUID = '{09AB0342-F145-496B-B299-35AA998CC971}';
  IID_IImportacaoDadoGeral: TGUID = '{BBFE476D-8719-48F1-ABEB-8815673071D9}';
  CLASS_ImportacaoDadoGeral: TGUID = '{DFE11162-D711-48D2-BB14-F14D6AFFC0E6}';
  IID_IImportacaoSISBOV: TGUID = '{9F5B8361-016F-44B7-9A29-0E57E772ACAF}';
  CLASS_ImportacaoSISBOV: TGUID = '{022F8250-5670-4023-A1B5-760EFBD8041C}';
  IID_IImportacoesSISBOV: TGUID = '{A03EA83B-B452-416D-A87E-909D99C0B2D2}';
  CLASS_ImportacoesSISBOV: TGUID = '{1FAB9936-1D25-4501-8E6D-9FEE86A50096}';
  IID_ITipoOrigemArqImport: TGUID = '{91C16053-6366-461C-8141-B03F159B3A67}';
  CLASS_TipoOrigemArqImport: TGUID = '{1A53E517-C36C-47A1-9971-310C5F63A167}';
  IID_ITiposOrigemArqImport: TGUID = '{C89B7FC9-0434-433A-8ED1-772EC4AD3D4F}';
  CLASS_TiposOrigemArqImport: TGUID = '{13E67C43-BD1A-44D9-91D2-C2DA99B3A5EA}';
  IID_IRegimesPosseUso: TGUID = '{D2B6D607-A1C3-4477-BF98-AA8A00C039EB}';
  CLASS_RegimesPosseUso: TGUID = '{899FA882-1240-492D-AC43-8E2CC6829CFC}';
  IID_IArquivoFTPEnvio: TGUID = '{BC6A8047-8F22-48E4-BD88-BAFA46835F73}';
  CLASS_ArquivoFTPEnvio: TGUID = '{176831AE-8071-42EB-B6DE-8EED7FBB8374}';
  IID_IArquivosFTPEnvio: TGUID = '{F4CA2542-58E3-4E35-A92B-EDD4F2B0C64C}';
  CLASS_ArquivosFTPEnvio: TGUID = '{E58EFC92-7D37-456D-9D13-66078072DD39}';
  IID_IFormasPagamentoIdentificador: TGUID = '{A7945070-3DFD-48E7-8A47-4A41B9950F28}';
  CLASS_FormasPagamentoIdentificador: TGUID = '{20AD32F3-F0B7-4B17-A528-A4E6CBEE11BC}';
  IID_IOcorrenciaSistema: TGUID = '{98C65F81-DE35-4E9F-B474-3876C0A79619}';
  CLASS_OcorrenciaSistema: TGUID = '{D83147D5-2E11-4928-AB59-15B16AFFDF24}';
  IID_IOcorrenciasSistema: TGUID = '{8EB77B09-396B-480E-9442-3E3F5C5A539C}';
  CLASS_OcorrenciasSistema: TGUID = '{534F4843-272B-476B-8471-F6BC10006282}';
  IID_IFormasPagamentoOS: TGUID = '{00DD0343-1CC4-44EE-A2A2-75FFF6A1C17B}';
  CLASS_FormasPagamentoOS: TGUID = '{3599FA90-435B-4FD7-B810-01D070A907BE}';
  IID_IFabricanteIdentificador: TGUID = '{4F89A0A0-7218-470C-9893-F199AF640660}';
  CLASS_FabricanteIdentificador: TGUID = '{C7C6A24F-38EF-4CB8-B48D-6862A6CC543C}';
  IID_IFabricantesIdentificador: TGUID = '{B992F8CC-4539-49ED-A920-2527B906ACF5}';
  CLASS_FabricantesIdentificador: TGUID = '{1EF2C936-1126-4567-AC32-850CCC7F8E83}';
  IID_IIdentificacoesDuplas: TGUID = '{2836A773-18D9-4552-8F32-3864AC8D0BD6}';
  CLASS_IdentificacoesDuplas: TGUID = '{461C45BF-7662-4809-B727-1B6E5B7485FF}';
  IID_IProdutosAcessorios: TGUID = '{6D5A4601-A66B-47CA-A384-02808189CC57}';
  CLASS_ProdutosAcessorios: TGUID = '{7C0FCDAA-C794-4617-9DEF-9B17B919F8E9}';
  IID_ISituacoesOS: TGUID = '{26CC2A89-FA66-4806-B234-7DB55E7F7CF8}';
  CLASS_SituacoesOS: TGUID = '{DF4EFA9B-ACB6-42B6-92BF-CB95EEA5F098}';
  IID_IEndereco: TGUID = '{B4D5FA36-ED62-4FCD-94F9-D843A297AF20}';
  CLASS_Endereco: TGUID = '{022A5ED7-5C4E-43B6-A21E-047EB266B6B4}';
  IID_IOrdemServico: TGUID = '{DB87F942-FC34-49D3-B172-C239BCFA9004}';
  CLASS_OrdemServico: TGUID = '{6343AC2D-836E-4D59-8336-16D4B895A69F}';
  IID_IOrdensServico: TGUID = '{E63D6ADE-E242-4F2A-9BAC-7645DAE7AE01}';
  CLASS_OrdensServico: TGUID = '{D23C44D2-C127-4B83-AEF4-9B29959E7C23}';
  IID_IOrdemServicoResumida: TGUID = '{663ED8CF-70ED-4F65-8FE4-CB20859A3604}';
  CLASS_OrdemServicoResumida: TGUID = '{4E071FCF-F641-4633-97BE-87E915042254}';
  IID_IArquivoRemessaPedido: TGUID = '{99550757-4903-4ACC-998F-32CC9643D466}';
  CLASS_ArquivoRemessaPedido: TGUID = '{16E3967E-6913-4F87-9C42-816799FF6BFB}';
  IID_IArquivosRemessaPedido: TGUID = '{FAA118AC-8A1F-4036-A65F-98F6D28A9A6C}';
  CLASS_ArquivosRemessaPedido: TGUID = '{8C670CC8-B472-4526-A3B6-5C30C530FD83}';
  IID_IArquivoFTPRetorno: TGUID = '{FD4C1CD5-ADF3-409A-8EBB-4E07BFFBD5CF}';
  CLASS_ArquivoFTPRetorno: TGUID = '{4ABCFEFD-73F3-423D-861B-54C56F4BC51D}';
  IID_IArquivosFTPRetorno: TGUID = '{A270C216-328D-4379-AA8B-2EBC3A3A61AC}';
  CLASS_ArquivosFTPRetorno: TGUID = '{3740C148-C29B-44FC-913F-319464E88BEE}';
  IID_IEnderecos: TGUID = '{C757BCBF-2E45-4487-AE9C-D9FD623B43E9}';
  CLASS_Enderecos: TGUID = '{D40FDEE7-0FC1-4E8A-9D45-86390E4B4F5E}';
  IID_IRotinasFTPRetorno: TGUID = '{4EACFFAA-9263-4BC7-8D5F-BCC6FDA0229C}';
  CLASS_RotinasFTPRetorno: TGUID = '{DFB844F2-BAE9-4B3A-8C2F-344D21C35DD9}';
  IID_IEmailEnvio: TGUID = '{6C535830-D1AA-4951-92CD-91F316E016A3}';
  CLASS_EmailEnvio: TGUID = '{B5419DA5-96B8-410A-8115-E54157E309B4}';
  IID_IEmailsEnvio: TGUID = '{F07FCC5B-959F-44FF-A862-23EBCE1AB90B}';
  CLASS_EmailsEnvio: TGUID = '{341B83D5-9E64-4FDA-9458-56D0ADEE90A2}';
  IID_ISituacoesCodigoSISBOV: TGUID = '{0EDD9CA7-576C-406F-B758-F64DEA3019BE}';
  CLASS_SituacoesCodigoSISBOV: TGUID = '{005F173E-8BE5-4A5D-BEAF-795777D6417B}';
  IID_ITiposEmail: TGUID = '{805EC0EA-909E-4756-830F-B96FD341011B}';
  CLASS_TiposEmail: TGUID = '{04EBF9EB-3E21-4D37-9D36-F50AC7854520}';
  IID_ISituacoesEmail: TGUID = '{6F51F637-1E21-41A6-9C11-47DE67632F65}';
  CLASS_SituacoesEmail: TGUID = '{4712BF81-A4CE-4070-83F0-2987E7A99003}';
  IID_ISituacoesFTP: TGUID = '{D7398834-4FDD-418B-AFD0-1EFB5A81B704}';
  CLASS_SituacoesFTP: TGUID = '{FC8F9E84-881B-496E-9328-6DE0656F81C9}';
  IID_ITiposMensagem: TGUID = '{6F7046A0-1A55-4219-8EF5-1017E3CAF68B}';
  CLASS_TiposMensagem: TGUID = '{04A6290E-9FC0-4E92-9665-51A80A233BCA}';
  IID_IRotinasFTPEnvio: TGUID = '{6C7E4E3B-6455-4B52-98F2-60CA99A547FB}';
  CLASS_RotinasFTPEnvio: TGUID = '{E71E2163-C5AD-49E8-B5FA-8FCEACE80DE4}';
  IID_IAplicativos: TGUID = '{04C035A7-CFDF-4CFA-AC93-194F6B731FE4}';
  CLASS_Aplicativos: TGUID = '{AE422A68-F0A1-40A5-8338-9619502560C6}';
  IID_IImportacoesFabricante: TGUID = '{93591B3A-0513-416B-942B-D90956DA8D87}';
  CLASS_ImportacoesFabricante: TGUID = '{033C07CC-83E0-4AA2-8F84-8B79034191BD}';
  IID_IImportacaoFabricante: TGUID = '{0460F646-3496-4285-96F2-93F31B04C85D}';
  CLASS_ImportacaoFabricante: TGUID = '{7832ACF6-753A-477B-9C60-7C9DD4FB2516}';
  IID_ISituacoesArqImport: TGUID = '{E948FC93-C358-4FA3-8CA2-60A16F7EE6EE}';
  CLASS_SituacoesArqImport: TGUID = '{E73BF260-2FAA-4178-80C0-78359634EE29}';
  IID_IMenus: TGUID = '{CAD9D2C3-0799-49AE-BDCC-3F0E0EA323F9}';
  CLASS_Menus: TGUID = '{7A0C6634-D1B2-4D02-8370-E17F20470454}';
  IID_IBoletoBancario: TGUID = '{CC500A10-6DD3-4D89-982E-5CA9A3C9B0E8}';
  CLASS_BoletoBancario: TGUID = '{14561894-ADC2-45A2-96C1-F5D0CE4B411D}';
  IID_IBoletosBancario: TGUID = '{7CD17E2C-02F4-47E4-9A0F-E2E96125D539}';
  CLASS_BoletosBancario: TGUID = '{5AEB5509-45EA-4D69-AC2D-A8B27AE7D1BF}';
  IID_IIdentificacoesBancarias: TGUID = '{A3D8EC70-3F61-4A72-AC02-86D9428FC709}';
  CLASS_IdentificacoesBancarias: TGUID = '{C20EF486-B876-496D-BDF7-13DEF9E63BC1}';
  IID_IDownloads: TGUID = '{93A7C3EF-2EBB-48AA-B105-1C344F221457}';
  CLASS_Downloads: TGUID = '{700D4DDA-1597-413E-AAE3-BD5916A3E540}';
  IID_ITiposPropriedades: TGUID = '{80C187F5-5256-45B2-A359-C5E98234D218}';
  CLASS_TiposPropriedades: TGUID = '{8AA91318-49AB-4492-A421-11E84AA967F1}';
  IID_IInventariosAnimais: TGUID = '{943AAC96-4D7A-4766-B070-F047DF7F3ED7}';
  CLASS_InventariosAnimais: TGUID = '{705148EB-F43F-4AFD-A6F8-06969009C341}';
  IID_IInventariosCodigosSisbov: TGUID = '{E290A53E-1181-4A35-B172-5120AC6748C5}';
  CLASS_InventariosCodigosSisbov: TGUID = '{038EC135-8B21-41A1-B8C8-D9621E5AFF48}';
  IID_ITmpAplicaEvento: TGUID = '{9635C176-DB3E-4CD4-83DF-5C42DD0CDAF6}';
  CLASS_TmpAplicaEvento: TGUID = '{2F02B98F-E52B-4256-A37B-1A6CA43BD6DB}';
  IID_ITipoPropriedade: TGUID = '{B26FDC43-7142-4E59-870D-F0C663B7D90D}';
  CLASS_TipoPropriedade: TGUID = '{BD80BDEA-9932-4759-81A6-1AB6DDCB8FB7}';
  IID_ITipoPropriedades: TGUID = '{51BA265A-A505-428D-B55C-1E47A3961BBF}';
  CLASS_TipoPropriedades: TGUID = '{ABBC0E35-DD48-439C-BCA2-4BBDDA6FC542}';
  IID_ISolicitacaoReimpressao: TGUID = '{8351D2FA-E97E-4BB7-81FC-1C7463B159B9}';
  CLASS_SolicitacaoReimpressao: TGUID = '{FA9527D1-6D04-45CA-9364-4A612FA6022F}';
  IID_ICriptografia: TGUID = '{0FCA780A-760E-4D7C-8964-25CF6CD7EF81}';
  CLASS_Criptografia: TGUID = '{71B14737-C9FA-4DFC-B370-C47806A37144}';
type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
  ISessao = interface;
  ISessaoDisp = dispinterface;
  IVisita = interface;
  IVisitaDisp = dispinterface;
  IMensagem = interface;
  IMensagemDisp = dispinterface;
  IMensagens = interface;
  IMensagensDisp = dispinterface;
  IBanner = interface;
  IBannerDisp = dispinterface;
  IBanners = interface;
  IBannersDisp = dispinterface;
  IBannersVisita = interface;
  IBannersVisitaDisp = dispinterface;
  ITiposBanner = interface;
  ITiposBannerDisp = dispinterface;
  ITiposPagina = interface;
  ITiposPaginaDisp = dispinterface;
  ILayoutsPagina = interface;
  ILayoutsPaginaDisp = dispinterface;
  IGrupoPaginas = interface;
  IGrupoPaginasDisp = dispinterface;
  IGruposPaginas = interface;
  IGruposPaginasDisp = dispinterface;
  IBannersDefault = interface;
  IBannersDefaultDisp = dispinterface;
  IPaginas = interface;
  IPaginasDisp = dispinterface;
  ITiposTarget = interface;
  ITiposTargetDisp = dispinterface;
  IAnunciante = interface;
  IAnuncianteDisp = dispinterface;
  IAnunciantes = interface;
  IAnunciantesDisp = dispinterface;
  IPrograma = interface;
  IProgramaDisp = dispinterface;
  IProgramas = interface;
  IProgramasDisp = dispinterface;
  IResultadosAnuncio = interface;
  IResultadosAnuncioDisp = dispinterface;
  IUsuario = interface;
  IUsuarioDisp = dispinterface;
  IItemMenu = interface;
  IItemMenuDisp = dispinterface;
  IBloqueio = interface;
  IBloqueioDisp = dispinterface;
  IProdutor = interface;
  IProdutorDisp = dispinterface;
  IAcesso = interface;
  IAcessoDisp = dispinterface;
  IPessoas = interface;
  IPessoasDisp = dispinterface;
  IPapeis = interface;
  IPapeisDisp = dispinterface;
  IUsuarios = interface;
  IUsuariosDisp = dispinterface;
  IComunicado = interface;
  IComunicadoDisp = dispinterface;
  IComunicados = interface;
  IComunicadosDisp = dispinterface;
  IBloqueios = interface;
  IBloqueiosDisp = dispinterface;
  IPerfil = interface;
  IPerfilDisp = dispinterface;
  IAcessoTecnicoProdutor = interface;
  IAcessoTecnicoProdutorDisp = dispinterface;
  IAcessoAssociacaoProdutor = interface;
  IAcessoAssociacaoProdutorDisp = dispinterface;
  IPerfis = interface;
  IPerfisDisp = dispinterface;
  IMotivoBloqueio = interface;
  IMotivoBloqueioDisp = dispinterface;
  IMotivosBloqueio = interface;
  IMotivosBloqueioDisp = dispinterface;
  IPaises = interface;
  IPaisesDisp = dispinterface;
  ICodigosSisbov = interface;
  ICodigosSisbovDisp = dispinterface;
  IEstados = interface;
  IEstadosDisp = dispinterface;
  IMicroRegioes = interface;
  IMicroRegioesDisp = dispinterface;
  IRacas = interface;
  IRacasDisp = dispinterface;
  IPelagens = interface;
  IPelagensDisp = dispinterface;
  ILocal = interface;
  ILocalDisp = dispinterface;
  ILocais = interface;
  ILocaisDisp = dispinterface;
  ITiposOrigem = interface;
  ITiposOrigemDisp = dispinterface;
  IFazendas = interface;
  IFazendasDisp = dispinterface;
  IFazenda = interface;
  IFazendaDisp = dispinterface;
  IRegimesAlimentares = interface;
  IRegimesAlimentaresDisp = dispinterface;
  IAssociacoesRaca = interface;
  IAssociacoesRacaDisp = dispinterface;
  IGrausSangue = interface;
  IGrausSangueDisp = dispinterface;
  ITiposIdentificador = interface;
  ITiposIdentificadorDisp = dispinterface;
  ICategoriasAnimal = interface;
  ICategoriasAnimalDisp = dispinterface;
  ITiposFonteAgua = interface;
  ITiposFonteAguaDisp = dispinterface;
  IAnimal = interface;
  IAnimalDisp = dispinterface;
  IAnimais = interface;
  IAnimaisDisp = dispinterface;
  ILote = interface;
  ILoteDisp = dispinterface;
  ILotes = interface;
  ILotesDisp = dispinterface;
  IRaca = interface;
  IRacaDisp = dispinterface;
  ILocalidade = interface;
  ILocalidadeDisp = dispinterface;
  ILocalidades = interface;
  ILocalidadesDisp = dispinterface;
  IPelagem = interface;
  IPelagemDisp = dispinterface;
  IPessoaSecundaria = interface;
  IPessoaSecundariaDisp = dispinterface;
  IPapeisSecundarios = interface;
  IPapeisSecundariosDisp = dispinterface;
  IPessoasSecundarias = interface;
  IPessoasSecundariasDisp = dispinterface;
  IFazendaTrabalho = interface;
  IFazendaTrabalhoDisp = dispinterface;
  IOpcoesEnvioComunicado = interface;
  IOpcoesEnvioComunicadoDisp = dispinterface;
  IPessoa = interface;
  IPessoaDisp = dispinterface;
  IPais = interface;
  IPaisDisp = dispinterface;
  IEstado = interface;
  IEstadoDisp = dispinterface;
  ITiposContato = interface;
  ITiposContatoDisp = dispinterface;
  ITiposEndereco = interface;
  ITiposEnderecoDisp = dispinterface;
  IMicroRegiao = interface;
  IMicroRegiaoDisp = dispinterface;
  IPropriedadeRural = interface;
  IPropriedadeRuralDisp = dispinterface;
  IPropriedadesRurais = interface;
  IPropriedadesRuraisDisp = dispinterface;
  IAptidoes = interface;
  IAptidoesDisp = dispinterface;
  IEspecies = interface;
  IEspeciesDisp = dispinterface;
  ITiposMorte = interface;
  ITiposMorteDisp = dispinterface;
  ICausasMorte = interface;
  ICausasMorteDisp = dispinterface;
  IGrausInstrucao = interface;
  IGrausInstrucaoDisp = dispinterface;
  IPosicoesIdentificador = interface;
  IPosicoesIdentificadorDisp = dispinterface;
  IAnimalResumido = interface;
  IAnimalResumidoDisp = dispinterface;
  IFiliacao = interface;
  IFiliacaoDisp = dispinterface;
  IRegistro = interface;
  IRegistroDisp = dispinterface;
  IAssociacaoRaca = interface;
  IAssociacaoRacaDisp = dispinterface;
  IGrauSangue = interface;
  IGrauSangueDisp = dispinterface;
  ITiposLugar = interface;
  ITiposLugarDisp = dispinterface;
  ISituacoesSisBov = interface;
  ISituacoesSisBovDisp = dispinterface;
  IPessoasContatos = interface;
  IPessoasContatosDisp = dispinterface;
  IIdentificadorDoProdutor = interface;
  IIdentificadorDoProdutorDisp = dispinterface;
  IParametro = interface;
  IParametroDisp = dispinterface;
  IGrandezasResumo = interface;
  IGrandezasResumoDisp = dispinterface;
  IGruposEvento = interface;
  IGruposEventoDisp = dispinterface;
  ITiposEvento = interface;
  ITiposEventoDisp = dispinterface;
  ITipoInsumo = interface;
  ITipoInsumoDisp = dispinterface;
  ITiposInsumo = interface;
  ITiposInsumoDisp = dispinterface;
  ISubTipoInsumo = interface;
  ISubTipoInsumoDisp = dispinterface;
  ISubTiposInsumo = interface;
  ISubTiposInsumoDisp = dispinterface;
  IUnidadeMedida = interface;
  IUnidadeMedidaDisp = dispinterface;
  IUnidadesMedida = interface;
  IUnidadesMedidaDisp = dispinterface;
  IFabricanteInsumo = interface;
  IFabricanteInsumoDisp = dispinterface;
  IFabricantesInsumo = interface;
  IFabricantesInsumoDisp = dispinterface;
  IEvento = interface;
  IEventoDisp = dispinterface;
  IEventos = interface;
  IEventosDisp = dispinterface;
  IMudancasCategoriaAnimal = interface;
  IMudancasCategoriaAnimalDisp = dispinterface;
  IInsumo = interface;
  IInsumoDisp = dispinterface;
  IInsumos = interface;
  IInsumosDisp = dispinterface;
  IEntradaInsumo = interface;
  IEntradaInsumoDisp = dispinterface;
  IEntradasInsumo = interface;
  IEntradasInsumoDisp = dispinterface;
  IRelatorios = interface;
  IRelatoriosDisp = dispinterface;
  IRelatorio = interface;
  IRelatorioDisp = dispinterface;
  IOrientacoes = interface;
  IOrientacoesDisp = dispinterface;
  ITamanhosFonte = interface;
  ITamanhosFonteDisp = dispinterface;
  ILargurasLinhaRelatorio = interface;
  ILargurasLinhaRelatorioDisp = dispinterface;
  IInterfaceSisbov = interface;
  IInterfaceSisbovDisp = dispinterface;
  ITiposArquivoSisBov = interface;
  ITiposArquivoSisBovDisp = dispinterface;
  ITiposSubEventoSanitario = interface;
  ITiposSubEventoSanitarioDisp = dispinterface;
  IArquivoSisbov = interface;
  IArquivoSisbovDisp = dispinterface;
  IAnimaisVisita = interface;
  IAnimaisVisitaDisp = dispinterface;
  IAnimalVisita = interface;
  IAnimalVisitaDisp = dispinterface;
  IReprodutorMultiplo = interface;
  IReprodutorMultiploDisp = dispinterface;
  IReprodutoresMultiplos = interface;
  IReprodutoresMultiplosDisp = dispinterface;
  IParametrosPesoAjustado = interface;
  IParametrosPesoAjustadoDisp = dispinterface;
  IModelosCertificado = interface;
  IModelosCertificadoDisp = dispinterface;
  IImportacoes = interface;
  IImportacoesDisp = dispinterface;
  IImportacao = interface;
  IImportacaoDisp = dispinterface;
  ITipoAgrupamentoRacas = interface;
  ITipoAgrupamentoRacasDisp = dispinterface;
  ITiposAgrupamentoRacas = interface;
  ITiposAgrupamentoRacasDisp = dispinterface;
  IAgrupamentoRacas = interface;
  IAgrupamentoRacasDisp = dispinterface;
  IAgrupamentosRacas = interface;
  IAgrupamentosRacasDisp = dispinterface;
  ITarefa = interface;
  ITarefaDisp = dispinterface;
  ITarefas = interface;
  ITarefasDisp = dispinterface;
  ISituacoesTarefa = interface;
  ISituacoesTarefaDisp = dispinterface;
  IMovimentoEstoqueSemen = interface;
  IMovimentoEstoqueSemenDisp = dispinterface;
  IEstoqueSemen = interface;
  IEstoqueSemenDisp = dispinterface;
  ITiposMovimentoEstoqueSemen = interface;
  ITiposMovimentoEstoqueSemenDisp = dispinterface;
  ITiposAvaliacao = interface;
  ITiposAvaliacaoDisp = dispinterface;
  ITipoAvaliacao = interface;
  ITipoAvaliacaoDisp = dispinterface;
  ICaracteristicasAvaliacao = interface;
  ICaracteristicasAvaliacaoDisp = dispinterface;
  ICaracteristicaAvaliacao = interface;
  ICaracteristicaAvaliacaoDisp = dispinterface;
  ISituacoesCria = interface;
  ISituacoesCriaDisp = dispinterface;
  IGrausDificuldade = interface;
  IGrausDificuldadeDisp = dispinterface;
  IMotivosDescarte = interface;
  IMotivosDescarteDisp = dispinterface;
  IImportacoesDadoGeral = interface;
  IImportacoesDadoGeralDisp = dispinterface;
  IImportacaoDadoGeral = interface;
  IImportacaoDadoGeralDisp = dispinterface;
  IImportacaoSISBOV = interface;
  IImportacaoSISBOVDisp = dispinterface;
  IImportacoesSISBOV = interface;
  IImportacoesSISBOVDisp = dispinterface;
  ITipoOrigemArqImport = interface;
  ITipoOrigemArqImportDisp = dispinterface;
  ITiposOrigemArqImport = interface;
  ITiposOrigemArqImportDisp = dispinterface;
  IRegimesPosseUso = interface;
  IRegimesPosseUsoDisp = dispinterface;
  IArquivoFTPEnvio = interface;
  IArquivoFTPEnvioDisp = dispinterface;
  IArquivosFTPEnvio = interface;
  IArquivosFTPEnvioDisp = dispinterface;
  IFormasPagamentoIdentificador = interface;
  IFormasPagamentoIdentificadorDisp = dispinterface;
  IOcorrenciaSistema = interface;
  IOcorrenciaSistemaDisp = dispinterface;
  IOcorrenciasSistema = interface;
  IOcorrenciasSistemaDisp = dispinterface;
  IFormasPagamentoOS = interface;
  IFormasPagamentoOSDisp = dispinterface;
  IFabricanteIdentificador = interface;
  IFabricanteIdentificadorDisp = dispinterface;
  IFabricantesIdentificador = interface;
  IFabricantesIdentificadorDisp = dispinterface;
  IIdentificacoesDuplas = interface;
  IIdentificacoesDuplasDisp = dispinterface;
  IProdutosAcessorios = interface;
  IProdutosAcessoriosDisp = dispinterface;
  ISituacoesOS = interface;
  ISituacoesOSDisp = dispinterface;
  IEndereco = interface;
  IEnderecoDisp = dispinterface;
  IOrdemServico = interface;
  IOrdemServicoDisp = dispinterface;
  IOrdensServico = interface;
  IOrdensServicoDisp = dispinterface;
  IOrdemServicoResumida = interface;
  IOrdemServicoResumidaDisp = dispinterface;
  IArquivoRemessaPedido = interface;
  IArquivoRemessaPedidoDisp = dispinterface;
  IArquivosRemessaPedido = interface;
  IArquivosRemessaPedidoDisp = dispinterface;
  IArquivoFTPRetorno = interface;
  IArquivoFTPRetornoDisp = dispinterface;
  IArquivosFTPRetorno = interface;
  IArquivosFTPRetornoDisp = dispinterface;
  IEnderecos = interface;
  IEnderecosDisp = dispinterface;
  IRotinasFTPRetorno = interface;
  IRotinasFTPRetornoDisp = dispinterface;
  IEmailEnvio = interface;
  IEmailEnvioDisp = dispinterface;
  IEmailsEnvio = interface;
  IEmailsEnvioDisp = dispinterface;
  ISituacoesCodigoSISBOV = interface;
  ISituacoesCodigoSISBOVDisp = dispinterface;
  ITiposEmail = interface;
  ITiposEmailDisp = dispinterface;
  ISituacoesEmail = interface;
  ISituacoesEmailDisp = dispinterface;
  ISituacoesFTP = interface;
  ISituacoesFTPDisp = dispinterface;
  ITiposMensagem = interface;
  ITiposMensagemDisp = dispinterface;
  IRotinasFTPEnvio = interface;
  IRotinasFTPEnvioDisp = dispinterface;
  IAplicativos = interface;
  IAplicativosDisp = dispinterface;
  IImportacoesFabricante = interface;
  IImportacoesFabricanteDisp = dispinterface;
  IImportacaoFabricante = interface;
  IImportacaoFabricanteDisp = dispinterface;
  ISituacoesArqImport = interface;
  ISituacoesArqImportDisp = dispinterface;
  IMenus = interface;
  IMenusDisp = dispinterface;
  IBoletoBancario = interface;
  IBoletoBancarioDisp = dispinterface;
  IBoletosBancario = interface;
  IBoletosBancarioDisp = dispinterface;
  IIdentificacoesBancarias = interface;
  IIdentificacoesBancariasDisp = dispinterface;
  IDownloads = interface;
  IDownloadsDisp = dispinterface;
  ITiposPropriedades = interface;
  ITiposPropriedadesDisp = dispinterface;
  IInventariosAnimais = interface;
  IInventariosAnimaisDisp = dispinterface;
  IInventariosCodigosSisbov = interface;
  IInventariosCodigosSisbovDisp = dispinterface;
  ITmpAplicaEvento = interface;
  ITmpAplicaEventoDisp = dispinterface;
  ITipoPropriedade = interface;
  ITipoPropriedadeDisp = dispinterface;
  ITipoPropriedades = interface;
  ITipoPropriedadesDisp = dispinterface;
  ISolicitacaoReimpressao = interface;
  ISolicitacaoReimpressaoDisp = dispinterface;
  ICriptografia = interface;
  ICriptografiaDisp = dispinterface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
// *********************************************************************//
  Sessao = ISessao;
  Visita = IVisita;
  Mensagem = IMensagem;
  Mensagens = IMensagens;
  Banner = IBanner;
  Banners = IBanners;
  BannersVisita = IBannersVisita;
  TiposBanner = ITiposBanner;
  TiposPagina = ITiposPagina;
  LayoutsPagina = ILayoutsPagina;
  GrupoPaginas = IGrupoPaginas;
  GruposPaginas = IGruposPaginas;
  BannersDefault = IBannersDefault;
  Paginas = IPaginas;
  TiposTarget = ITiposTarget;
  Anunciante = IAnunciante;
  Anunciantes = IAnunciantes;
  Programa = IPrograma;
  Programas = IProgramas;
  ResultadosAnuncio = IResultadosAnuncio;
  Usuario = IUsuario;
  ItemMenu = IItemMenu;
  Bloqueio = IBloqueio;
  Produtor = IProdutor;
  Acesso = IAcesso;
  Pessoas = IPessoas;
  Papeis = IPapeis;
  Usuarios = IUsuarios;
  Comunicado = IComunicado;
  Comunicados = IComunicados;
  Bloqueios = IBloqueios;
  Perfil = IPerfil;
  AcessoTecnicoProdutor = IAcessoTecnicoProdutor;
  AcessoAssociacaoProdutor = IAcessoAssociacaoProdutor;
  Perfis = IPerfis;
  MotivoBloqueio = IMotivoBloqueio;
  MotivosBloqueio = IMotivosBloqueio;
  Paises = IPaises;
  CodigosSisbov = ICodigosSisbov;
  Estados = IEstados;
  MicroRegioes = IMicroRegioes;
  Racas = IRacas;
  Pelagens = IPelagens;
  Local = ILocal;
  Locais = ILocais;
  TiposOrigem = ITiposOrigem;
  Fazendas = IFazendas;
  Fazenda = IFazenda;
  RegimesAlimentares = IRegimesAlimentares;
  AssociacoesRaca = IAssociacoesRaca;
  GrausSangue = IGrausSangue;
  TiposIdentificador = ITiposIdentificador;
  CategoriasAnimal = ICategoriasAnimal;
  TiposFonteAgua = ITiposFonteAgua;
  Animal = IAnimal;
  Animais = IAnimais;
  Lote = ILote;
  Lotes = ILotes;
  Raca = IRaca;
  Localidade = ILocalidade;
  Localidades = ILocalidades;
  Pelagem = IPelagem;
  PessoaSecundaria = IPessoaSecundaria;
  PapeisSecundarios = IPapeisSecundarios;
  PessoasSecundarias = IPessoasSecundarias;
  FazendaTrabalho = IFazendaTrabalho;
  OpcoesEnvioComunicado = IOpcoesEnvioComunicado;
  Pessoa = IPessoa;
  Pais = IPais;
  Estado = IEstado;
  TiposContato = ITiposContato;
  TiposEndereco = ITiposEndereco;
  MicroRegiao = IMicroRegiao;
  PropriedadeRural = IPropriedadeRural;
  PropriedadesRurais = IPropriedadesRurais;
  Aptidoes = IAptidoes;
  Especies = IEspecies;
  TiposMorte = ITiposMorte;
  CausasMorte = ICausasMorte;
  GrausInstrucao = IGrausInstrucao;
  PosicoesIdentificador = IPosicoesIdentificador;
  AnimalResumido = IAnimalResumido;
  Filiacao = IFiliacao;
  Registro = IRegistro;
  AssociacaoRaca = IAssociacaoRaca;
  GrauSangue = IGrauSangue;
  TiposLugar = ITiposLugar;
  SituacoesSisBov = ISituacoesSisBov;
  PessoasContatos = IPessoasContatos;
  IdentificadorDoProdutor = IIdentificadorDoProdutor;
  Parametro = IParametro;
  GrandezasResumo = IGrandezasResumo;
  GruposEvento = IGruposEvento;
  TiposEvento = ITiposEvento;
  TipoInsumo = ITipoInsumo;
  TiposInsumo = ITiposInsumo;
  SubTipoInsumo = ISubTipoInsumo;
  SubTiposInsumo = ISubTiposInsumo;
  UnidadeMedida = IUnidadeMedida;
  UnidadesMedida = IUnidadesMedida;
  FabricanteInsumo = IFabricanteInsumo;
  FabricantesInsumo = IFabricantesInsumo;
  Evento = IEvento;
  Eventos = IEventos;
  MudancasCategoriaAnimal = IMudancasCategoriaAnimal;
  Insumo = IInsumo;
  Insumos = IInsumos;
  EntradaInsumo = IEntradaInsumo;
  EntradasInsumo = IEntradasInsumo;
  Relatorios = IRelatorios;
  Relatorio = IRelatorio;
  Orientacoes = IOrientacoes;
  TamanhosFonte = ITamanhosFonte;
  LargurasLinhaRelatorio = ILargurasLinhaRelatorio;
  InterfaceSisbov = IInterfaceSisbov;
  TiposArquivoSisBov = ITiposArquivoSisBov;
  TiposSubEventoSanitario = ITiposSubEventoSanitario;
  ArquivoSisbov = IArquivoSisbov;
  AnimaisVisita = IAnimaisVisita;
  AnimalVisita = IAnimalVisita;
  ReprodutorMultiplo = IReprodutorMultiplo;
  ReprodutoresMultiplos = IReprodutoresMultiplos;
  ParametrosPesoAjustado = IParametrosPesoAjustado;
  ModelosCertificado = IModelosCertificado;
  Importacoes = IImportacoes;
  Importacao = IImportacao;
  TipoAgrupamentoRacas = ITipoAgrupamentoRacas;
  TiposAgrupamentoRacas = ITiposAgrupamentoRacas;
  AgrupamentoRacas = IAgrupamentoRacas;
  AgrupamentosRacas = IAgrupamentosRacas;
  Tarefa = ITarefa;
  Tarefas = ITarefas;
  SituacoesTarefa = ISituacoesTarefa;
  MovimentoEstoqueSemen = IMovimentoEstoqueSemen;
  EstoqueSemen = IEstoqueSemen;
  TiposMovimentoEstoqueSemen = ITiposMovimentoEstoqueSemen;
  TiposAvaliacao = ITiposAvaliacao;
  TipoAvaliacao = ITipoAvaliacao;
  CaracteristicasAvaliacao = ICaracteristicasAvaliacao;
  CaracteristicaAvaliacao = ICaracteristicaAvaliacao;
  SituacoesCria = ISituacoesCria;
  GrausDificuldade = IGrausDificuldade;
  MotivosDescarte = IMotivosDescarte;
  ImportacoesDadoGeral = IImportacoesDadoGeral;
  ImportacaoDadoGeral = IImportacaoDadoGeral;
  ImportacaoSISBOV = IImportacaoSISBOV;
  ImportacoesSISBOV = IImportacoesSISBOV;
  TipoOrigemArqImport = ITipoOrigemArqImport;
  TiposOrigemArqImport = ITiposOrigemArqImport;
  RegimesPosseUso = IRegimesPosseUso;
  ArquivoFTPEnvio = IArquivoFTPEnvio;
  ArquivosFTPEnvio = IArquivosFTPEnvio;
  FormasPagamentoIdentificador = IFormasPagamentoIdentificador;
  OcorrenciaSistema = IOcorrenciaSistema;
  OcorrenciasSistema = IOcorrenciasSistema;
  FormasPagamentoOS = IFormasPagamentoOS;
  FabricanteIdentificador = IFabricanteIdentificador;
  FabricantesIdentificador = IFabricantesIdentificador;
  IdentificacoesDuplas = IIdentificacoesDuplas;
  ProdutosAcessorios = IProdutosAcessorios;
  SituacoesOS = ISituacoesOS;
  Endereco = IEndereco;
  OrdemServico = IOrdemServico;
  OrdensServico = IOrdensServico;
  OrdemServicoResumida = IOrdemServicoResumida;
  ArquivoRemessaPedido = IArquivoRemessaPedido;
  ArquivosRemessaPedido = IArquivosRemessaPedido;
  ArquivoFTPRetorno = IArquivoFTPRetorno;
  ArquivosFTPRetorno = IArquivosFTPRetorno;
  Enderecos = IEnderecos;
  RotinasFTPRetorno = IRotinasFTPRetorno;
  EmailEnvio = IEmailEnvio;
  EmailsEnvio = IEmailsEnvio;
  SituacoesCodigoSISBOV = ISituacoesCodigoSISBOV;
  TiposEmail = ITiposEmail;
  SituacoesEmail = ISituacoesEmail;
  SituacoesFTP = ISituacoesFTP;
  TiposMensagem = ITiposMensagem;
  RotinasFTPEnvio = IRotinasFTPEnvio;
  Aplicativos = IAplicativos;
  ImportacoesFabricante = IImportacoesFabricante;
  ImportacaoFabricante = IImportacaoFabricante;
  SituacoesArqImport = ISituacoesArqImport;
  Menus = IMenus;
  BoletoBancario = IBoletoBancario;
  BoletosBancario = IBoletosBancario;
  IdentificacoesBancarias = IIdentificacoesBancarias;
  Downloads = IDownloads;
  TiposPropriedades = ITiposPropriedades;
  InventariosAnimais = IInventariosAnimais;
  InventariosCodigosSisbov = IInventariosCodigosSisbov;
  TmpAplicaEvento = ITmpAplicaEvento;
  TipoPropriedade = ITipoPropriedade;
  TipoPropriedades = ITipoPropriedades;
  SolicitacaoReimpressao = ISolicitacaoReimpressao;
  Criptografia = ICriptografia;


// *********************************************************************//
// Interface: ISessao
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ECDE42FC-9C24-439F-B855-80E1C8260472}
// *********************************************************************//
  ISessao = interface(IDispatch)
    ['{ECDE42FC-9C24-439F-B855-80E1C8260472}']
    function Inicializar(const IdCertificadora: WideString; const NomUsuario: WideString; 
                         const TxtSenha: WideString): Integer; safecall;
    function Mensagens: IDispatch; safecall;
    function Get_Ativa: WordBool; safecall;
    procedure FinalizarTudo(CodClasseNaoFinalizar: Integer); safecall;
    function InicializarBanners: Integer; safecall;
    procedure FinalizarBanners; safecall;
    function Get_Banners: IBanners; safecall;
    function InicializarTiposBanner: Integer; safecall;
    procedure FinalizarTiposBanner; safecall;
    function Get_TiposBanner: ITiposBanner; safecall;
    function InicializarTiposPagina: Integer; safecall;
    procedure FinalizarTiposPagina; safecall;
    function Get_TiposPagina: ITiposPagina; safecall;
    function InicializarLayoutsPagina: Integer; safecall;
    procedure FinalizarLayoutsPagina; safecall;
    function Get_LayoutsPagina: ILayoutsPagina; safecall;
    function InicializarGruposPaginas: Integer; safecall;
    procedure FinalizarGruposPaginas; safecall;
    function Get_GruposPaginas: IGruposPaginas; safecall;
    function InicializarBannersDefault: Integer; safecall;
    procedure FinalizarBannersDefault; safecall;
    function Get_BannersDefault: IBannersDefault; safecall;
    function InicializarPaginas: Integer; safecall;
    procedure FinalizarPaginas; safecall;
    function Get_Paginas: IPaginas; safecall;
    function InicializarTiposTarget: Integer; safecall;
    procedure FinalizarTiposTarget; safecall;
    function Get_TiposTarget: ITiposTarget; safecall;
    function InicializarAnunciantes: Integer; safecall;
    procedure FinalizarAnunciantes; safecall;
    function Get_Anunciantes: IAnunciantes; safecall;
    function InicializarProgramas: Integer; safecall;
    procedure FinalizarProgramas; safecall;
    function Get_Programas: IProgramas; safecall;
    function InicializarResultadosAnuncio: Integer; safecall;
    procedure FinalizarResultadosAnuncio; safecall;
    function Get_ResultadosAnuncio: IResultadosAnuncio; safecall;
    procedure Finalizar; safecall;
    function BuscarTextoMensagem(Codigo: Integer): WideString; safecall;
    procedure FinalizarAcesso; safecall;
    function Get_Acesso: IAcesso; safecall;
    function BuscarTipoMensagem(Codigo: Integer): Integer; safecall;
    function InicializarPessoas: Integer; safecall;
    procedure FinalizarPessoas; safecall;
    function Get_Pessoas: IPessoas; safecall;
    function InicializarPapeis: Integer; safecall;
    procedure FinalizarPapeis; safecall;
    function Get_Papeis: IPapeis; safecall;
    function InicializarUsuarios: Integer; safecall;
    procedure FinalizarUsuarios; safecall;
    function Get_Usuarios: IUsuarios; safecall;
    function InicializarComunicados: Integer; safecall;
    procedure FinalizarComunicados; safecall;
    function Get_Comunicados: IComunicados; safecall;
    function InicializarBloqueios: Integer; safecall;
    procedure FinalizarBloqueios; safecall;
    function Get_Bloqueios: IBloqueios; safecall;
    function InicializarPerfis: Integer; safecall;
    procedure FinalizarPerfis; safecall;
    function Get_Perfis: IPerfis; safecall;
    function InicializarAcessoTecnicoProdutor: Integer; safecall;
    procedure FinalizarAcessoTecnicoProdutor; safecall;
    function Get_AcessoTecnicoProdutor: IAcessoTecnicoProdutor; safecall;
    function InicializarAcessoAssociacaoProdutor: Integer; safecall;
    procedure FinalizarAcessoAssociacaoProdutor; safecall;
    function Get_AcessoAssociacaoProdutor: IAcessoAssociacaoProdutor; safecall;
    procedure LimparMensagens; safecall;
    function InicializarMotivosBloqueio: Integer; safecall;
    procedure FinalizarMotivosBloqueio; safecall;
    function Get_MotivosBloqueio: IMotivosBloqueio; safecall;
    function InicializarPaises: Integer; safecall;
    procedure FinalizarPaises; safecall;
    function Get_Paises: IPaises; safecall;
    function InicializarCodigosSisbov: Integer; safecall;
    procedure FinalizarCodigosSisbov; safecall;
    function Get_CodigosSisbov: ICodigosSisbov; safecall;
    function InicializarEstados: Integer; safecall;
    procedure FinalizarEstados; safecall;
    function Get_Estados: IEstados; safecall;
    function InicializarMicroRegioes: Integer; safecall;
    procedure FinalizarMicroRegioes; safecall;
    function Get_MicroRegioes: IMicroRegioes; safecall;
    function InicializarRacas: Integer; safecall;
    procedure FinalizarRacas; safecall;
    function Get_Racas: IRacas; safecall;
    function InicializarPelagens: Integer; safecall;
    procedure FinalizarPelagens; safecall;
    function Get_Pelagens: IPelagens; safecall;
    function InicializarLocais: Integer; safecall;
    procedure FinalizarLocais; safecall;
    function Get_Locais: ILocais; safecall;
    function InicializarTiposOrigem: Integer; safecall;
    procedure FinalizarTiposOrigem; safecall;
    function Get_TiposOrigem: ITiposOrigem; safecall;
    function InicializarFazendas: Integer; safecall;
    procedure FinalizarFazendas; safecall;
    function Get_Fazendas: IFazendas; safecall;
    function InicializarRegimesAlimentares: Integer; safecall;
    procedure FinalizarRegimesAlimentares; safecall;
    function Get_RegimesAlimentares: IRegimesAlimentares; safecall;
    function InicializarAssociacoesRaca: Integer; safecall;
    procedure FinalizarAssociacoesRaca; safecall;
    function Get_AssociacoesRaca: IAssociacoesRaca; safecall;
    function InicializarGrausSangue: Integer; safecall;
    procedure FinalizarGrausSangue; safecall;
    function Get_GrausSangue: IGrausSangue; safecall;
    function InicializarTiposIdentificador: Integer; safecall;
    procedure FinalizarTiposIdentificador; safecall;
    function Get_TiposIdentificador: ITiposIdentificador; safecall;
    function InicializarCategoriasAnimal: Integer; safecall;
    procedure FinalizarCategoriasAnimal; safecall;
    function Get_CategoriasAnimal: ICategoriasAnimal; safecall;
    function InicializarTiposFonteAgua: Integer; safecall;
    procedure FinalizarTiposFonteAgua; safecall;
    function Get_TiposFonteAgua: TiposFonteAgua; safecall;
    function InicializarAnimais: Integer; safecall;
    procedure FinalizarAnimais; safecall;
    function Get_Animais: IAnimais; safecall;
    function InicializarLotes: Integer; safecall;
    procedure FinalizarLotes; safecall;
    function Get_Lotes: ILotes; safecall;
    function InicializarLocalidades: Integer; safecall;
    procedure FinalizarLocalidades; safecall;
    function Get_Localidades: ILocalidades; safecall;
    function InicializarPapeisSecundarios: Integer; safecall;
    procedure FinalizarPapeisSecundarios; safecall;
    function Get_PapeisSecundarios: IPapeisSecundarios; safecall;
    function InicializarPessoasSecundarias: Integer; safecall;
    procedure FinalizarPessoasSecundarias; safecall;
    function Get_PessoasSecundarias: IPessoasSecundarias; safecall;
    function InicializarOpcoesEnvioComunicado: Integer; safecall;
    procedure FinalizarOpcoesEnvioComunicado; safecall;
    function Get_OpcoesEnvioComunicado: IOpcoesEnvioComunicado; safecall;
    function InicializarTiposContato: Integer; safecall;
    procedure FinalizarTiposContato; safecall;
    function Get_TiposContato: ITiposContato; safecall;
    function InicializarTiposEndereco: Integer; safecall;
    procedure FinalizarTiposEndereco; safecall;
    function Get_TiposEndereco: ITiposEndereco; safecall;
    function InicializarPropriedadesRurais: Integer; safecall;
    procedure FinalizarPropriedadesRurais; safecall;
    function Get_PropriedadesRurais: IPropriedadesRurais; safecall;
    function InicializarAptidoes: Integer; safecall;
    procedure FinalizarAptidoes; safecall;
    function Get_Aptidoes: IAptidoes; safecall;
    function InicializarEspecies: Integer; safecall;
    procedure FinalizarEspecies; safecall;
    function Get_Especies: IEspecies; safecall;
    function InicializarTiposMorte: Integer; safecall;
    procedure FinalizarTiposMorte; safecall;
    function Get_TiposMorte: ITiposMorte; safecall;
    function InicializarCausasMorte: Integer; safecall;
    procedure FinalizarCausasMorte; safecall;
    function Get_CausasMorte: ICausasMorte; safecall;
    function InicializarGrausInstrucao: Integer; safecall;
    procedure FinalizarGrausInstrucao; safecall;
    function Get_GrausInstrucao: IGrausInstrucao; safecall;
    procedure FinalizarPosicoesIdentificador; safecall;
    function InicializarPosicoesIdentificador: Integer; safecall;
    function Get_PosicoesIdentificador: IPosicoesIdentificador; safecall;
    function Get_TiposLugar: ITiposLugar; safecall;
    function InicializarTiposLugar: Integer; safecall;
    procedure FinalizarTiposLugar; safecall;
    function Get_SituacoesSisBov: ISituacoesSisBov; safecall;
    function InicializarSituacoesSisBov: Integer; safecall;
    procedure FinalizarSituacoesSisBov; safecall;
    function Get_PessoasContatos: IPessoasContatos; safecall;
    function InicializarPessoasContatos: Integer; safecall;
    procedure FinalizarPessoasContatos; safecall;
    function AdicionarMensagem(CodMensagem: Integer): Integer; safecall;
    function InicializarGrandezasResumo: Integer; safecall;
    procedure FinalizarGrandezasResumo; safecall;
    function Get_GrandezasResumo: IGrandezasResumo; safecall;
    procedure FinalizarGruposEvento; safecall;
    function InicializarGruposEvento: Integer; safecall;
    function Get_GruposEvento: IGruposEvento; safecall;
    function InicializarTiposEvento: Integer; safecall;
    procedure FinalizarTiposEvento; safecall;
    function Get_TiposEvento: TiposEvento; safecall;
    function InicializarUnidadesMedida: Integer; safecall;
    procedure FinalizarUnidadesMedida; safecall;
    function Get_UnidadesMedida: IUnidadesMedida; safecall;
    function InicializarTiposInsumo: Integer; safecall;
    procedure FinalizarTiposInsumo; safecall;
    function Get_TiposInsumo: ITiposInsumo; safecall;
    function InicializarSubTiposInsumo: Integer; safecall;
    procedure FinalizarSubTiposInsumo; safecall;
    function Get_SubTiposInsumo: ISubTiposInsumo; safecall;
    function InicializarFabricantesInsumo: Integer; safecall;
    procedure FinalizarFabricantesInsumo; safecall;
    function Get_FabricantesInsumo: IFabricantesInsumo; safecall;
    function InicializarEventos: Integer; safecall;
    procedure FinalizarEventos; safecall;
    function Get_Eventos: IEventos; safecall;
    function InicializarMudancasCategoriaAnimal: Integer; safecall;
    procedure FinalizarMudancasCategoriaAnimal; safecall;
    function Get_MudancasCategoriaAnimal: IMudancasCategoriaAnimal; safecall;
    function InicializarInsumos: Integer; safecall;
    procedure FinalizarInsumos; safecall;
    function Get_Insumos: IInsumos; safecall;
    function InicializarEntradasInsumo: Integer; safecall;
    procedure FinalizarEntradasInsumo; safecall;
    function Get_EntradasInsumo: IEntradasInsumo; safecall;
    function InicializarRelatorios: Integer; safecall;
    procedure FinalizarRelatorios; safecall;
    function Get_Relatorios: IRelatorios; safecall;
    function InicializarOrientacoes: Integer; safecall;
    procedure FinalizarOrientacoes; safecall;
    function Get_Orientacoes: IOrientacoes; safecall;
    function InicializarTamanhosFonte: Integer; safecall;
    procedure FinalizarTamanhosFonte; safecall;
    function Get_TamanhosFonte: ITamanhosFonte; safecall;
    function InicializarLargurasLinhaRelatorio: Integer; safecall;
    procedure FinalizarLargurasLinhaRelatorio; safecall;
    function Get_LargurasLinhaRelatorio: ILargurasLinhaRelatorio; safecall;
    function ValorParametroSistema(CodParametro: Integer): WideString; safecall;
    function InicializarInterfaceSisbov: Integer; safecall;
    procedure FinalizarInterfaceSisbov; safecall;
    function Get_InterfaceSisbov: IInterfaceSisbov; safecall;
    function InicializarTiposArquivoSisbov: Integer; safecall;
    procedure FinalizarTiposArquivoSisbov; safecall;
    function Get_TiposArquivoSisBov: ITiposArquivoSisBov; safecall;
    procedure FinalizarTiposSubEventoSanitario; safecall;
    function InicializarTiposSubEventoSanitario: Integer; safecall;
    function Get_TiposSubEventoSanitario: ITiposSubEventoSanitario; safecall;
    function InicializarReprodutoresMultiplos: Integer; safecall;
    procedure FinalizarReprodutoresMultiplos; safecall;
    function Get_ReprodutoresMultiplos: IReprodutoresMultiplos; safecall;
    function InicializarParametrosPesoAjustado: Integer; safecall;
    procedure FinalizarParametrosPesoAjustado; safecall;
    function Get_ParametrosPesoAjustado: IParametrosPesoAjustado; safecall;
    function InicializarModelosCertificado: Integer; safecall;
    procedure FinalizarModelosCertificado; safecall;
    function Get_ModelosCertificado: IModelosCertificado; safecall;
    function InicializarImportacoes: Integer; safecall;
    procedure FinalizarImportacoes; safecall;
    function Get_Importacoes: IImportacoes; safecall;
    function InicializarTiposAgrupamentosRacas: Integer; safecall;
    procedure FinalizarTiposAgrupamentosRacas; safecall;
    function Get_TiposAgrupamentoRacas: ITiposAgrupamentoRacas; safecall;
    function InicializarAgrupamentosRacas: Integer; safecall;
    procedure FinalizarAgrupamentosRacas; safecall;
    function Get_AgrupamentosRacas: IAgrupamentosRacas; safecall;
    function QtdTarefasAgendadas: Integer; safecall;
    function QtdTarefasEmAndamento: Integer; safecall;
    function Get_Tarefas: ITarefas; safecall;
    function InicializarTarefas: Integer; safecall;
    procedure FinalizarTarefas; safecall;
    function Get_SituacoesTarefa: ISituacoesTarefa; safecall;
    function InicializarSituacoesTarefa: Integer; safecall;
    procedure FinalizarSituacoesTarefa; safecall;
    function Get_EstoqueSemen: IEstoqueSemen; safecall;
    function InicializarEstoqueSemen: Integer; safecall;
    procedure FinalizarEstoqueSemen; safecall;
    function Get_TiposMovimentoEstoqueSemen: ITiposMovimentoEstoqueSemen; safecall;
    function InicializarTiposMovimentoEstoqueSemen: Integer; safecall;
    procedure FinalizarTiposMovimentoEstoqueSemen; safecall;
    function Get_CaminhoArquivosCertificadora: WideString; safecall;
    function Get_TiposAvaliacao: ITiposAvaliacao; safecall;
    function InicializarTiposAvaliacao: Integer; safecall;
    procedure FinalizarTiposAvaliacao; safecall;
    function Get_CaracteristicasAvaliacao: ICaracteristicasAvaliacao; safecall;
    function InicializarCaracteristicasAvaliacao: Integer; safecall;
    procedure FinalizarCaracteristicasAvaliacao; safecall;
    function InicializarSituacoesCria: Integer; safecall;
    procedure FinalizarSituacoesCria; safecall;
    function Get_SituacoesCria: ISituacoesCria; safecall;
    function InicializarGrausDificuldade: Integer; safecall;
    procedure FinalizarGrausDificuldade; safecall;
    function Get_GrausDificuldade: IGrausDificuldade; safecall;
    function InicializarMotivosDescarte: Integer; safecall;
    procedure FinalizarMotivosDescarte; safecall;
    function Get_MotivosDescarte: IMotivosDescarte; safecall;
    function InicializarImportacoesSISBOV: Integer; safecall;
    procedure FinalizarImportacoesSISBOV; safecall;
    function Get_ImportacoesSISBOV: IImportacoesSISBOV; safecall;
    function InicializarImportacoesDadoGeral: Integer; safecall;
    procedure FinalizarImportacoesDadoGeral; safecall;
    function Get_ImportacoesDadoGeral: IImportacoesDadoGeral; safecall;
    function InicializarTiposOrigemArqImport: Integer; safecall;
    procedure FinalizarTiposOrigemArqImport; safecall;
    function Get_TiposOrigemArqImport: ITiposOrigemArqImport; safecall;
    function InicializarRegimesPosseUso: Integer; safecall;
    procedure FinalizarRegimesPosseUso; safecall;
    function Get_RegimesPosseUso: IRegimesPosseUso; safecall;
    function Get_ArquivosFTPEnvio: IArquivosFTPEnvio; safecall;
    function InicializarArquivosFTPEnvio: Integer; safecall;
    procedure FinalizarArquivosFTPEnvio; safecall;
    function Get_OcorrenciasSistema: IOcorrenciasSistema; safecall;
    function InicializarOcorrenciasSistema: Integer; safecall;
    procedure FinalizarOcorrenciasSistema; safecall;
    function Get_FormasPagamentoIdentificador: IFormasPagamentoIdentificador; safecall;
    function InicializarFormasPagamentoIdentificador: Integer; safecall;
    procedure FinalizarFormasPagamentoIdentificador; safecall;
    function Get_FormasPagamentoOS: IFormasPagamentoOS; safecall;
    function InicializarFormasPagamentoOS: Integer; safecall;
    procedure FinalizarFormasPagamentoOS; safecall;
    function Get_FabricantesIdentificador: IFabricantesIdentificador; safecall;
    function InicializarFabricantesIdentificador: Integer; safecall;
    procedure FinalizarFabricantesIdentificador; safecall;
    function Get_IdentificacoesDuplas: IIdentificacoesDuplas; safecall;
    function InicializarIdentificacoesDuplas: Integer; safecall;
    procedure FinalizarIdentificacoesDuplas; safecall;
    function Get_ProdutosAcessorios: IProdutosAcessorios; safecall;
    function InicializarProdutosAcessorios: Integer; safecall;
    procedure FinalizarProdutosAcessorios; safecall;
    function Get_SituacoesOS: ISituacoesOS; safecall;
    function InicializarSituacoesOS: Integer; safecall;
    procedure FinalizarSituacoesOS; safecall;
    function Get_ArquivosRemessaPedido: IArquivosRemessaPedido; safecall;
    function InicializarArquivosRemessaPedido: Integer; safecall;
    procedure FinalizarArquivosRemessaPedido; safecall;
    function InicializarOrdensServico: Integer; safecall;
    procedure FinalizarOrdensServico; safecall;
    function Get_OrdensServico: IOrdensServico; safecall;
    function Get_ArquivosFTPRetorno: IArquivosFTPRetorno; safecall;
    function InicializarArquivosFTPRetorno: Integer; safecall;
    procedure FinalizarArquivosFTPRetorno; safecall;
    function Get_RotinasFTPRetorno: IRotinasFTPRetorno; safecall;
    function InicializarRotinasFTPRetorno: Integer; safecall;
    procedure FinalizarRotinasFTPRetorno; safecall;
    function Get_Enderecos: IEnderecos; safecall;
    function InicializarEnderecos: Integer; safecall;
    procedure FinalizarEnderecos; safecall;
    function Get_EmailsEnvio: IEmailsEnvio; safecall;
    function InicializarEmailsEnvio: Integer; safecall;
    procedure FinalizarEmailsEnvio; safecall;
    function Get_SituacoesCodigoSISBOV: ISituacoesCodigoSISBOV; safecall;
    function InicializarSituacoesCodigoSISBOV: Integer; safecall;
    procedure FinalizarSituacoesCodigoSISBOV; safecall;
    function Get_TiposEmail: ITiposEmail; safecall;
    function InicializarTiposEmail: Integer; safecall;
    procedure FinalizarTiposEmail; safecall;
    function Get_SituacoesEmail: ISituacoesEmail; safecall;
    function InicializarSituacoesEmail: Integer; safecall;
    procedure FinalizarSituacoesEmail; safecall;
    function Get_SituacoesFTP: ISituacoesFTP; safecall;
    function InicializarSituacoesFTP: Integer; safecall;
    procedure FinalizarSituacoesFTP; safecall;
    function InicializarTiposMensagem: Integer; safecall;
    procedure FinalizarTiposMensagem; safecall;
    function Get_TiposMensagem: ITiposMensagem; safecall;
    function InicializarRotinasFTPEnvio: Integer; safecall;
    procedure FinalizarRotinasFTPEnvio; safecall;
    function Get_RotinasFTPEnvio: IRotinasFTPEnvio; safecall;
    function InicializarAplicativos: Integer; safecall;
    procedure FinalizarAplicativos; safecall;
    function Get_Aplicativos: IAplicativos; safecall;
    function InicializarImportacoesFabricante: Integer; safecall;
    procedure FinalizarImportacoesFabricantes; safecall;
    function Get_ImportacoesFabricante: IImportacoesFabricante; safecall;
    function InicializarSituacoesArqImport: Integer; safecall;
    procedure FinalizarSituacoesArqImport; safecall;
    function Get_SituacoesArqImport: ISituacoesArqImport; safecall;
    function InicializarMenus: Integer; safecall;
    procedure FinalizarMenus; safecall;
    function Get_Menus: IMenus; safecall;
    function ImportarCargaInicial(CodTipoArquivo: Integer; const NomeCompletoArquivo: WideString): Integer; safecall;
    function Get_BoletosBancario: IBoletosBancario; safecall;
    function InicializarBoletosBancario: Integer; safecall;
    procedure FinalizarBoletosBancario; safecall;
    function InicializarIdentificacoesBancarias: Integer; safecall;
    procedure FinalizarIdentificacoesBancarias; safecall;
    function Get_IdentificacoesBancarias: IIdentificacoesBancarias; safecall;
    function InicializarDownloads: Integer; safecall;
    procedure FinalizarDownloads; safecall;
    function Get_Downloads: IDownloads; safecall;
    function InicializarTiposPropriedades: Integer; safecall;
    procedure FinalizarTiposPropriedades; safecall;
    function Get_TiposPropriedades: ITiposPropriedades; safecall;
    function InicializarInventariosAnimais: Integer; safecall;
    procedure FinalizarInventariosAnimais; safecall;
    function Get_InventariosAnimais: IInventariosAnimais; safecall;
    function InicializarInventariosCodigosSisbov: Integer; safecall;
    procedure FinalizarInventariosCodigosSisbov; safecall;
    function Get_InventariosCodigosSisbov: IInventariosCodigosSisbov; safecall;
    procedure AdicionarMensagemCustomizada(Codigo: Integer; const Texto: WideString; 
                                           const Classe: WideString; const Metodo: WideString; 
                                           Tipo: Integer); safecall;
    function Get_TmpAplicaEvento: ITmpAplicaEvento; safecall;
    function InicializarTmpAplicaEvento: Integer; safecall;
    procedure FinalizarTmpAplicaEvento; safecall;
    function InicializarTipoPropriedades: Integer; safecall;
    procedure FinalizarTipoPropriedades; safecall;
    function Get_TipoPropriedades: ITipoPropriedades; safecall;
    function Get_SolicitacaoReimpressao: ISolicitacaoReimpressao; safecall;
    function InicializarSolicitacaoReimpressao: Integer; safecall;
    procedure FinalizarSolicitacaoReimpressao; safecall;
    property Ativa: WordBool read Get_Ativa;
    property Banners: IBanners read Get_Banners;
    property TiposBanner: ITiposBanner read Get_TiposBanner;
    property TiposPagina: ITiposPagina read Get_TiposPagina;
    property LayoutsPagina: ILayoutsPagina read Get_LayoutsPagina;
    property GruposPaginas: IGruposPaginas read Get_GruposPaginas;
    property BannersDefault: IBannersDefault read Get_BannersDefault;
    property Paginas: IPaginas read Get_Paginas;
    property TiposTarget: ITiposTarget read Get_TiposTarget;
    property Anunciantes: IAnunciantes read Get_Anunciantes;
    property Programas: IProgramas read Get_Programas;
    property ResultadosAnuncio: IResultadosAnuncio read Get_ResultadosAnuncio;
    property Acesso: IAcesso read Get_Acesso;
    property Pessoas: IPessoas read Get_Pessoas;
    property Papeis: IPapeis read Get_Papeis;
    property Usuarios: IUsuarios read Get_Usuarios;
    property Comunicados: IComunicados read Get_Comunicados;
    property Bloqueios: IBloqueios read Get_Bloqueios;
    property Perfis: IPerfis read Get_Perfis;
    property AcessoTecnicoProdutor: IAcessoTecnicoProdutor read Get_AcessoTecnicoProdutor;
    property AcessoAssociacaoProdutor: IAcessoAssociacaoProdutor read Get_AcessoAssociacaoProdutor;
    property MotivosBloqueio: IMotivosBloqueio read Get_MotivosBloqueio;
    property Paises: IPaises read Get_Paises;
    property CodigosSisbov: ICodigosSisbov read Get_CodigosSisbov;
    property Estados: IEstados read Get_Estados;
    property MicroRegioes: IMicroRegioes read Get_MicroRegioes;
    property Racas: IRacas read Get_Racas;
    property Pelagens: IPelagens read Get_Pelagens;
    property Locais: ILocais read Get_Locais;
    property TiposOrigem: ITiposOrigem read Get_TiposOrigem;
    property Fazendas: IFazendas read Get_Fazendas;
    property RegimesAlimentares: IRegimesAlimentares read Get_RegimesAlimentares;
    property AssociacoesRaca: IAssociacoesRaca read Get_AssociacoesRaca;
    property GrausSangue: IGrausSangue read Get_GrausSangue;
    property TiposIdentificador: ITiposIdentificador read Get_TiposIdentificador;
    property CategoriasAnimal: ICategoriasAnimal read Get_CategoriasAnimal;
    property TiposFonteAgua: TiposFonteAgua read Get_TiposFonteAgua;
    property Animais: IAnimais read Get_Animais;
    property Lotes: ILotes read Get_Lotes;
    property Localidades: ILocalidades read Get_Localidades;
    property PapeisSecundarios: IPapeisSecundarios read Get_PapeisSecundarios;
    property PessoasSecundarias: IPessoasSecundarias read Get_PessoasSecundarias;
    property OpcoesEnvioComunicado: IOpcoesEnvioComunicado read Get_OpcoesEnvioComunicado;
    property TiposContato: ITiposContato read Get_TiposContato;
    property TiposEndereco: ITiposEndereco read Get_TiposEndereco;
    property PropriedadesRurais: IPropriedadesRurais read Get_PropriedadesRurais;
    property Aptidoes: IAptidoes read Get_Aptidoes;
    property Especies: IEspecies read Get_Especies;
    property TiposMorte: ITiposMorte read Get_TiposMorte;
    property CausasMorte: ICausasMorte read Get_CausasMorte;
    property GrausInstrucao: IGrausInstrucao read Get_GrausInstrucao;
    property PosicoesIdentificador: IPosicoesIdentificador read Get_PosicoesIdentificador;
    property TiposLugar: ITiposLugar read Get_TiposLugar;
    property SituacoesSisBov: ISituacoesSisBov read Get_SituacoesSisBov;
    property PessoasContatos: IPessoasContatos read Get_PessoasContatos;
    property GrandezasResumo: IGrandezasResumo read Get_GrandezasResumo;
    property GruposEvento: IGruposEvento read Get_GruposEvento;
    property TiposEvento: TiposEvento read Get_TiposEvento;
    property UnidadesMedida: IUnidadesMedida read Get_UnidadesMedida;
    property TiposInsumo: ITiposInsumo read Get_TiposInsumo;
    property SubTiposInsumo: ISubTiposInsumo read Get_SubTiposInsumo;
    property FabricantesInsumo: IFabricantesInsumo read Get_FabricantesInsumo;
    property Eventos: IEventos read Get_Eventos;
    property MudancasCategoriaAnimal: IMudancasCategoriaAnimal read Get_MudancasCategoriaAnimal;
    property Insumos: IInsumos read Get_Insumos;
    property EntradasInsumo: IEntradasInsumo read Get_EntradasInsumo;
    property Relatorios: IRelatorios read Get_Relatorios;
    property Orientacoes: IOrientacoes read Get_Orientacoes;
    property TamanhosFonte: ITamanhosFonte read Get_TamanhosFonte;
    property LargurasLinhaRelatorio: ILargurasLinhaRelatorio read Get_LargurasLinhaRelatorio;
    property InterfaceSisbov: IInterfaceSisbov read Get_InterfaceSisbov;
    property TiposArquivoSisBov: ITiposArquivoSisBov read Get_TiposArquivoSisBov;
    property TiposSubEventoSanitario: ITiposSubEventoSanitario read Get_TiposSubEventoSanitario;
    property ReprodutoresMultiplos: IReprodutoresMultiplos read Get_ReprodutoresMultiplos;
    property ParametrosPesoAjustado: IParametrosPesoAjustado read Get_ParametrosPesoAjustado;
    property ModelosCertificado: IModelosCertificado read Get_ModelosCertificado;
    property Importacoes: IImportacoes read Get_Importacoes;
    property TiposAgrupamentoRacas: ITiposAgrupamentoRacas read Get_TiposAgrupamentoRacas;
    property AgrupamentosRacas: IAgrupamentosRacas read Get_AgrupamentosRacas;
    property Tarefas: ITarefas read Get_Tarefas;
    property SituacoesTarefa: ISituacoesTarefa read Get_SituacoesTarefa;
    property EstoqueSemen: IEstoqueSemen read Get_EstoqueSemen;
    property TiposMovimentoEstoqueSemen: ITiposMovimentoEstoqueSemen read Get_TiposMovimentoEstoqueSemen;
    property CaminhoArquivosCertificadora: WideString read Get_CaminhoArquivosCertificadora;
    property TiposAvaliacao: ITiposAvaliacao read Get_TiposAvaliacao;
    property CaracteristicasAvaliacao: ICaracteristicasAvaliacao read Get_CaracteristicasAvaliacao;
    property SituacoesCria: ISituacoesCria read Get_SituacoesCria;
    property GrausDificuldade: IGrausDificuldade read Get_GrausDificuldade;
    property MotivosDescarte: IMotivosDescarte read Get_MotivosDescarte;
    property ImportacoesSISBOV: IImportacoesSISBOV read Get_ImportacoesSISBOV;
    property ImportacoesDadoGeral: IImportacoesDadoGeral read Get_ImportacoesDadoGeral;
    property TiposOrigemArqImport: ITiposOrigemArqImport read Get_TiposOrigemArqImport;
    property RegimesPosseUso: IRegimesPosseUso read Get_RegimesPosseUso;
    property ArquivosFTPEnvio: IArquivosFTPEnvio read Get_ArquivosFTPEnvio;
    property OcorrenciasSistema: IOcorrenciasSistema read Get_OcorrenciasSistema;
    property FormasPagamentoIdentificador: IFormasPagamentoIdentificador read Get_FormasPagamentoIdentificador;
    property FormasPagamentoOS: IFormasPagamentoOS read Get_FormasPagamentoOS;
    property FabricantesIdentificador: IFabricantesIdentificador read Get_FabricantesIdentificador;
    property IdentificacoesDuplas: IIdentificacoesDuplas read Get_IdentificacoesDuplas;
    property ProdutosAcessorios: IProdutosAcessorios read Get_ProdutosAcessorios;
    property SituacoesOS: ISituacoesOS read Get_SituacoesOS;
    property ArquivosRemessaPedido: IArquivosRemessaPedido read Get_ArquivosRemessaPedido;
    property OrdensServico: IOrdensServico read Get_OrdensServico;
    property ArquivosFTPRetorno: IArquivosFTPRetorno read Get_ArquivosFTPRetorno;
    property RotinasFTPRetorno: IRotinasFTPRetorno read Get_RotinasFTPRetorno;
    property Enderecos: IEnderecos read Get_Enderecos;
    property EmailsEnvio: IEmailsEnvio read Get_EmailsEnvio;
    property SituacoesCodigoSISBOV: ISituacoesCodigoSISBOV read Get_SituacoesCodigoSISBOV;
    property TiposEmail: ITiposEmail read Get_TiposEmail;
    property SituacoesEmail: ISituacoesEmail read Get_SituacoesEmail;
    property SituacoesFTP: ISituacoesFTP read Get_SituacoesFTP;
    property TiposMensagem: ITiposMensagem read Get_TiposMensagem;
    property RotinasFTPEnvio: IRotinasFTPEnvio read Get_RotinasFTPEnvio;
    property Aplicativos: IAplicativos read Get_Aplicativos;
    property ImportacoesFabricante: IImportacoesFabricante read Get_ImportacoesFabricante;
    property SituacoesArqImport: ISituacoesArqImport read Get_SituacoesArqImport;
    property Menus: IMenus read Get_Menus;
    property BoletosBancario: IBoletosBancario read Get_BoletosBancario;
    property IdentificacoesBancarias: IIdentificacoesBancarias read Get_IdentificacoesBancarias;
    property Downloads: IDownloads read Get_Downloads;
    property TiposPropriedades: ITiposPropriedades read Get_TiposPropriedades;
    property InventariosAnimais: IInventariosAnimais read Get_InventariosAnimais;
    property InventariosCodigosSisbov: IInventariosCodigosSisbov read Get_InventariosCodigosSisbov;
    property TmpAplicaEvento: ITmpAplicaEvento read Get_TmpAplicaEvento;
    property TipoPropriedades: ITipoPropriedades read Get_TipoPropriedades;
    property SolicitacaoReimpressao: ISolicitacaoReimpressao read Get_SolicitacaoReimpressao;
  end;

// *********************************************************************//
// DispIntf:  ISessaoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ECDE42FC-9C24-439F-B855-80E1C8260472}
// *********************************************************************//
  ISessaoDisp = dispinterface
    ['{ECDE42FC-9C24-439F-B855-80E1C8260472}']
    function Inicializar(const IdCertificadora: WideString; const NomUsuario: WideString; 
                         const TxtSenha: WideString): Integer; dispid 1;
    function Mensagens: IDispatch; dispid 2;
    property Ativa: WordBool readonly dispid 3;
    procedure FinalizarTudo(CodClasseNaoFinalizar: Integer); dispid 4;
    function InicializarBanners: Integer; dispid 5;
    procedure FinalizarBanners; dispid 6;
    property Banners: IBanners readonly dispid 7;
    function InicializarTiposBanner: Integer; dispid 8;
    procedure FinalizarTiposBanner; dispid 9;
    property TiposBanner: ITiposBanner readonly dispid 10;
    function InicializarTiposPagina: Integer; dispid 11;
    procedure FinalizarTiposPagina; dispid 12;
    property TiposPagina: ITiposPagina readonly dispid 13;
    function InicializarLayoutsPagina: Integer; dispid 14;
    procedure FinalizarLayoutsPagina; dispid 15;
    property LayoutsPagina: ILayoutsPagina readonly dispid 16;
    function InicializarGruposPaginas: Integer; dispid 17;
    procedure FinalizarGruposPaginas; dispid 18;
    property GruposPaginas: IGruposPaginas readonly dispid 19;
    function InicializarBannersDefault: Integer; dispid 20;
    procedure FinalizarBannersDefault; dispid 21;
    property BannersDefault: IBannersDefault readonly dispid 22;
    function InicializarPaginas: Integer; dispid 23;
    procedure FinalizarPaginas; dispid 24;
    property Paginas: IPaginas readonly dispid 25;
    function InicializarTiposTarget: Integer; dispid 26;
    procedure FinalizarTiposTarget; dispid 27;
    property TiposTarget: ITiposTarget readonly dispid 28;
    function InicializarAnunciantes: Integer; dispid 29;
    procedure FinalizarAnunciantes; dispid 30;
    property Anunciantes: IAnunciantes readonly dispid 31;
    function InicializarProgramas: Integer; dispid 32;
    procedure FinalizarProgramas; dispid 33;
    property Programas: IProgramas readonly dispid 34;
    function InicializarResultadosAnuncio: Integer; dispid 35;
    procedure FinalizarResultadosAnuncio; dispid 36;
    property ResultadosAnuncio: IResultadosAnuncio readonly dispid 37;
    procedure Finalizar; dispid 38;
    function BuscarTextoMensagem(Codigo: Integer): WideString; dispid 39;
    procedure FinalizarAcesso; dispid 41;
    property Acesso: IAcesso readonly dispid 42;
    function BuscarTipoMensagem(Codigo: Integer): Integer; dispid 43;
    function InicializarPessoas: Integer; dispid 44;
    procedure FinalizarPessoas; dispid 45;
    property Pessoas: IPessoas readonly dispid 46;
    function InicializarPapeis: Integer; dispid 47;
    procedure FinalizarPapeis; dispid 48;
    property Papeis: IPapeis readonly dispid 49;
    function InicializarUsuarios: Integer; dispid 50;
    procedure FinalizarUsuarios; dispid 51;
    property Usuarios: IUsuarios readonly dispid 52;
    function InicializarComunicados: Integer; dispid 53;
    procedure FinalizarComunicados; dispid 54;
    property Comunicados: IComunicados readonly dispid 55;
    function InicializarBloqueios: Integer; dispid 56;
    procedure FinalizarBloqueios; dispid 57;
    property Bloqueios: IBloqueios readonly dispid 58;
    function InicializarPerfis: Integer; dispid 59;
    procedure FinalizarPerfis; dispid 60;
    property Perfis: IPerfis readonly dispid 61;
    function InicializarAcessoTecnicoProdutor: Integer; dispid 62;
    procedure FinalizarAcessoTecnicoProdutor; dispid 63;
    property AcessoTecnicoProdutor: IAcessoTecnicoProdutor readonly dispid 64;
    function InicializarAcessoAssociacaoProdutor: Integer; dispid 65;
    procedure FinalizarAcessoAssociacaoProdutor; dispid 66;
    property AcessoAssociacaoProdutor: IAcessoAssociacaoProdutor readonly dispid 67;
    procedure LimparMensagens; dispid 68;
    function InicializarMotivosBloqueio: Integer; dispid 69;
    procedure FinalizarMotivosBloqueio; dispid 70;
    property MotivosBloqueio: IMotivosBloqueio readonly dispid 71;
    function InicializarPaises: Integer; dispid 72;
    procedure FinalizarPaises; dispid 73;
    property Paises: IPaises readonly dispid 74;
    function InicializarCodigosSisbov: Integer; dispid 75;
    procedure FinalizarCodigosSisbov; dispid 76;
    property CodigosSisbov: ICodigosSisbov readonly dispid 77;
    function InicializarEstados: Integer; dispid 78;
    procedure FinalizarEstados; dispid 79;
    property Estados: IEstados readonly dispid 80;
    function InicializarMicroRegioes: Integer; dispid 81;
    procedure FinalizarMicroRegioes; dispid 82;
    property MicroRegioes: IMicroRegioes readonly dispid 83;
    function InicializarRacas: Integer; dispid 84;
    procedure FinalizarRacas; dispid 85;
    property Racas: IRacas readonly dispid 86;
    function InicializarPelagens: Integer; dispid 87;
    procedure FinalizarPelagens; dispid 88;
    property Pelagens: IPelagens readonly dispid 89;
    function InicializarLocais: Integer; dispid 90;
    procedure FinalizarLocais; dispid 91;
    property Locais: ILocais readonly dispid 92;
    function InicializarTiposOrigem: Integer; dispid 93;
    procedure FinalizarTiposOrigem; dispid 94;
    property TiposOrigem: ITiposOrigem readonly dispid 95;
    function InicializarFazendas: Integer; dispid 99;
    procedure FinalizarFazendas; dispid 100;
    property Fazendas: IFazendas readonly dispid 101;
    function InicializarRegimesAlimentares: Integer; dispid 102;
    procedure FinalizarRegimesAlimentares; dispid 103;
    property RegimesAlimentares: IRegimesAlimentares readonly dispid 104;
    function InicializarAssociacoesRaca: Integer; dispid 105;
    procedure FinalizarAssociacoesRaca; dispid 106;
    property AssociacoesRaca: IAssociacoesRaca readonly dispid 107;
    function InicializarGrausSangue: Integer; dispid 108;
    procedure FinalizarGrausSangue; dispid 109;
    property GrausSangue: IGrausSangue readonly dispid 110;
    function InicializarTiposIdentificador: Integer; dispid 111;
    procedure FinalizarTiposIdentificador; dispid 112;
    property TiposIdentificador: ITiposIdentificador readonly dispid 113;
    function InicializarCategoriasAnimal: Integer; dispid 114;
    procedure FinalizarCategoriasAnimal; dispid 115;
    property CategoriasAnimal: ICategoriasAnimal readonly dispid 116;
    function InicializarTiposFonteAgua: Integer; dispid 117;
    procedure FinalizarTiposFonteAgua; dispid 118;
    property TiposFonteAgua: TiposFonteAgua readonly dispid 119;
    function InicializarAnimais: Integer; dispid 120;
    procedure FinalizarAnimais; dispid 121;
    property Animais: IAnimais readonly dispid 122;
    function InicializarLotes: Integer; dispid 123;
    procedure FinalizarLotes; dispid 124;
    property Lotes: ILotes readonly dispid 125;
    function InicializarLocalidades: Integer; dispid 96;
    procedure FinalizarLocalidades; dispid 97;
    property Localidades: ILocalidades readonly dispid 98;
    function InicializarPapeisSecundarios: Integer; dispid 126;
    procedure FinalizarPapeisSecundarios; dispid 127;
    property PapeisSecundarios: IPapeisSecundarios readonly dispid 128;
    function InicializarPessoasSecundarias: Integer; dispid 132;
    procedure FinalizarPessoasSecundarias; dispid 133;
    property PessoasSecundarias: IPessoasSecundarias readonly dispid 134;
    function InicializarOpcoesEnvioComunicado: Integer; dispid 129;
    procedure FinalizarOpcoesEnvioComunicado; dispid 130;
    property OpcoesEnvioComunicado: IOpcoesEnvioComunicado readonly dispid 131;
    function InicializarTiposContato: Integer; dispid 135;
    procedure FinalizarTiposContato; dispid 136;
    property TiposContato: ITiposContato readonly dispid 137;
    function InicializarTiposEndereco: Integer; dispid 138;
    procedure FinalizarTiposEndereco; dispid 139;
    property TiposEndereco: ITiposEndereco readonly dispid 141;
    function InicializarPropriedadesRurais: Integer; dispid 140;
    procedure FinalizarPropriedadesRurais; dispid 142;
    property PropriedadesRurais: IPropriedadesRurais readonly dispid 143;
    function InicializarAptidoes: Integer; dispid 144;
    procedure FinalizarAptidoes; dispid 145;
    property Aptidoes: IAptidoes readonly dispid 146;
    function InicializarEspecies: Integer; dispid 147;
    procedure FinalizarEspecies; dispid 148;
    property Especies: IEspecies readonly dispid 149;
    function InicializarTiposMorte: Integer; dispid 150;
    procedure FinalizarTiposMorte; dispid 151;
    property TiposMorte: ITiposMorte readonly dispid 152;
    function InicializarCausasMorte: Integer; dispid 153;
    procedure FinalizarCausasMorte; dispid 154;
    property CausasMorte: ICausasMorte readonly dispid 155;
    function InicializarGrausInstrucao: Integer; dispid 156;
    procedure FinalizarGrausInstrucao; dispid 157;
    property GrausInstrucao: IGrausInstrucao readonly dispid 158;
    procedure FinalizarPosicoesIdentificador; dispid 159;
    function InicializarPosicoesIdentificador: Integer; dispid 160;
    property PosicoesIdentificador: IPosicoesIdentificador readonly dispid 161;
    property TiposLugar: ITiposLugar readonly dispid 162;
    function InicializarTiposLugar: Integer; dispid 163;
    procedure FinalizarTiposLugar; dispid 164;
    property SituacoesSisBov: ISituacoesSisBov readonly dispid 165;
    function InicializarSituacoesSisBov: Integer; dispid 166;
    procedure FinalizarSituacoesSisBov; dispid 167;
    property PessoasContatos: IPessoasContatos readonly dispid 169;
    function InicializarPessoasContatos: Integer; dispid 170;
    procedure FinalizarPessoasContatos; dispid 171;
    function AdicionarMensagem(CodMensagem: Integer): Integer; dispid 168;
    function InicializarGrandezasResumo: Integer; dispid 172;
    procedure FinalizarGrandezasResumo; dispid 173;
    property GrandezasResumo: IGrandezasResumo readonly dispid 175;
    procedure FinalizarGruposEvento; dispid 174;
    function InicializarGruposEvento: Integer; dispid 176;
    property GruposEvento: IGruposEvento readonly dispid 177;
    function InicializarTiposEvento: Integer; dispid 178;
    procedure FinalizarTiposEvento; dispid 179;
    property TiposEvento: TiposEvento readonly dispid 180;
    function InicializarUnidadesMedida: Integer; dispid 181;
    procedure FinalizarUnidadesMedida; dispid 182;
    property UnidadesMedida: IUnidadesMedida readonly dispid 183;
    function InicializarTiposInsumo: Integer; dispid 184;
    procedure FinalizarTiposInsumo; dispid 185;
    property TiposInsumo: ITiposInsumo readonly dispid 186;
    function InicializarSubTiposInsumo: Integer; dispid 187;
    procedure FinalizarSubTiposInsumo; dispid 188;
    property SubTiposInsumo: ISubTiposInsumo readonly dispid 189;
    function InicializarFabricantesInsumo: Integer; dispid 190;
    procedure FinalizarFabricantesInsumo; dispid 191;
    property FabricantesInsumo: IFabricantesInsumo readonly dispid 192;
    function InicializarEventos: Integer; dispid 193;
    procedure FinalizarEventos; dispid 194;
    property Eventos: IEventos readonly dispid 195;
    function InicializarMudancasCategoriaAnimal: Integer; dispid 196;
    procedure FinalizarMudancasCategoriaAnimal; dispid 197;
    property MudancasCategoriaAnimal: IMudancasCategoriaAnimal readonly dispid 199;
    function InicializarInsumos: Integer; dispid 198;
    procedure FinalizarInsumos; dispid 200;
    property Insumos: IInsumos readonly dispid 201;
    function InicializarEntradasInsumo: Integer; dispid 202;
    procedure FinalizarEntradasInsumo; dispid 203;
    property EntradasInsumo: IEntradasInsumo readonly dispid 204;
    function InicializarRelatorios: Integer; dispid 205;
    procedure FinalizarRelatorios; dispid 206;
    property Relatorios: IRelatorios readonly dispid 207;
    function InicializarOrientacoes: Integer; dispid 40;
    procedure FinalizarOrientacoes; dispid 208;
    property Orientacoes: IOrientacoes readonly dispid 209;
    function InicializarTamanhosFonte: Integer; dispid 210;
    procedure FinalizarTamanhosFonte; dispid 211;
    property TamanhosFonte: ITamanhosFonte readonly dispid 212;
    function InicializarLargurasLinhaRelatorio: Integer; dispid 213;
    procedure FinalizarLargurasLinhaRelatorio; dispid 214;
    property LargurasLinhaRelatorio: ILargurasLinhaRelatorio readonly dispid 215;
    function ValorParametroSistema(CodParametro: Integer): WideString; dispid 216;
    function InicializarInterfaceSisbov: Integer; dispid 217;
    procedure FinalizarInterfaceSisbov; dispid 218;
    property InterfaceSisbov: IInterfaceSisbov readonly dispid 219;
    function InicializarTiposArquivoSisbov: Integer; dispid 220;
    procedure FinalizarTiposArquivoSisbov; dispid 221;
    property TiposArquivoSisBov: ITiposArquivoSisBov readonly dispid 223;
    procedure FinalizarTiposSubEventoSanitario; dispid 222;
    function InicializarTiposSubEventoSanitario: Integer; dispid 224;
    property TiposSubEventoSanitario: ITiposSubEventoSanitario readonly dispid 225;
    function InicializarReprodutoresMultiplos: Integer; dispid 226;
    procedure FinalizarReprodutoresMultiplos; dispid 227;
    property ReprodutoresMultiplos: IReprodutoresMultiplos readonly dispid 228;
    function InicializarParametrosPesoAjustado: Integer; dispid 229;
    procedure FinalizarParametrosPesoAjustado; dispid 230;
    property ParametrosPesoAjustado: IParametrosPesoAjustado readonly dispid 231;
    function InicializarModelosCertificado: Integer; dispid 232;
    procedure FinalizarModelosCertificado; dispid 233;
    property ModelosCertificado: IModelosCertificado readonly dispid 234;
    function InicializarImportacoes: Integer; dispid 235;
    procedure FinalizarImportacoes; dispid 236;
    property Importacoes: IImportacoes readonly dispid 237;
    function InicializarTiposAgrupamentosRacas: Integer; dispid 238;
    procedure FinalizarTiposAgrupamentosRacas; dispid 239;
    property TiposAgrupamentoRacas: ITiposAgrupamentoRacas readonly dispid 240;
    function InicializarAgrupamentosRacas: Integer; dispid 241;
    procedure FinalizarAgrupamentosRacas; dispid 242;
    property AgrupamentosRacas: IAgrupamentosRacas readonly dispid 243;
    function QtdTarefasAgendadas: Integer; dispid 244;
    function QtdTarefasEmAndamento: Integer; dispid 245;
    property Tarefas: ITarefas readonly dispid 246;
    function InicializarTarefas: Integer; dispid 247;
    procedure FinalizarTarefas; dispid 248;
    property SituacoesTarefa: ISituacoesTarefa readonly dispid 249;
    function InicializarSituacoesTarefa: Integer; dispid 250;
    procedure FinalizarSituacoesTarefa; dispid 251;
    property EstoqueSemen: IEstoqueSemen readonly dispid 252;
    function InicializarEstoqueSemen: Integer; dispid 253;
    procedure FinalizarEstoqueSemen; dispid 254;
    property TiposMovimentoEstoqueSemen: ITiposMovimentoEstoqueSemen readonly dispid 255;
    function InicializarTiposMovimentoEstoqueSemen: Integer; dispid 256;
    procedure FinalizarTiposMovimentoEstoqueSemen; dispid 257;
    property CaminhoArquivosCertificadora: WideString readonly dispid 258;
    property TiposAvaliacao: ITiposAvaliacao readonly dispid 259;
    function InicializarTiposAvaliacao: Integer; dispid 260;
    procedure FinalizarTiposAvaliacao; dispid 261;
    property CaracteristicasAvaliacao: ICaracteristicasAvaliacao readonly dispid 262;
    function InicializarCaracteristicasAvaliacao: Integer; dispid 263;
    procedure FinalizarCaracteristicasAvaliacao; dispid 264;
    function InicializarSituacoesCria: Integer; dispid 265;
    procedure FinalizarSituacoesCria; dispid 266;
    property SituacoesCria: ISituacoesCria readonly dispid 267;
    function InicializarGrausDificuldade: Integer; dispid 268;
    procedure FinalizarGrausDificuldade; dispid 269;
    property GrausDificuldade: IGrausDificuldade readonly dispid 270;
    function InicializarMotivosDescarte: Integer; dispid 271;
    procedure FinalizarMotivosDescarte; dispid 272;
    property MotivosDescarte: IMotivosDescarte readonly dispid 273;
    function InicializarImportacoesSISBOV: Integer; dispid 274;
    procedure FinalizarImportacoesSISBOV; dispid 275;
    property ImportacoesSISBOV: IImportacoesSISBOV readonly dispid 276;
    function InicializarImportacoesDadoGeral: Integer; dispid 277;
    procedure FinalizarImportacoesDadoGeral; dispid 278;
    property ImportacoesDadoGeral: IImportacoesDadoGeral readonly dispid 280;
    function InicializarTiposOrigemArqImport: Integer; dispid 279;
    procedure FinalizarTiposOrigemArqImport; dispid 281;
    property TiposOrigemArqImport: ITiposOrigemArqImport readonly dispid 282;
    function InicializarRegimesPosseUso: Integer; dispid 283;
    procedure FinalizarRegimesPosseUso; dispid 284;
    property RegimesPosseUso: IRegimesPosseUso readonly dispid 285;
    property ArquivosFTPEnvio: IArquivosFTPEnvio readonly dispid 286;
    function InicializarArquivosFTPEnvio: Integer; dispid 287;
    procedure FinalizarArquivosFTPEnvio; dispid 288;
    property OcorrenciasSistema: IOcorrenciasSistema readonly dispid 289;
    function InicializarOcorrenciasSistema: Integer; dispid 290;
    procedure FinalizarOcorrenciasSistema; dispid 291;
    property FormasPagamentoIdentificador: IFormasPagamentoIdentificador readonly dispid 292;
    function InicializarFormasPagamentoIdentificador: Integer; dispid 293;
    procedure FinalizarFormasPagamentoIdentificador; dispid 294;
    property FormasPagamentoOS: IFormasPagamentoOS readonly dispid 295;
    function InicializarFormasPagamentoOS: Integer; dispid 296;
    procedure FinalizarFormasPagamentoOS; dispid 297;
    property FabricantesIdentificador: IFabricantesIdentificador readonly dispid 298;
    function InicializarFabricantesIdentificador: Integer; dispid 299;
    procedure FinalizarFabricantesIdentificador; dispid 300;
    property IdentificacoesDuplas: IIdentificacoesDuplas readonly dispid 301;
    function InicializarIdentificacoesDuplas: Integer; dispid 302;
    procedure FinalizarIdentificacoesDuplas; dispid 303;
    property ProdutosAcessorios: IProdutosAcessorios readonly dispid 304;
    function InicializarProdutosAcessorios: Integer; dispid 305;
    procedure FinalizarProdutosAcessorios; dispid 306;
    property SituacoesOS: ISituacoesOS readonly dispid 307;
    function InicializarSituacoesOS: Integer; dispid 308;
    procedure FinalizarSituacoesOS; dispid 309;
    property ArquivosRemessaPedido: IArquivosRemessaPedido readonly dispid 310;
    function InicializarArquivosRemessaPedido: Integer; dispid 311;
    procedure FinalizarArquivosRemessaPedido; dispid 312;
    function InicializarOrdensServico: Integer; dispid 313;
    procedure FinalizarOrdensServico; dispid 314;
    property OrdensServico: IOrdensServico readonly dispid 315;
    property ArquivosFTPRetorno: IArquivosFTPRetorno readonly dispid 316;
    function InicializarArquivosFTPRetorno: Integer; dispid 317;
    procedure FinalizarArquivosFTPRetorno; dispid 318;
    property RotinasFTPRetorno: IRotinasFTPRetorno readonly dispid 319;
    function InicializarRotinasFTPRetorno: Integer; dispid 320;
    procedure FinalizarRotinasFTPRetorno; dispid 321;
    property Enderecos: IEnderecos readonly dispid 322;
    function InicializarEnderecos: Integer; dispid 323;
    procedure FinalizarEnderecos; dispid 324;
    property EmailsEnvio: IEmailsEnvio readonly dispid 325;
    function InicializarEmailsEnvio: Integer; dispid 326;
    procedure FinalizarEmailsEnvio; dispid 327;
    property SituacoesCodigoSISBOV: ISituacoesCodigoSISBOV readonly dispid 328;
    function InicializarSituacoesCodigoSISBOV: Integer; dispid 329;
    procedure FinalizarSituacoesCodigoSISBOV; dispid 330;
    property TiposEmail: ITiposEmail readonly dispid 331;
    function InicializarTiposEmail: Integer; dispid 332;
    procedure FinalizarTiposEmail; dispid 333;
    property SituacoesEmail: ISituacoesEmail readonly dispid 334;
    function InicializarSituacoesEmail: Integer; dispid 335;
    procedure FinalizarSituacoesEmail; dispid 336;
    property SituacoesFTP: ISituacoesFTP readonly dispid 337;
    function InicializarSituacoesFTP: Integer; dispid 338;
    procedure FinalizarSituacoesFTP; dispid 339;
    function InicializarTiposMensagem: Integer; dispid 340;
    procedure FinalizarTiposMensagem; dispid 341;
    property TiposMensagem: ITiposMensagem readonly dispid 342;
    function InicializarRotinasFTPEnvio: Integer; dispid 343;
    procedure FinalizarRotinasFTPEnvio; dispid 344;
    property RotinasFTPEnvio: IRotinasFTPEnvio readonly dispid 345;
    function InicializarAplicativos: Integer; dispid 346;
    procedure FinalizarAplicativos; dispid 347;
    property Aplicativos: IAplicativos readonly dispid 348;
    function InicializarImportacoesFabricante: Integer; dispid 349;
    procedure FinalizarImportacoesFabricantes; dispid 350;
    property ImportacoesFabricante: IImportacoesFabricante readonly dispid 351;
    function InicializarSituacoesArqImport: Integer; dispid 352;
    procedure FinalizarSituacoesArqImport; dispid 353;
    property SituacoesArqImport: ISituacoesArqImport readonly dispid 354;
    function InicializarMenus: Integer; dispid 355;
    procedure FinalizarMenus; dispid 356;
    property Menus: IMenus readonly dispid 357;
    function ImportarCargaInicial(CodTipoArquivo: Integer; const NomeCompletoArquivo: WideString): Integer; dispid 358;
    property BoletosBancario: IBoletosBancario readonly dispid 359;
    function InicializarBoletosBancario: Integer; dispid 360;
    procedure FinalizarBoletosBancario; dispid 361;
    function InicializarIdentificacoesBancarias: Integer; dispid 362;
    procedure FinalizarIdentificacoesBancarias; dispid 363;
    property IdentificacoesBancarias: IIdentificacoesBancarias readonly dispid 364;
    function InicializarDownloads: Integer; dispid 365;
    procedure FinalizarDownloads; dispid 366;
    property Downloads: IDownloads readonly dispid 367;
    function InicializarTiposPropriedades: Integer; dispid 368;
    procedure FinalizarTiposPropriedades; dispid 369;
    property TiposPropriedades: ITiposPropriedades readonly dispid 370;
    function InicializarInventariosAnimais: Integer; dispid 371;
    procedure FinalizarInventariosAnimais; dispid 372;
    property InventariosAnimais: IInventariosAnimais readonly dispid 373;
    function InicializarInventariosCodigosSisbov: Integer; dispid 374;
    procedure FinalizarInventariosCodigosSisbov; dispid 375;
    property InventariosCodigosSisbov: IInventariosCodigosSisbov readonly dispid 376;
    procedure AdicionarMensagemCustomizada(Codigo: Integer; const Texto: WideString; 
                                           const Classe: WideString; const Metodo: WideString; 
                                           Tipo: Integer); dispid 377;
    property TmpAplicaEvento: ITmpAplicaEvento readonly dispid 378;
    function InicializarTmpAplicaEvento: Integer; dispid 379;
    procedure FinalizarTmpAplicaEvento; dispid 380;
    function InicializarTipoPropriedades: Integer; dispid 381;
    procedure FinalizarTipoPropriedades; dispid 382;
    property TipoPropriedades: ITipoPropriedades readonly dispid 383;
    property SolicitacaoReimpressao: ISolicitacaoReimpressao readonly dispid 384;
    function InicializarSolicitacaoReimpressao: Integer; dispid 385;
    procedure FinalizarSolicitacaoReimpressao; dispid 386;
  end;

// *********************************************************************//
// Interface: IVisita
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D80205DD-D18D-43CD-A078-09C8BADEF610}
// *********************************************************************//
  IVisita = interface(IDispatch)
    ['{D80205DD-D18D-43CD-A078-09C8BADEF610}']
    function Inicializar(const IdCertificadora: WideString): Integer; safecall;
    function Mensagens: IDispatch; safecall;
    function Get_Ativa: WordBool; safecall;
    procedure FinalizarTudo; safecall;
    function InicializarBannersVisita: Integer; safecall;
    procedure FinalizarBannersVisita; safecall;
    function Get_BannersVisita: IBannersVisita; safecall;
    procedure Finalizar; safecall;
    function Get_AnimaisVisita: IAnimaisVisita; safecall;
    function InicializarAnimaisVisita: Integer; safecall;
    procedure FinalizarAnimaisVisita; safecall;
    property Ativa: WordBool read Get_Ativa;
    property BannersVisita: IBannersVisita read Get_BannersVisita;
    property AnimaisVisita: IAnimaisVisita read Get_AnimaisVisita;
  end;

// *********************************************************************//
// DispIntf:  IVisitaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D80205DD-D18D-43CD-A078-09C8BADEF610}
// *********************************************************************//
  IVisitaDisp = dispinterface
    ['{D80205DD-D18D-43CD-A078-09C8BADEF610}']
    function Inicializar(const IdCertificadora: WideString): Integer; dispid 1;
    function Mensagens: IDispatch; dispid 2;
    property Ativa: WordBool readonly dispid 3;
    procedure FinalizarTudo; dispid 4;
    function InicializarBannersVisita: Integer; dispid 5;
    procedure FinalizarBannersVisita; dispid 6;
    property BannersVisita: IBannersVisita readonly dispid 7;
    procedure Finalizar; dispid 8;
    property AnimaisVisita: IAnimaisVisita readonly dispid 9;
    function InicializarAnimaisVisita: Integer; dispid 10;
    procedure FinalizarAnimaisVisita; dispid 11;
  end;

// *********************************************************************//
// Interface: IMensagem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D8AA394F-A8E2-4A80-A07B-FFD771578C7D}
// *********************************************************************//
  IMensagem = interface(IDispatch)
    ['{D8AA394F-A8E2-4A80-A07B-FFD771578C7D}']
    function Get_Codigo: Integer; safecall;
    procedure Set_Codigo(Value: Integer); safecall;
    function Get_Texto: WideString; safecall;
    procedure Set_Texto(const Value: WideString); safecall;
    function Get_Classe: WideString; safecall;
    procedure Set_Classe(const Value: WideString); safecall;
    function Get_Metodo: WideString; safecall;
    procedure Set_Metodo(const Value: WideString); safecall;
    function Get_Tipo: Integer; safecall;
    procedure Set_Tipo(Value: Integer); safecall;
    property Codigo: Integer read Get_Codigo write Set_Codigo;
    property Texto: WideString read Get_Texto write Set_Texto;
    property Classe: WideString read Get_Classe write Set_Classe;
    property Metodo: WideString read Get_Metodo write Set_Metodo;
    property Tipo: Integer read Get_Tipo write Set_Tipo;
  end;

// *********************************************************************//
// DispIntf:  IMensagemDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D8AA394F-A8E2-4A80-A07B-FFD771578C7D}
// *********************************************************************//
  IMensagemDisp = dispinterface
    ['{D8AA394F-A8E2-4A80-A07B-FFD771578C7D}']
    property Codigo: Integer dispid 1;
    property Texto: WideString dispid 2;
    property Classe: WideString dispid 3;
    property Metodo: WideString dispid 4;
    property Tipo: Integer dispid 5;
  end;

// *********************************************************************//
// Interface: IMensagens
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13C9F84C-9F98-4820-8D88-326CE974484E}
// *********************************************************************//
  IMensagens = interface(IDispatch)
    ['{13C9F84C-9F98-4820-8D88-326CE974484E}']
    function Item(Index: Integer): IDispatch; safecall;
    function Get__NewEnum: IUnknown; safecall;
    function Get_NumItens: Integer; safecall;
    procedure Adicionar(Codigo: Integer; const Texto: WideString; const Classe: WideString; 
                        const Metodo: WideString; Tipo: Integer); safecall;
    procedure Limpar; safecall;
    property _NewEnum: IUnknown read Get__NewEnum;
    property NumItens: Integer read Get_NumItens;
  end;

// *********************************************************************//
// DispIntf:  IMensagensDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13C9F84C-9F98-4820-8D88-326CE974484E}
// *********************************************************************//
  IMensagensDisp = dispinterface
    ['{13C9F84C-9F98-4820-8D88-326CE974484E}']
    function Item(Index: Integer): IDispatch; dispid 0;
    property _NewEnum: IUnknown readonly dispid -4;
    property NumItens: Integer readonly dispid 1;
    procedure Adicionar(Codigo: Integer; const Texto: WideString; const Classe: WideString; 
                        const Metodo: WideString; Tipo: Integer); dispid 2;
    procedure Limpar; dispid 3;
  end;

// *********************************************************************//
// Interface: IBanner
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {14C945C6-C3F8-4EFB-82EC-B1832ADCEDC6}
// *********************************************************************//
  IBanner = interface(IDispatch)
    ['{14C945C6-C3F8-4EFB-82EC-B1832ADCEDC6}']
    function Get_Codigo: Integer; safecall;
    procedure Set_Codigo(Value: Integer); safecall;
    function Get_NomArquivo: WideString; safecall;
    procedure Set_NomArquivo(const Value: WideString); safecall;
    function Get_CodTipoBanner: Integer; safecall;
    procedure Set_CodTipoBanner(Value: Integer); safecall;
    function Get_URLDestino: WideString; safecall;
    procedure Set_URLDestino(const Value: WideString); safecall;
    function Get_TxtAlternativo: WideString; safecall;
    procedure Set_TxtAlternativo(const Value: WideString); safecall;
    function Get_CodAnunciante: Integer; safecall;
    procedure Set_CodAnunciante(Value: Integer); safecall;
    function Get_CodTipoTarget: Integer; safecall;
    procedure Set_CodTipoTarget(Value: Integer); safecall;
    function Get_DesTipoBanner: WideString; safecall;
    procedure Set_DesTipoBanner(const Value: WideString); safecall;
    function Get_NomAnunciante: WideString; safecall;
    procedure Set_NomAnunciante(const Value: WideString); safecall;
    function Get_DesTipoTarget: WideString; safecall;
    procedure Set_DesTipoTarget(const Value: WideString); safecall;
    function Get_DtaFimValidade: TDateTime; safecall;
    procedure Set_DtaFimValidade(Value: TDateTime); safecall;
    function Get_TxtComandoTarget: WideString; safecall;
    procedure Set_TxtComandoTarget(const Value: WideString); safecall;
    property Codigo: Integer read Get_Codigo write Set_Codigo;
    property NomArquivo: WideString read Get_NomArquivo write Set_NomArquivo;
    property CodTipoBanner: Integer read Get_CodTipoBanner write Set_CodTipoBanner;
    property URLDestino: WideString read Get_URLDestino write Set_URLDestino;
    property TxtAlternativo: WideString read Get_TxtAlternativo write Set_TxtAlternativo;
    property CodAnunciante: Integer read Get_CodAnunciante write Set_CodAnunciante;
    property CodTipoTarget: Integer read Get_CodTipoTarget write Set_CodTipoTarget;
    property DesTipoBanner: WideString read Get_DesTipoBanner write Set_DesTipoBanner;
    property NomAnunciante: WideString read Get_NomAnunciante write Set_NomAnunciante;
    property DesTipoTarget: WideString read Get_DesTipoTarget write Set_DesTipoTarget;
    property DtaFimValidade: TDateTime read Get_DtaFimValidade write Set_DtaFimValidade;
    property TxtComandoTarget: WideString read Get_TxtComandoTarget write Set_TxtComandoTarget;
  end;

// *********************************************************************//
// DispIntf:  IBannerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {14C945C6-C3F8-4EFB-82EC-B1832ADCEDC6}
// *********************************************************************//
  IBannerDisp = dispinterface
    ['{14C945C6-C3F8-4EFB-82EC-B1832ADCEDC6}']
    property Codigo: Integer dispid 1;
    property NomArquivo: WideString dispid 2;
    property CodTipoBanner: Integer dispid 3;
    property URLDestino: WideString dispid 4;
    property TxtAlternativo: WideString dispid 5;
    property CodAnunciante: Integer dispid 6;
    property CodTipoTarget: Integer dispid 7;
    property DesTipoBanner: WideString dispid 8;
    property NomAnunciante: WideString dispid 9;
    property DesTipoTarget: WideString dispid 10;
    property DtaFimValidade: TDateTime dispid 11;
    property TxtComandoTarget: WideString dispid 12;
  end;

// *********************************************************************//
// Interface: IBanners
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D7CED7B3-3ABB-45CD-8CFB-A7D78FF69EDD}
// *********************************************************************//
  IBanners = interface(IDispatch)
    ['{D7CED7B3-3ABB-45CD-8CFB-A7D78FF69EDD}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(const NomArquivo: WideString; CodTipoBanner: Integer; 
                       IndPesquisarDesativados: WordBool; IndEscopoPesquisa: Integer; 
                       CodAnunciante: Integer): Integer; safecall;
    function Inserir(const NomArquivo: WideString; CodTipoBanner: Integer; 
                     const URLDestino: WideString; const TxtAlternativo: WideString; 
                     CodTipoTarget: Integer; CodAnunciante: Integer): Integer; safecall;
    function Alterar(CodBanner: Integer; const URLDestino: WideString; 
                     const TxtAlternativo: WideString): Integer; safecall;
    function Excluir(CodBanner: Integer): Integer; safecall;
    function Buscar(CodBanner: Integer): Integer; safecall;
    function Liberar(CodBanner: Integer; CodTipoTarget: Integer): Integer; safecall;
    function Get_Inicializado: WordBool; safecall;
    function Get_Banner: IBanner; safecall;
    function ExisteNomeArquivo(const NomArquivo: WideString): Integer; safecall;
    property Inicializado: WordBool read Get_Inicializado;
    property Banner: IBanner read Get_Banner;
  end;

// *********************************************************************//
// DispIntf:  IBannersDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D7CED7B3-3ABB-45CD-8CFB-A7D78FF69EDD}
// *********************************************************************//
  IBannersDisp = dispinterface
    ['{D7CED7B3-3ABB-45CD-8CFB-A7D78FF69EDD}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    procedure FecharPesquisa; dispid 11;
    function Pesquisar(const NomArquivo: WideString; CodTipoBanner: Integer; 
                       IndPesquisarDesativados: WordBool; IndEscopoPesquisa: Integer; 
                       CodAnunciante: Integer): Integer; dispid 12;
    function Inserir(const NomArquivo: WideString; CodTipoBanner: Integer; 
                     const URLDestino: WideString; const TxtAlternativo: WideString; 
                     CodTipoTarget: Integer; CodAnunciante: Integer): Integer; dispid 13;
    function Alterar(CodBanner: Integer; const URLDestino: WideString; 
                     const TxtAlternativo: WideString): Integer; dispid 14;
    function Excluir(CodBanner: Integer): Integer; dispid 15;
    function Buscar(CodBanner: Integer): Integer; dispid 16;
    function Liberar(CodBanner: Integer; CodTipoTarget: Integer): Integer; dispid 17;
    property Inicializado: WordBool readonly dispid 18;
    property Banner: IBanner readonly dispid 19;
    function ExisteNomeArquivo(const NomArquivo: WideString): Integer; dispid 20;
  end;

// *********************************************************************//
// Interface: IBannersVisita
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7CDEDAE0-D299-449B-8D27-0F0F7B10026F}
// *********************************************************************//
  IBannersVisita = interface(IDispatch)
    ['{7CDEDAE0-D299-449B-8D27-0F0F7B10026F}']
    function Pesquisar(CodPagina: Integer; IncrementarImpressao: WordBool): Integer; safecall;
    function Localizar(SeqPosicaoBanner: Integer): Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    function IncrementarCliques(CodPagina: Integer; CodBanner: Integer): Integer; safecall;
    procedure FecharPesquisa; safecall;
    function Get_Inicializado: WordBool; safecall;
    function QtdBannersPagina(CodPagina: Integer): Integer; safecall;
    property Inicializado: WordBool read Get_Inicializado;
  end;

// *********************************************************************//
// DispIntf:  IBannersVisitaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7CDEDAE0-D299-449B-8D27-0F0F7B10026F}
// *********************************************************************//
  IBannersVisitaDisp = dispinterface
    ['{7CDEDAE0-D299-449B-8D27-0F0F7B10026F}']
    function Pesquisar(CodPagina: Integer; IncrementarImpressao: WordBool): Integer; dispid 2;
    function Localizar(SeqPosicaoBanner: Integer): Integer; dispid 1;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 3;
    function IncrementarCliques(CodPagina: Integer; CodBanner: Integer): Integer; dispid 4;
    procedure FecharPesquisa; dispid 5;
    property Inicializado: WordBool readonly dispid 6;
    function QtdBannersPagina(CodPagina: Integer): Integer; dispid 7;
  end;

// *********************************************************************//
// Interface: ITiposBanner
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BFD5C6BF-9155-48D6-B4BC-ADD36F280B08}
// *********************************************************************//
  ITiposBanner = interface(IDispatch)
    ['{BFD5C6BF-9155-48D6-B4BC-ADD36F280B08}']
    function Pesquisar: Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposBannerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BFD5C6BF-9155-48D6-B4BC-ADD36F280B08}
// *********************************************************************//
  ITiposBannerDisp = dispinterface
    ['{BFD5C6BF-9155-48D6-B4BC-ADD36F280B08}']
    function Pesquisar: Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
  end;

// *********************************************************************//
// Interface: ITiposPagina
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB35C01B-1D80-4596-9224-F66EF98F7274}
// *********************************************************************//
  ITiposPagina = interface(IDispatch)
    ['{DB35C01B-1D80-4596-9224-F66EF98F7274}']
    function Pesquisar: Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposPaginaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB35C01B-1D80-4596-9224-F66EF98F7274}
// *********************************************************************//
  ITiposPaginaDisp = dispinterface
    ['{DB35C01B-1D80-4596-9224-F66EF98F7274}']
    function Pesquisar: Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
  end;

// *********************************************************************//
// Interface: ILayoutsPagina
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {029526E5-03BF-47B5-9CF2-F0178BA390BB}
// *********************************************************************//
  ILayoutsPagina = interface(IDispatch)
    ['{029526E5-03BF-47B5-9CF2-F0178BA390BB}']
    function Pesquisar(CodTipoPagina: Integer): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    procedure IrAoPrimeiro; safecall;
  end;

// *********************************************************************//
// DispIntf:  ILayoutsPaginaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {029526E5-03BF-47B5-9CF2-F0178BA390BB}
// *********************************************************************//
  ILayoutsPaginaDisp = dispinterface
    ['{029526E5-03BF-47B5-9CF2-F0178BA390BB}']
    function Pesquisar(CodTipoPagina: Integer): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    procedure IrAoPrimeiro; dispid 6;
  end;

// *********************************************************************//
// Interface: IGrupoPaginas
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {188118F3-817E-4AEF-A045-C87543644FFE}
// *********************************************************************//
  IGrupoPaginas = interface(IDispatch)
    ['{188118F3-817E-4AEF-A045-C87543644FFE}']
    function Get_Codigo: Integer; safecall;
    procedure Set_Codigo(Value: Integer); safecall;
    function Get_DesGrupoPaginas: WideString; safecall;
    procedure Set_DesGrupoPaginas(const Value: WideString); safecall;
    function Get_CodTipoPagina: Integer; safecall;
    procedure Set_CodTipoPagina(Value: Integer); safecall;
    function Get_DtaFimValidade: TDateTime; safecall;
    procedure Set_DtaFimValidade(Value: TDateTime); safecall;
    property Codigo: Integer read Get_Codigo write Set_Codigo;
    property DesGrupoPaginas: WideString read Get_DesGrupoPaginas write Set_DesGrupoPaginas;
    property CodTipoPagina: Integer read Get_CodTipoPagina write Set_CodTipoPagina;
    property DtaFimValidade: TDateTime read Get_DtaFimValidade write Set_DtaFimValidade;
  end;

// *********************************************************************//
// DispIntf:  IGrupoPaginasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {188118F3-817E-4AEF-A045-C87543644FFE}
// *********************************************************************//
  IGrupoPaginasDisp = dispinterface
    ['{188118F3-817E-4AEF-A045-C87543644FFE}']
    property Codigo: Integer dispid 1;
    property DesGrupoPaginas: WideString dispid 2;
    property CodTipoPagina: Integer dispid 3;
    property DtaFimValidade: TDateTime dispid 4;
  end;

// *********************************************************************//
// Interface: IGruposPaginas
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BA48120B-62F3-4687-9F3B-76AB18C1A0ED}
// *********************************************************************//
  IGruposPaginas = interface(IDispatch)
    ['{BA48120B-62F3-4687-9F3B-76AB18C1A0ED}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(const DesGrupoPaginas: WideString; CodTipoPagina: Integer; 
                       IndPesquisarDesativos: WordBool): Integer; safecall;
    function Inserir(const DesGrupoPaginas: WideString; CodTipoPagina: Integer): Integer; safecall;
    function Alterar(CodGrupoPaginas: Integer; const DesGrupoPaginas: WideString): Integer; safecall;
    function Excluir(CodGrupoPaginas: Integer): Integer; safecall;
    function Buscar(CodGrupoPaginas: Integer): Integer; safecall;
    function Get_Inicializado: WordBool; safecall;
    function Get_GrupoPaginas: IGrupoPaginas; safecall;
    property Inicializado: WordBool read Get_Inicializado;
    property GrupoPaginas: IGrupoPaginas read Get_GrupoPaginas;
  end;

// *********************************************************************//
// DispIntf:  IGruposPaginasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BA48120B-62F3-4687-9F3B-76AB18C1A0ED}
// *********************************************************************//
  IGruposPaginasDisp = dispinterface
    ['{BA48120B-62F3-4687-9F3B-76AB18C1A0ED}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    procedure FecharPesquisa; dispid 11;
    function Pesquisar(const DesGrupoPaginas: WideString; CodTipoPagina: Integer; 
                       IndPesquisarDesativos: WordBool): Integer; dispid 12;
    function Inserir(const DesGrupoPaginas: WideString; CodTipoPagina: Integer): Integer; dispid 13;
    function Alterar(CodGrupoPaginas: Integer; const DesGrupoPaginas: WideString): Integer; dispid 14;
    function Excluir(CodGrupoPaginas: Integer): Integer; dispid 15;
    function Buscar(CodGrupoPaginas: Integer): Integer; dispid 16;
    property Inicializado: WordBool readonly dispid 17;
    property GrupoPaginas: IGrupoPaginas readonly dispid 18;
  end;

// *********************************************************************//
// Interface: IBannersDefault
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A5D66860-B7E7-482C-8873-78D3ACE00516}
// *********************************************************************//
  IBannersDefault = interface(IDispatch)
    ['{A5D66860-B7E7-482C-8873-78D3ACE00516}']
    function Pesquisar(CodGrupoPaginas: Integer): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Definir(CodGrupoPaginas: Integer; SeqPosicaoBanner: Integer; CodBannerDefault: Integer): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IBannersDefaultDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A5D66860-B7E7-482C-8873-78D3ACE00516}
// *********************************************************************//
  IBannersDefaultDisp = dispinterface
    ['{A5D66860-B7E7-482C-8873-78D3ACE00516}']
    function Pesquisar(CodGrupoPaginas: Integer): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    function Definir(CodGrupoPaginas: Integer; SeqPosicaoBanner: Integer; CodBannerDefault: Integer): Integer; dispid 6;
  end;

// *********************************************************************//
// Interface: IPaginas
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8F6D9E37-58EE-4326-8CBE-B88426B10000}
// *********************************************************************//
  IPaginas = interface(IDispatch)
    ['{8F6D9E37-58EE-4326-8CBE-B88426B10000}']
    function Pesquisar(CodGrupoPaginas: Integer; CodTipoPagina: Integer): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Alterar(CodPagina: Integer; CodGrupoPaginas: Integer): Integer; safecall;
    function PesquisarDisponiveis(CodGrupoPaginas: Integer): Integer; safecall;
    function PesquisarDoGrupo(CodGrupoPaginas: Integer): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IPaginasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8F6D9E37-58EE-4326-8CBE-B88426B10000}
// *********************************************************************//
  IPaginasDisp = dispinterface
    ['{8F6D9E37-58EE-4326-8CBE-B88426B10000}']
    function Pesquisar(CodGrupoPaginas: Integer; CodTipoPagina: Integer): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    function Alterar(CodPagina: Integer; CodGrupoPaginas: Integer): Integer; dispid 6;
    function PesquisarDisponiveis(CodGrupoPaginas: Integer): Integer; dispid 7;
    function PesquisarDoGrupo(CodGrupoPaginas: Integer): Integer; dispid 8;
  end;

// *********************************************************************//
// Interface: ITiposTarget
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82F05683-C87C-4E3F-BB74-5F2457506D26}
// *********************************************************************//
  ITiposTarget = interface(IDispatch)
    ['{82F05683-C87C-4E3F-BB74-5F2457506D26}']
    function Pesquisar: Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposTargetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82F05683-C87C-4E3F-BB74-5F2457506D26}
// *********************************************************************//
  ITiposTargetDisp = dispinterface
    ['{82F05683-C87C-4E3F-BB74-5F2457506D26}']
    function Pesquisar: Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
  end;

// *********************************************************************//
// Interface: IAnunciante
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1D281DA-F234-4020-8712-8892BA614CC1}
// *********************************************************************//
  IAnunciante = interface(IDispatch)
    ['{F1D281DA-F234-4020-8712-8892BA614CC1}']
    function Get_Codigo: Integer; safecall;
    procedure Set_Codigo(Value: Integer); safecall;
    function Get_NomAnunciante: WideString; safecall;
    procedure Set_NomAnunciante(const Value: WideString); safecall;
    function Get_TxtEmailAnunciante: WideString; safecall;
    procedure Set_TxtEmailAnunciante(const Value: WideString); safecall;
    function Get_DtaFimValidade: TDateTime; safecall;
    procedure Set_DtaFimValidade(Value: TDateTime); safecall;
    property Codigo: Integer read Get_Codigo write Set_Codigo;
    property NomAnunciante: WideString read Get_NomAnunciante write Set_NomAnunciante;
    property TxtEmailAnunciante: WideString read Get_TxtEmailAnunciante write Set_TxtEmailAnunciante;
    property DtaFimValidade: TDateTime read Get_DtaFimValidade write Set_DtaFimValidade;
  end;

// *********************************************************************//
// DispIntf:  IAnuncianteDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1D281DA-F234-4020-8712-8892BA614CC1}
// *********************************************************************//
  IAnuncianteDisp = dispinterface
    ['{F1D281DA-F234-4020-8712-8892BA614CC1}']
    property Codigo: Integer dispid 1;
    property NomAnunciante: WideString dispid 2;
    property TxtEmailAnunciante: WideString dispid 3;
    property DtaFimValidade: TDateTime dispid 4;
  end;

// *********************************************************************//
// Interface: IAnunciantes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6F6003D9-E20B-432B-9065-9A0D9C3E43FA}
// *********************************************************************//
  IAnunciantes = interface(IDispatch)
    ['{6F6003D9-E20B-432B-9065-9A0D9C3E43FA}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(IndPesquisarDesativados: WordBool): Integer; safecall;
    function Inserir(const NomAnunciante: WideString; const TxtEmailAnunciante: WideString): Integer; safecall;
    function Alterar(CodAnunciante: Integer; const TxtEmailAnunciante: WideString): Integer; safecall;
    function Excluir(CodAnunciante: Integer): Integer; safecall;
    function Buscar(CodAnunciante: Integer): Integer; safecall;
    function Get_Inicializado: WordBool; safecall;
    function Get_Anunciante: IAnunciante; safecall;
    property Inicializado: WordBool read Get_Inicializado;
    property Anunciante: IAnunciante read Get_Anunciante;
  end;

// *********************************************************************//
// DispIntf:  IAnunciantesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6F6003D9-E20B-432B-9065-9A0D9C3E43FA}
// *********************************************************************//
  IAnunciantesDisp = dispinterface
    ['{6F6003D9-E20B-432B-9065-9A0D9C3E43FA}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    procedure FecharPesquisa; dispid 11;
    function Pesquisar(IndPesquisarDesativados: WordBool): Integer; dispid 12;
    function Inserir(const NomAnunciante: WideString; const TxtEmailAnunciante: WideString): Integer; dispid 13;
    function Alterar(CodAnunciante: Integer; const TxtEmailAnunciante: WideString): Integer; dispid 14;
    function Excluir(CodAnunciante: Integer): Integer; dispid 15;
    function Buscar(CodAnunciante: Integer): Integer; dispid 16;
    property Inicializado: WordBool readonly dispid 17;
    property Anunciante: IAnunciante readonly dispid 18;
  end;

// *********************************************************************//
// Interface: IPrograma
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A9308C3-F3FE-4150-8D6D-3B11E3B01315}
// *********************************************************************//
  IPrograma = interface(IDispatch)
    ['{1A9308C3-F3FE-4150-8D6D-3B11E3B01315}']
    function Get_CodGrupoPaginas: Integer; safecall;
    procedure Set_CodGrupoPaginas(Value: Integer); safecall;
    function Get_SeqPosicaoBanner: Integer; safecall;
    procedure Set_SeqPosicaoBanner(Value: Integer); safecall;
    function Get_DtaInicioAnuncio: TDateTime; safecall;
    procedure Set_DtaInicioAnuncio(Value: TDateTime); safecall;
    function Get_DtaFimAnuncio: TDateTime; safecall;
    procedure Set_DtaFimAnuncio(Value: TDateTime); safecall;
    function Get_CodBanner: Integer; safecall;
    procedure Set_CodBanner(Value: Integer); safecall;
    function Get_DesGrupoPaginas: WideString; safecall;
    procedure Set_DesGrupoPaginas(const Value: WideString); safecall;
    function Get_DesPosicaoBanner: WideString; safecall;
    procedure Set_DesPosicaoBanner(const Value: WideString); safecall;
    function Get_NomArquivo: WideString; safecall;
    procedure Set_NomArquivo(const Value: WideString); safecall;
    property CodGrupoPaginas: Integer read Get_CodGrupoPaginas write Set_CodGrupoPaginas;
    property SeqPosicaoBanner: Integer read Get_SeqPosicaoBanner write Set_SeqPosicaoBanner;
    property DtaInicioAnuncio: TDateTime read Get_DtaInicioAnuncio write Set_DtaInicioAnuncio;
    property DtaFimAnuncio: TDateTime read Get_DtaFimAnuncio write Set_DtaFimAnuncio;
    property CodBanner: Integer read Get_CodBanner write Set_CodBanner;
    property DesGrupoPaginas: WideString read Get_DesGrupoPaginas write Set_DesGrupoPaginas;
    property DesPosicaoBanner: WideString read Get_DesPosicaoBanner write Set_DesPosicaoBanner;
    property NomArquivo: WideString read Get_NomArquivo write Set_NomArquivo;
  end;

// *********************************************************************//
// DispIntf:  IProgramaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1A9308C3-F3FE-4150-8D6D-3B11E3B01315}
// *********************************************************************//
  IProgramaDisp = dispinterface
    ['{1A9308C3-F3FE-4150-8D6D-3B11E3B01315}']
    property CodGrupoPaginas: Integer dispid 1;
    property SeqPosicaoBanner: Integer dispid 2;
    property DtaInicioAnuncio: TDateTime dispid 3;
    property DtaFimAnuncio: TDateTime dispid 4;
    property CodBanner: Integer dispid 5;
    property DesGrupoPaginas: WideString dispid 6;
    property DesPosicaoBanner: WideString dispid 7;
    property NomArquivo: WideString dispid 8;
  end;

// *********************************************************************//
// Interface: IProgramas
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97AB474B-A003-477D-804E-27B9873A1ED8}
// *********************************************************************//
  IProgramas = interface(IDispatch)
    ['{97AB474B-A003-477D-804E-27B9873A1ED8}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(CodGrupoPaginas: Integer; DtaInicioAnuncio: TDateTime; 
                       DtaFimAnuncio: TDateTime; IndAnunciosInativos: WordBool; 
                       IndOrdemCrescente: WordBool): Integer; safecall;
    function Inserir(CodGrupoPaginas: Integer; SeqPosicaoBanner: Integer; 
                     DtaInicioAnuncio: TDateTime; DtaFimAnuncio: TDateTime; CodBanner: Integer): Integer; safecall;
    function Alterar(CodGrupoPaginas: Integer; SeqPosicaoBanner: Integer; 
                     DtaInicioAnuncio: TDateTime; DtaInicioAnuncioNova: TDateTime; 
                     DtaFimAnuncioNova: TDateTime; CodBannerNovo: Integer): Integer; safecall;
    function Excluir(CodGrupoPaginas: Integer; SeqPosicaoBanner: Integer; 
                     DtaInicioAnuncio: TDateTime): Integer; safecall;
    function Buscar(CodGrupoPaginas: Integer; SeqPosicaoBanner: Integer; DtaInicioAnuncio: TDateTime): Integer; safecall;
    function PesquisarUltimos(CodGrupoPaginas: Integer; QtdDiasRetroativos: Integer): Integer; safecall;
    function Get_Inicializado: WordBool; safecall;
    function Get_Programa: IPrograma; safecall;
    property Inicializado: WordBool read Get_Inicializado;
    property Programa: IPrograma read Get_Programa;
  end;

// *********************************************************************//
// DispIntf:  IProgramasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97AB474B-A003-477D-804E-27B9873A1ED8}
// *********************************************************************//
  IProgramasDisp = dispinterface
    ['{97AB474B-A003-477D-804E-27B9873A1ED8}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    procedure FecharPesquisa; dispid 11;
    function Pesquisar(CodGrupoPaginas: Integer; DtaInicioAnuncio: TDateTime; 
                       DtaFimAnuncio: TDateTime; IndAnunciosInativos: WordBool; 
                       IndOrdemCrescente: WordBool): Integer; dispid 12;
    function Inserir(CodGrupoPaginas: Integer; SeqPosicaoBanner: Integer; 
                     DtaInicioAnuncio: TDateTime; DtaFimAnuncio: TDateTime; CodBanner: Integer): Integer; dispid 13;
    function Alterar(CodGrupoPaginas: Integer; SeqPosicaoBanner: Integer; 
                     DtaInicioAnuncio: TDateTime; DtaInicioAnuncioNova: TDateTime; 
                     DtaFimAnuncioNova: TDateTime; CodBannerNovo: Integer): Integer; dispid 14;
    function Excluir(CodGrupoPaginas: Integer; SeqPosicaoBanner: Integer; 
                     DtaInicioAnuncio: TDateTime): Integer; dispid 15;
    function Buscar(CodGrupoPaginas: Integer; SeqPosicaoBanner: Integer; DtaInicioAnuncio: TDateTime): Integer; dispid 16;
    function PesquisarUltimos(CodGrupoPaginas: Integer; QtdDiasRetroativos: Integer): Integer; dispid 17;
    property Inicializado: WordBool readonly dispid 18;
    property Programa: IPrograma readonly dispid 19;
  end;

// *********************************************************************//
// Interface: IResultadosAnuncio
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {547DB6CE-C174-4737-BDC9-6112B7617745}
// *********************************************************************//
  IResultadosAnuncio = interface(IDispatch)
    ['{547DB6CE-C174-4737-BDC9-6112B7617745}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(CodAnunciante: Integer; CodPagina: Integer; DtaInicio: TDateTime; 
                       DtaFim: TDateTime; IndDetalheData: WordBool; IndDetalhePagina: WordBool; 
                       IndDetalheBanner: WordBool): Integer; safecall;
    function GerarRelatorio(CodAnunciante: Integer; CodPagina: Integer; DtaInicio: TDateTime; 
                            DtaFim: TDateTime; IndDetalheData: WordBool; 
                            IndDetalhePagina: WordBool; IndDetalheBanner: WordBool; Tipo: Integer): WideString; safecall;
  end;

// *********************************************************************//
// DispIntf:  IResultadosAnuncioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {547DB6CE-C174-4737-BDC9-6112B7617745}
// *********************************************************************//
  IResultadosAnuncioDisp = dispinterface
    ['{547DB6CE-C174-4737-BDC9-6112B7617745}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    procedure FecharPesquisa; dispid 11;
    function Pesquisar(CodAnunciante: Integer; CodPagina: Integer; DtaInicio: TDateTime; 
                       DtaFim: TDateTime; IndDetalheData: WordBool; IndDetalhePagina: WordBool; 
                       IndDetalheBanner: WordBool): Integer; dispid 12;
    function GerarRelatorio(CodAnunciante: Integer; CodPagina: Integer; DtaInicio: TDateTime; 
                            DtaFim: TDateTime; IndDetalheData: WordBool; 
                            IndDetalhePagina: WordBool; IndDetalheBanner: WordBool; Tipo: Integer): WideString; dispid 13;
  end;

// *********************************************************************//
// Interface: IUsuario
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {74D1CCBC-3C39-465A-A3E6-CD864724E69F}
// *********************************************************************//
  IUsuario = interface(IDispatch)
    ['{74D1CCBC-3C39-465A-A3E6-CD864724E69F}']
    function Get_CodUsuario: Integer; safecall;
    procedure Set_CodUsuario(Value: Integer); safecall;
    function Get_NomUsuario: WideString; safecall;
    procedure Set_NomUsuario(const Value: WideString); safecall;
    function Get_NomTratamento: WideString; safecall;
    procedure Set_NomTratamento(const Value: WideString); safecall;
    function Get_CodPessoa: Integer; safecall;
    procedure Set_CodPessoa(Value: Integer); safecall;
    function Get_NomPessoa: WideString; safecall;
    procedure Set_NomPessoa(const Value: WideString); safecall;
    function Get_CodNaturezaPessoa: WideString; safecall;
    procedure Set_CodNaturezaPessoa(const Value: WideString); safecall;
    function Get_NumCNPJCPF: WideString; safecall;
    procedure Set_NumCNPJCPF(const Value: WideString); safecall;
    function Get_CodPapel: Integer; safecall;
    procedure Set_CodPapel(Value: Integer); safecall;
    function Get_DesPapel: WideString; safecall;
    procedure Set_DesPapel(const Value: WideString); safecall;
    function Get_CodPerfil: Integer; safecall;
    procedure Set_CodPerfil(Value: Integer); safecall;
    function Get_DesPerfil: WideString; safecall;
    procedure Set_DesPerfil(const Value: WideString); safecall;
    function Get_QtdAcumLoginsCorretos: Integer; safecall;
    procedure Set_QtdAcumLoginsCorretos(Value: Integer); safecall;
    function Get_QtdAcumLoginsIncorretos: Integer; safecall;
    procedure Set_QtdAcumLoginsIncorretos(Value: Integer); safecall;
    function Get_DtaUltimoLoginCorreto: TDateTime; safecall;
    procedure Set_DtaUltimoLoginCorreto(Value: TDateTime); safecall;
    function Get_DtaUltimoLoginIncorreto: TDateTime; safecall;
    procedure Set_DtaUltimoLoginIncorreto(Value: TDateTime); safecall;
    function Get_QtdLoginsIncorretos: Integer; safecall;
    procedure Set_QtdLoginsIncorretos(Value: Integer); safecall;
    function Get_DtaCriacaoUsuario: TDateTime; safecall;
    procedure Set_DtaCriacaoUsuario(Value: TDateTime); safecall;
    function Get_NumCNPJCPFFormatado: WideString; safecall;
    procedure Set_NumCNPJCPFFormatado(const Value: WideString); safecall;
    function Get_DtaPenultimoLoginCorreto: TDateTime; safecall;
    procedure Set_DtaPenultimoLoginCorreto(Value: TDateTime); safecall;
    function Get_DtaFimValidade: TDateTime; safecall;
    procedure Set_DtaFimValidade(Value: TDateTime); safecall;
    function Get_IndUsuarioFTP: WideString; safecall;
    procedure Set_IndUsuarioFTP(const Value: WideString); safecall;
    function Get_NomUsuarioReduzido: WideString; safecall;
    procedure Set_NomUsuarioReduzido(const Value: WideString); safecall;
    property CodUsuario: Integer read Get_CodUsuario write Set_CodUsuario;
    property NomUsuario: WideString read Get_NomUsuario write Set_NomUsuario;
    property NomTratamento: WideString read Get_NomTratamento write Set_NomTratamento;
    property CodPessoa: Integer read Get_CodPessoa write Set_CodPessoa;
    property NomPessoa: WideString read Get_NomPessoa write Set_NomPessoa;
    property CodNaturezaPessoa: WideString read Get_CodNaturezaPessoa write Set_CodNaturezaPessoa;
    property NumCNPJCPF: WideString read Get_NumCNPJCPF write Set_NumCNPJCPF;
    property CodPapel: Integer read Get_CodPapel write Set_CodPapel;
    property DesPapel: WideString read Get_DesPapel write Set_DesPapel;
    property CodPerfil: Integer read Get_CodPerfil write Set_CodPerfil;
    property DesPerfil: WideString read Get_DesPerfil write Set_DesPerfil;
    property QtdAcumLoginsCorretos: Integer read Get_QtdAcumLoginsCorretos write Set_QtdAcumLoginsCorretos;
    property QtdAcumLoginsIncorretos: Integer read Get_QtdAcumLoginsIncorretos write Set_QtdAcumLoginsIncorretos;
    property DtaUltimoLoginCorreto: TDateTime read Get_DtaUltimoLoginCorreto write Set_DtaUltimoLoginCorreto;
    property DtaUltimoLoginIncorreto: TDateTime read Get_DtaUltimoLoginIncorreto write Set_DtaUltimoLoginIncorreto;
    property QtdLoginsIncorretos: Integer read Get_QtdLoginsIncorretos write Set_QtdLoginsIncorretos;
    property DtaCriacaoUsuario: TDateTime read Get_DtaCriacaoUsuario write Set_DtaCriacaoUsuario;
    property NumCNPJCPFFormatado: WideString read Get_NumCNPJCPFFormatado write Set_NumCNPJCPFFormatado;
    property DtaPenultimoLoginCorreto: TDateTime read Get_DtaPenultimoLoginCorreto write Set_DtaPenultimoLoginCorreto;
    property DtaFimValidade: TDateTime read Get_DtaFimValidade write Set_DtaFimValidade;
    property IndUsuarioFTP: WideString read Get_IndUsuarioFTP write Set_IndUsuarioFTP;
    property NomUsuarioReduzido: WideString read Get_NomUsuarioReduzido write Set_NomUsuarioReduzido;
  end;

// *********************************************************************//
// DispIntf:  IUsuarioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {74D1CCBC-3C39-465A-A3E6-CD864724E69F}
// *********************************************************************//
  IUsuarioDisp = dispinterface
    ['{74D1CCBC-3C39-465A-A3E6-CD864724E69F}']
    property CodUsuario: Integer dispid 1;
    property NomUsuario: WideString dispid 2;
    property NomTratamento: WideString dispid 3;
    property CodPessoa: Integer dispid 4;
    property NomPessoa: WideString dispid 5;
    property CodNaturezaPessoa: WideString dispid 6;
    property NumCNPJCPF: WideString dispid 7;
    property CodPapel: Integer dispid 8;
    property DesPapel: WideString dispid 9;
    property CodPerfil: Integer dispid 10;
    property DesPerfil: WideString dispid 11;
    property QtdAcumLoginsCorretos: Integer dispid 12;
    property QtdAcumLoginsIncorretos: Integer dispid 13;
    property DtaUltimoLoginCorreto: TDateTime dispid 14;
    property DtaUltimoLoginIncorreto: TDateTime dispid 15;
    property QtdLoginsIncorretos: Integer dispid 16;
    property DtaCriacaoUsuario: TDateTime dispid 17;
    property NumCNPJCPFFormatado: WideString dispid 18;
    property DtaPenultimoLoginCorreto: TDateTime dispid 19;
    property DtaFimValidade: TDateTime dispid 21;
    property IndUsuarioFTP: WideString dispid 20;
    property NomUsuarioReduzido: WideString dispid 201;
  end;

// *********************************************************************//
// Interface: IItemMenu
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82827CC7-5082-4631-909B-DB3E087A9DC2}
// *********************************************************************//
  IItemMenu = interface(IDispatch)
    ['{82827CC7-5082-4631-909B-DB3E087A9DC2}']
    function Get_CodItemMenu: Integer; safecall;
    procedure Set_CodItemMenu(Value: Integer); safecall;
    function Get_TxtTitulo: WideString; safecall;
    procedure Set_TxtTitulo(const Value: WideString); safecall;
    function Get_TxtHintItemMenu: WideString; safecall;
    procedure Set_TxtHintItemMenu(const Value: WideString); safecall;
    function Get_IndDestaqueTitulo: WideString; safecall;
    procedure Set_IndDestaqueTitulo(const Value: WideString); safecall;
    function Get_CodItemPai: Integer; safecall;
    procedure Set_CodItemPai(Value: Integer); safecall;
    function Get_NumOrdem: Integer; safecall;
    procedure Set_NumOrdem(Value: Integer); safecall;
    function Get_NumNivel: Integer; safecall;
    procedure Set_NumNivel(Value: Integer); safecall;
    function Get_QtdFilhos: Integer; safecall;
    procedure Set_QtdFilhos(Value: Integer); safecall;
    function Get_CodPagina: Integer; safecall;
    procedure Set_CodPagina(Value: Integer); safecall;
    function Get_URLPagina: WideString; safecall;
    procedure Set_URLPagina(const Value: WideString); safecall;
    property CodItemMenu: Integer read Get_CodItemMenu write Set_CodItemMenu;
    property TxtTitulo: WideString read Get_TxtTitulo write Set_TxtTitulo;
    property TxtHintItemMenu: WideString read Get_TxtHintItemMenu write Set_TxtHintItemMenu;
    property IndDestaqueTitulo: WideString read Get_IndDestaqueTitulo write Set_IndDestaqueTitulo;
    property CodItemPai: Integer read Get_CodItemPai write Set_CodItemPai;
    property NumOrdem: Integer read Get_NumOrdem write Set_NumOrdem;
    property NumNivel: Integer read Get_NumNivel write Set_NumNivel;
    property QtdFilhos: Integer read Get_QtdFilhos write Set_QtdFilhos;
    property CodPagina: Integer read Get_CodPagina write Set_CodPagina;
    property URLPagina: WideString read Get_URLPagina write Set_URLPagina;
  end;

// *********************************************************************//
// DispIntf:  IItemMenuDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82827CC7-5082-4631-909B-DB3E087A9DC2}
// *********************************************************************//
  IItemMenuDisp = dispinterface
    ['{82827CC7-5082-4631-909B-DB3E087A9DC2}']
    property CodItemMenu: Integer dispid 1;
    property TxtTitulo: WideString dispid 2;
    property TxtHintItemMenu: WideString dispid 3;
    property IndDestaqueTitulo: WideString dispid 4;
    property CodItemPai: Integer dispid 5;
    property NumOrdem: Integer dispid 6;
    property NumNivel: Integer dispid 7;
    property QtdFilhos: Integer dispid 8;
    property CodPagina: Integer dispid 9;
    property URLPagina: WideString dispid 10;
  end;

// *********************************************************************//
// Interface: IBloqueio
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60D462A6-B209-4AE3-9201-438AF04E87B8}
// *********************************************************************//
  IBloqueio = interface(IDispatch)
    ['{60D462A6-B209-4AE3-9201-438AF04E87B8}']
    function Get_DtaInicioBloqueio: TDateTime; safecall;
    procedure Set_DtaInicioBloqueio(Value: TDateTime); safecall;
    function Get_CodMotivoBloqueio: Integer; safecall;
    procedure Set_CodMotivoBloqueio(Value: Integer); safecall;
    function Get_CodAplicacaoBloqueio: WideString; safecall;
    procedure Set_CodAplicacaoBloqueio(const Value: WideString); safecall;
    function Get_TxtMotivoBloqueio: WideString; safecall;
    procedure Set_TxtMotivoBloqueio(const Value: WideString); safecall;
    function Get_TxtObservacaoBloqueio: WideString; safecall;
    procedure Set_TxtObservacaoBloqueio(const Value: WideString); safecall;
    function Get_TxtObservacaoUsuario: WideString; safecall;
    procedure Set_TxtObservacaoUsuario(const Value: WideString); safecall;
    function Get_TxtProcedimentoUsuario: WideString; safecall;
    procedure Set_TxtProcedimentoUsuario(const Value: WideString); safecall;
    function Get_CodUsuario: Integer; safecall;
    procedure Set_CodUsuario(Value: Integer); safecall;
    function Get_CodPessoaProdutor: Integer; safecall;
    procedure Set_CodPessoaProdutor(Value: Integer); safecall;
    function Get_TxtMotivoUsuario: WideString; safecall;
    procedure Set_TxtMotivoUsuario(const Value: WideString); safecall;
    function Get_CodUsuarioResponsavel: Integer; safecall;
    procedure Set_CodUsuarioResponsavel(Value: Integer); safecall;
    function Get_NomUsuarioResponsavel: WideString; safecall;
    procedure Set_NomUsuarioResponsavel(const Value: WideString); safecall;
    function Get_NomUsuario: WideString; safecall;
    procedure Set_NomUsuario(const Value: WideString); safecall;
    function Get_NomPessoa: WideString; safecall;
    procedure Set_NomPessoa(const Value: WideString); safecall;
    function Get_DtaFimBloqueio: TDateTime; safecall;
    procedure Set_DtaFimBloqueio(Value: TDateTime); safecall;
    property DtaInicioBloqueio: TDateTime read Get_DtaInicioBloqueio write Set_DtaInicioBloqueio;
    property CodMotivoBloqueio: Integer read Get_CodMotivoBloqueio write Set_CodMotivoBloqueio;
    property CodAplicacaoBloqueio: WideString read Get_CodAplicacaoBloqueio write Set_CodAplicacaoBloqueio;
    property TxtMotivoBloqueio: WideString read Get_TxtMotivoBloqueio write Set_TxtMotivoBloqueio;
    property TxtObservacaoBloqueio: WideString read Get_TxtObservacaoBloqueio write Set_TxtObservacaoBloqueio;
    property TxtObservacaoUsuario: WideString read Get_TxtObservacaoUsuario write Set_TxtObservacaoUsuario;
    property TxtProcedimentoUsuario: WideString read Get_TxtProcedimentoUsuario write Set_TxtProcedimentoUsuario;
    property CodUsuario: Integer read Get_CodUsuario write Set_CodUsuario;
    property CodPessoaProdutor: Integer read Get_CodPessoaProdutor write Set_CodPessoaProdutor;
    property TxtMotivoUsuario: WideString read Get_TxtMotivoUsuario write Set_TxtMotivoUsuario;
    property CodUsuarioResponsavel: Integer read Get_CodUsuarioResponsavel write Set_CodUsuarioResponsavel;
    property NomUsuarioResponsavel: WideString read Get_NomUsuarioResponsavel write Set_NomUsuarioResponsavel;
    property NomUsuario: WideString read Get_NomUsuario write Set_NomUsuario;
    property NomPessoa: WideString read Get_NomPessoa write Set_NomPessoa;
    property DtaFimBloqueio: TDateTime read Get_DtaFimBloqueio write Set_DtaFimBloqueio;
  end;

// *********************************************************************//
// DispIntf:  IBloqueioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60D462A6-B209-4AE3-9201-438AF04E87B8}
// *********************************************************************//
  IBloqueioDisp = dispinterface
    ['{60D462A6-B209-4AE3-9201-438AF04E87B8}']
    property DtaInicioBloqueio: TDateTime dispid 1;
    property CodMotivoBloqueio: Integer dispid 2;
    property CodAplicacaoBloqueio: WideString dispid 3;
    property TxtMotivoBloqueio: WideString dispid 4;
    property TxtObservacaoBloqueio: WideString dispid 5;
    property TxtObservacaoUsuario: WideString dispid 6;
    property TxtProcedimentoUsuario: WideString dispid 7;
    property CodUsuario: Integer dispid 8;
    property CodPessoaProdutor: Integer dispid 9;
    property TxtMotivoUsuario: WideString dispid 10;
    property CodUsuarioResponsavel: Integer dispid 11;
    property NomUsuarioResponsavel: WideString dispid 12;
    property NomUsuario: WideString dispid 13;
    property NomPessoa: WideString dispid 14;
    property DtaFimBloqueio: TDateTime dispid 15;
  end;

// *********************************************************************//
// Interface: IProdutor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F35AAD5A-91D7-4794-B4AC-6B4B71EA868A}
// *********************************************************************//
  IProdutor = interface(IDispatch)
    ['{F35AAD5A-91D7-4794-B4AC-6B4B71EA868A}']
    function Get_CodProdutor: Integer; safecall;
    procedure Set_CodProdutor(Value: Integer); safecall;
    function Get_NomProdutor: WideString; safecall;
    procedure Set_NomProdutor(const Value: WideString); safecall;
    function Get_CodNatureza: WideString; safecall;
    procedure Set_CodNatureza(const Value: WideString); safecall;
    function Get_NumCPFCNPJ: WideString; safecall;
    procedure Set_NumCPFCNPJ(const Value: WideString); safecall;
    function Get_NumCPFCNPJFormatado: WideString; safecall;
    procedure Set_NumCPFCNPJFormatado(const Value: WideString); safecall;
    function Get_SglProdutor: WideString; safecall;
    procedure Set_SglProdutor(const Value: WideString); safecall;
    function Get_QtdCaracterCodManejo: Integer; safecall;
    procedure Set_QtdCaracterCodManejo(Value: Integer); safecall;
    function Get_IndConsultaPublica: WideString; safecall;
    procedure Set_IndConsultaPublica(const Value: WideString); safecall;
    function Get_CodTipoAgrupamentoRacas: Integer; safecall;
    procedure Set_CodTipoAgrupamentoRacas(Value: Integer); safecall;
    function Get_QtdDenominadorCompRacial: Integer; safecall;
    procedure Set_QtdDenominadorCompRacial(Value: Integer); safecall;
    function Get_QtdDiasEntreCoberturas: Integer; safecall;
    procedure Set_QtdDiasEntreCoberturas(Value: Integer); safecall;
    function Get_QtdDiasDescansoReprodutivo: Integer; safecall;
    procedure Set_QtdDiasDescansoReprodutivo(Value: Integer); safecall;
    function Get_QtdDiasDiagnosticoGestacao: Integer; safecall;
    procedure Set_QtdDiasDiagnosticoGestacao(Value: Integer); safecall;
    function Get_CodSituacaoSisBov: WideString; safecall;
    procedure Set_CodSituacaoSisBov(const Value: WideString); safecall;
    function Get_CodAptidao: Integer; safecall;
    procedure Set_CodAptidao(Value: Integer); safecall;
    function Get_IndMostrarNome: WideString; safecall;
    procedure Set_IndMostrarNome(const Value: WideString); safecall;
    function Get_IndMostrarIdentificadores: WideString; safecall;
    procedure Set_IndMostrarIdentificadores(const Value: WideString); safecall;
    function Get_IndTransfereEmbrioes: WideString; safecall;
    procedure Set_IndTransfereEmbrioes(const Value: WideString); safecall;
    function Get_IndMostrarFiltroCompRacial: WideString; safecall;
    procedure Set_IndMostrarFiltroCompRacial(const Value: WideString); safecall;
    function Get_IndEstacaoMonta: WideString; safecall;
    procedure Set_IndEstacaoMonta(const Value: WideString); safecall;
    function Get_IndTrabalhaAssociacaoRaca: WideString; safecall;
    procedure Set_IndTrabalhaAssociacaoRaca(const Value: WideString); safecall;
    function Get_QtdIdadeMinimaDesmame: Integer; safecall;
    procedure Set_QtdIdadeMinimaDesmame(Value: Integer); safecall;
    function Get_QtdIdadeMaximaDesmame: Integer; safecall;
    procedure Set_QtdIdadeMaximaDesmame(Value: Integer); safecall;
    function Get_IndAplicarDesmameAutomatico: WideString; safecall;
    procedure Set_IndAplicarDesmameAutomatico(const Value: WideString); safecall;
    property CodProdutor: Integer read Get_CodProdutor write Set_CodProdutor;
    property NomProdutor: WideString read Get_NomProdutor write Set_NomProdutor;
    property CodNatureza: WideString read Get_CodNatureza write Set_CodNatureza;
    property NumCPFCNPJ: WideString read Get_NumCPFCNPJ write Set_NumCPFCNPJ;
    property NumCPFCNPJFormatado: WideString read Get_NumCPFCNPJFormatado write Set_NumCPFCNPJFormatado;
    property SglProdutor: WideString read Get_SglProdutor write Set_SglProdutor;
    property QtdCaracterCodManejo: Integer read Get_QtdCaracterCodManejo write Set_QtdCaracterCodManejo;
    property IndConsultaPublica: WideString read Get_IndConsultaPublica write Set_IndConsultaPublica;
    property CodTipoAgrupamentoRacas: Integer read Get_CodTipoAgrupamentoRacas write Set_CodTipoAgrupamentoRacas;
    property QtdDenominadorCompRacial: Integer read Get_QtdDenominadorCompRacial write Set_QtdDenominadorCompRacial;
    property QtdDiasEntreCoberturas: Integer read Get_QtdDiasEntreCoberturas write Set_QtdDiasEntreCoberturas;
    property QtdDiasDescansoReprodutivo: Integer read Get_QtdDiasDescansoReprodutivo write Set_QtdDiasDescansoReprodutivo;
    property QtdDiasDiagnosticoGestacao: Integer read Get_QtdDiasDiagnosticoGestacao write Set_QtdDiasDiagnosticoGestacao;
    property CodSituacaoSisBov: WideString read Get_CodSituacaoSisBov write Set_CodSituacaoSisBov;
    property CodAptidao: Integer read Get_CodAptidao write Set_CodAptidao;
    property IndMostrarNome: WideString read Get_IndMostrarNome write Set_IndMostrarNome;
    property IndMostrarIdentificadores: WideString read Get_IndMostrarIdentificadores write Set_IndMostrarIdentificadores;
    property IndTransfereEmbrioes: WideString read Get_IndTransfereEmbrioes write Set_IndTransfereEmbrioes;
    property IndMostrarFiltroCompRacial: WideString read Get_IndMostrarFiltroCompRacial write Set_IndMostrarFiltroCompRacial;
    property IndEstacaoMonta: WideString read Get_IndEstacaoMonta write Set_IndEstacaoMonta;
    property IndTrabalhaAssociacaoRaca: WideString read Get_IndTrabalhaAssociacaoRaca write Set_IndTrabalhaAssociacaoRaca;
    property QtdIdadeMinimaDesmame: Integer read Get_QtdIdadeMinimaDesmame write Set_QtdIdadeMinimaDesmame;
    property QtdIdadeMaximaDesmame: Integer read Get_QtdIdadeMaximaDesmame write Set_QtdIdadeMaximaDesmame;
    property IndAplicarDesmameAutomatico: WideString read Get_IndAplicarDesmameAutomatico write Set_IndAplicarDesmameAutomatico;
  end;

// *********************************************************************//
// DispIntf:  IProdutorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F35AAD5A-91D7-4794-B4AC-6B4B71EA868A}
// *********************************************************************//
  IProdutorDisp = dispinterface
    ['{F35AAD5A-91D7-4794-B4AC-6B4B71EA868A}']
    property CodProdutor: Integer dispid 1;
    property NomProdutor: WideString dispid 2;
    property CodNatureza: WideString dispid 3;
    property NumCPFCNPJ: WideString dispid 4;
    property NumCPFCNPJFormatado: WideString dispid 5;
    property SglProdutor: WideString dispid 6;
    property QtdCaracterCodManejo: Integer dispid 7;
    property IndConsultaPublica: WideString dispid 8;
    property CodTipoAgrupamentoRacas: Integer dispid 9;
    property QtdDenominadorCompRacial: Integer dispid 10;
    property QtdDiasEntreCoberturas: Integer dispid 11;
    property QtdDiasDescansoReprodutivo: Integer dispid 12;
    property QtdDiasDiagnosticoGestacao: Integer dispid 13;
    property CodSituacaoSisBov: WideString dispid 14;
    property CodAptidao: Integer dispid 15;
    property IndMostrarNome: WideString dispid 16;
    property IndMostrarIdentificadores: WideString dispid 17;
    property IndTransfereEmbrioes: WideString dispid 18;
    property IndMostrarFiltroCompRacial: WideString dispid 19;
    property IndEstacaoMonta: WideString dispid 20;
    property IndTrabalhaAssociacaoRaca: WideString dispid 21;
    property QtdIdadeMinimaDesmame: Integer dispid 22;
    property QtdIdadeMaximaDesmame: Integer dispid 23;
    property IndAplicarDesmameAutomatico: WideString dispid 201;
  end;

// *********************************************************************//
// Interface: IAcesso
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9E3DC518-0A77-4BC5-A51D-9BF9F2B86886}
// *********************************************************************//
  IAcesso = interface(IDispatch)
    ['{9E3DC518-0A77-4BC5-A51D-9BF9F2B86886}']
    function Get_Usuario: IUsuario; safecall;
    function Get_ItemMenu: IItemMenu; safecall;
    function Get_Bloqueio: IBloqueio; safecall;
    function Get_TipoAcesso: WideString; safecall;
    function Get_ProdutorTrabalho: IProdutor; safecall;
    procedure PesquisarItensMenu(CodItemPai: Integer; NumNivelMaximo: Integer); safecall;
    procedure BuscarProximoItemMenu; safecall;
    function EOFItensMenu: WordBool; safecall;
    function PodeExecutarFuncao(CodFuncao: Integer): WordBool; safecall;
    function PesquisarProdutores(CodProdutor: Integer; const NomProdutor: WideString; 
                                 const CodNatureza: WideString; const NumCNPJCPF: WideString): Integer; safecall;
    procedure IrAoProximoProdutor; safecall;
    function ValorCampoProdutor(const NomCampo: WideString): OleVariant; safecall;
    function EOFProdutores: WordBool; safecall;
    procedure FecharPesquisaProdutores; safecall;
    function DefinirProdutorTrabalho(CodProdutor: Integer): Integer; safecall;
    procedure LimparProdutorTrabalho; safecall;
    function ExisteProdutorTrabalho: WordBool; safecall;
    function QtdComunicadosNaoLidos: Integer; safecall;
    function AlterarUsuario(const TxtSenhaAtual: WideString; const NomUsuarioNovo: WideString; 
                            const TxtSenhaNova: WideString; const NomTratamentoNovo: WideString): Integer; safecall;
    function Get_FazendaTrabalho: IFazendaTrabalho; safecall;
    function DefinirFazendaTrabalho(CodFazenda: Integer): Integer; safecall;
    procedure LimparFazendaTrabalho; safecall;
    function ExisteFazendaTrabalho: WordBool; safecall;
    function QtdComunicadosImportantesNaoLidos: Integer; safecall;
    function Get_Parametro: IParametro; safecall;
    property Usuario: IUsuario read Get_Usuario;
    property ItemMenu: IItemMenu read Get_ItemMenu;
    property Bloqueio: IBloqueio read Get_Bloqueio;
    property TipoAcesso: WideString read Get_TipoAcesso;
    property ProdutorTrabalho: IProdutor read Get_ProdutorTrabalho;
    property FazendaTrabalho: IFazendaTrabalho read Get_FazendaTrabalho;
    property Parametro: IParametro read Get_Parametro;
  end;

// *********************************************************************//
// DispIntf:  IAcessoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9E3DC518-0A77-4BC5-A51D-9BF9F2B86886}
// *********************************************************************//
  IAcessoDisp = dispinterface
    ['{9E3DC518-0A77-4BC5-A51D-9BF9F2B86886}']
    property Usuario: IUsuario readonly dispid 1;
    property ItemMenu: IItemMenu readonly dispid 2;
    property Bloqueio: IBloqueio readonly dispid 3;
    property TipoAcesso: WideString readonly dispid 4;
    property ProdutorTrabalho: IProdutor readonly dispid 5;
    procedure PesquisarItensMenu(CodItemPai: Integer; NumNivelMaximo: Integer); dispid 6;
    procedure BuscarProximoItemMenu; dispid 7;
    function EOFItensMenu: WordBool; dispid 8;
    function PodeExecutarFuncao(CodFuncao: Integer): WordBool; dispid 9;
    function PesquisarProdutores(CodProdutor: Integer; const NomProdutor: WideString; 
                                 const CodNatureza: WideString; const NumCNPJCPF: WideString): Integer; dispid 10;
    procedure IrAoProximoProdutor; dispid 11;
    function ValorCampoProdutor(const NomCampo: WideString): OleVariant; dispid 12;
    function EOFProdutores: WordBool; dispid 13;
    procedure FecharPesquisaProdutores; dispid 14;
    function DefinirProdutorTrabalho(CodProdutor: Integer): Integer; dispid 15;
    procedure LimparProdutorTrabalho; dispid 16;
    function ExisteProdutorTrabalho: WordBool; dispid 17;
    function QtdComunicadosNaoLidos: Integer; dispid 18;
    function AlterarUsuario(const TxtSenhaAtual: WideString; const NomUsuarioNovo: WideString; 
                            const TxtSenhaNova: WideString; const NomTratamentoNovo: WideString): Integer; dispid 19;
    property FazendaTrabalho: IFazendaTrabalho readonly dispid 20;
    function DefinirFazendaTrabalho(CodFazenda: Integer): Integer; dispid 21;
    procedure LimparFazendaTrabalho; dispid 22;
    function ExisteFazendaTrabalho: WordBool; dispid 23;
    function QtdComunicadosImportantesNaoLidos: Integer; dispid 24;
    property Parametro: IParametro readonly dispid 25;
  end;

// *********************************************************************//
// Interface: IPessoas
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDE74ECE-4C37-4FA0-93E7-B46BCF800D57}
// *********************************************************************//
  IPessoas = interface(IDispatch)
    ['{DDE74ECE-4C37-4FA0-93E7-B46BCF800D57}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    function Pesquisar(CodPessoa: Integer; const NomPessoa: WideString; CodPapel: Integer; 
                       const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                       const IndBloqueio: WideString; 
                       const IndIncluirCertificadoraDonaSistema: WideString; 
                       IndPesquisarDesativados: WordBool; const SglProdutor: WideString; 
                       const CodOrdenacao: WideString; const IndCadastroEfetivado: WideString; 
                       const IndExportadoSisbov: WideString; 
                       const CodTipoAcessoNaoDesejado: WideString): Integer; safecall;
    procedure FecharPesquisa; safecall;
    function Inserir(const NomPessoa: WideString; const NomReduzidoPessoa: WideString; 
                     const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                     DtaNascimento: TDateTime; const TxtObservacao: WideString; CodPapel: Integer; 
                     const SglProdutor: WideString; CodGrauInstrucao: Integer; 
                     const DesCursoSuperior: WideString; const SglConselhoRegional: WideString; 
                     const NumConselhoRegional: WideString; CodPessoaGestor: Integer; 
                     const Sexo: WideString; const NumIE: WideString; const OrgaoIE: WideString; 
                     const UFIE: WideString; DtaExp: TDateTime): Integer; safecall;
    function Alterar(CodPessoa: Integer; const NomPessoa: WideString; 
                     const NomReduzidoPessoa: WideString; const NumCNPJCPF: WideString; 
                     DtaNascimento: TDateTime; const TxtObservacao: WideString; 
                     const SglProdutor: WideString; CodGrauInstrucao: Integer; 
                     const DesCursoSuperior: WideString; const SglConselhoRegional: WideString; 
                     const NumConselhoRegional: WideString; CodPessoaGestor: Integer; 
                     const Sexo: WideString; const NumIE: WideString; const OrgaoIE: WideString; 
                     const UFIE: WideString; DtaExp: TDateTime; const IndTecnicoAtivo: WideString): Integer; safecall;
    function Buscar(CodPessoa: Integer): Integer; safecall;
    function Excluir(CodPessoa: Integer): Integer; safecall;
    function AdicionarPapel(CodPessoa: Integer; CodPapel: Integer; const SglProdutor: WideString; 
                            CodGrauInstrucao: Integer; const DesCursoSuperior: WideString; 
                            const SglConselhoRegional: WideString; 
                            const NumConselhoRegional: WideString; CodPessoaGestor: Integer; 
                            const IndTecnicoAtivo: WideString): Integer; safecall;
    function RetirarPapel(CodPessoa: Integer; CodPapel: Integer): Integer; safecall;
    function PossuiPapel(CodPessoa: Integer; CodPapel: Integer): Integer; safecall;
    function EfetivarCadastro(CodPessoa: Integer): Integer; safecall;
    function CancelarEfetivacao(CodPessoa: Integer): Integer; safecall;
    function DefinirEndereco(CodPessoa: Integer; CodTipoEndereco: Integer; 
                             const NomLogradouro: WideString; const NomBairro: WideString; 
                             const NumCEP: WideString; CodPais: Integer; CodEstado: Integer; 
                             CodMunicipio: Integer; CodDistrito: Integer): Integer; safecall;
    function Get_Pessoa: IPessoa; safecall;
    function DefinirParametrosProdutor(QtdCaracteres: Integer; 
                                       const IndConsultaPublica: WideString; 
                                       CodTipoAgrupamentoRacas: Integer; 
                                       QtdDenominadorCompRacial: Integer; 
                                       QtdDiasEntreCoberturas: Integer; 
                                       QtdDiasDescansoReprodutivo: Integer; 
                                       QtdDiasDiagnosticoGestacao: Integer; 
                                       const CodSituacaoSisBov: WideString; CodAptidao: Integer; 
                                       const IndMostrarNome: WideString; 
                                       const IndMostrarIdentificadores: WideString; 
                                       const IndTransfereEmbrioes: WideString; 
                                       const IndMostrarFiltroCompRacial: WideString; 
                                       const IndEstacaoMonta: WideString; 
                                       const IndTrabalhaAssociacaoRaca: WideString; 
                                       QtdIdadeMinimaDesmame: Integer; 
                                       QtdIdadeMaximaDesmame: Integer; 
                                       const IndAplicarDesmameAutomatico: WideString): Integer; safecall;
    function PesquisarAvancado(CodPessoa: Integer; const NomPessoa: WideString; CodPapel: Integer; 
                               const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                               const IndBloqueio: WideString; 
                               const IndIncluirCertificadoraDonaSistema: WideString; 
                               IndPesquisarDesativados: WordBool; const SglProdutor: WideString; 
                               const CodOrdenacao: WideString; 
                               const IndCadastroEfetivado: WideString; 
                               const IndExportadoSisbov: WideString; 
                               const CodTipoAcessoNaoDesejado: WideString; CodEstado: Integer; 
                               const NomMunicipio: WideString; const CodMicroRegiao: WideString; 
                               const NomLogradouro: WideString; DiaNascimentoInicio: Integer; 
                               MesNascimentoInicio: Integer; DiaNascimentoFim: Integer; 
                               MesNascimentoFim: Integer): Integer; safecall;
    function GerarRelatorio(CodPessoa: Integer; const NomPessoa: WideString; CodPapel: Integer; 
                            const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                            const IndBloqueio: WideString; 
                            const IndIncluirCertificadoraDonaSistema: WideString; 
                            IndPesquisarDesativados: WordBool; const SglProdutor: WideString; 
                            const CodOrdenacao: WideString; const IndCadastroEfetivado: WideString; 
                            const IndExportadoSisbov: WideString; 
                            const CodTipoAcessoNaoDesejado: WideString; CodEstado: Integer; 
                            const NomMunicipio: WideString; const CodMicroRegiao: WideString; 
                            const NomLogradouro: WideString; DiaNascimentoInicio: Integer; 
                            MesNascimentoInicio: Integer; DiaNascimentoFim: Integer; 
                            MesNascimentoFim: Integer; Tipo: Integer; QtdQuebraRelatorio: Integer): WideString; safecall;
    function PesquisarPorPropriedadeRural(CodPropriedadeRural: Integer): Integer; safecall;
    function LimparEndereco(CodPessoa: Integer): Integer; safecall;
    function PesquisarGestores(CodPessoaGestor: Integer): Integer; safecall;
    function InserirComentario(CodPessoa: Integer; const TxtComentario: WideString): Integer; safecall;
    function ExcluirComentario(CodPessoa: Integer; CodComentario: Integer): Integer; safecall;
    function PesquisarComentario(CodPessoa: Integer; CodComentario: Integer): Integer; safecall;
    property Pessoa: IPessoa read Get_Pessoa;
  end;

// *********************************************************************//
// DispIntf:  IPessoasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDE74ECE-4C37-4FA0-93E7-B46BCF800D57}
// *********************************************************************//
  IPessoasDisp = dispinterface
    ['{DDE74ECE-4C37-4FA0-93E7-B46BCF800D57}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    function Pesquisar(CodPessoa: Integer; const NomPessoa: WideString; CodPapel: Integer; 
                       const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                       const IndBloqueio: WideString; 
                       const IndIncluirCertificadoraDonaSistema: WideString; 
                       IndPesquisarDesativados: WordBool; const SglProdutor: WideString; 
                       const CodOrdenacao: WideString; const IndCadastroEfetivado: WideString; 
                       const IndExportadoSisbov: WideString; 
                       const CodTipoAcessoNaoDesejado: WideString): Integer; dispid 11;
    procedure FecharPesquisa; dispid 12;
    function Inserir(const NomPessoa: WideString; const NomReduzidoPessoa: WideString; 
                     const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                     DtaNascimento: TDateTime; const TxtObservacao: WideString; CodPapel: Integer; 
                     const SglProdutor: WideString; CodGrauInstrucao: Integer; 
                     const DesCursoSuperior: WideString; const SglConselhoRegional: WideString; 
                     const NumConselhoRegional: WideString; CodPessoaGestor: Integer; 
                     const Sexo: WideString; const NumIE: WideString; const OrgaoIE: WideString; 
                     const UFIE: WideString; DtaExp: TDateTime): Integer; dispid 13;
    function Alterar(CodPessoa: Integer; const NomPessoa: WideString; 
                     const NomReduzidoPessoa: WideString; const NumCNPJCPF: WideString; 
                     DtaNascimento: TDateTime; const TxtObservacao: WideString; 
                     const SglProdutor: WideString; CodGrauInstrucao: Integer; 
                     const DesCursoSuperior: WideString; const SglConselhoRegional: WideString; 
                     const NumConselhoRegional: WideString; CodPessoaGestor: Integer; 
                     const Sexo: WideString; const NumIE: WideString; const OrgaoIE: WideString; 
                     const UFIE: WideString; DtaExp: TDateTime; const IndTecnicoAtivo: WideString): Integer; dispid 14;
    function Buscar(CodPessoa: Integer): Integer; dispid 15;
    function Excluir(CodPessoa: Integer): Integer; dispid 16;
    function AdicionarPapel(CodPessoa: Integer; CodPapel: Integer; const SglProdutor: WideString; 
                            CodGrauInstrucao: Integer; const DesCursoSuperior: WideString; 
                            const SglConselhoRegional: WideString; 
                            const NumConselhoRegional: WideString; CodPessoaGestor: Integer; 
                            const IndTecnicoAtivo: WideString): Integer; dispid 17;
    function RetirarPapel(CodPessoa: Integer; CodPapel: Integer): Integer; dispid 18;
    function PossuiPapel(CodPessoa: Integer; CodPapel: Integer): Integer; dispid 19;
    function EfetivarCadastro(CodPessoa: Integer): Integer; dispid 20;
    function CancelarEfetivacao(CodPessoa: Integer): Integer; dispid 21;
    function DefinirEndereco(CodPessoa: Integer; CodTipoEndereco: Integer; 
                             const NomLogradouro: WideString; const NomBairro: WideString; 
                             const NumCEP: WideString; CodPais: Integer; CodEstado: Integer; 
                             CodMunicipio: Integer; CodDistrito: Integer): Integer; dispid 23;
    property Pessoa: IPessoa readonly dispid 24;
    function DefinirParametrosProdutor(QtdCaracteres: Integer; 
                                       const IndConsultaPublica: WideString; 
                                       CodTipoAgrupamentoRacas: Integer; 
                                       QtdDenominadorCompRacial: Integer; 
                                       QtdDiasEntreCoberturas: Integer; 
                                       QtdDiasDescansoReprodutivo: Integer; 
                                       QtdDiasDiagnosticoGestacao: Integer; 
                                       const CodSituacaoSisBov: WideString; CodAptidao: Integer; 
                                       const IndMostrarNome: WideString; 
                                       const IndMostrarIdentificadores: WideString; 
                                       const IndTransfereEmbrioes: WideString; 
                                       const IndMostrarFiltroCompRacial: WideString; 
                                       const IndEstacaoMonta: WideString; 
                                       const IndTrabalhaAssociacaoRaca: WideString; 
                                       QtdIdadeMinimaDesmame: Integer; 
                                       QtdIdadeMaximaDesmame: Integer; 
                                       const IndAplicarDesmameAutomatico: WideString): Integer; dispid 25;
    function PesquisarAvancado(CodPessoa: Integer; const NomPessoa: WideString; CodPapel: Integer; 
                               const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                               const IndBloqueio: WideString; 
                               const IndIncluirCertificadoraDonaSistema: WideString; 
                               IndPesquisarDesativados: WordBool; const SglProdutor: WideString; 
                               const CodOrdenacao: WideString; 
                               const IndCadastroEfetivado: WideString; 
                               const IndExportadoSisbov: WideString; 
                               const CodTipoAcessoNaoDesejado: WideString; CodEstado: Integer; 
                               const NomMunicipio: WideString; const CodMicroRegiao: WideString; 
                               const NomLogradouro: WideString; DiaNascimentoInicio: Integer; 
                               MesNascimentoInicio: Integer; DiaNascimentoFim: Integer; 
                               MesNascimentoFim: Integer): Integer; dispid 22;
    function GerarRelatorio(CodPessoa: Integer; const NomPessoa: WideString; CodPapel: Integer; 
                            const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                            const IndBloqueio: WideString; 
                            const IndIncluirCertificadoraDonaSistema: WideString; 
                            IndPesquisarDesativados: WordBool; const SglProdutor: WideString; 
                            const CodOrdenacao: WideString; const IndCadastroEfetivado: WideString; 
                            const IndExportadoSisbov: WideString; 
                            const CodTipoAcessoNaoDesejado: WideString; CodEstado: Integer; 
                            const NomMunicipio: WideString; const CodMicroRegiao: WideString; 
                            const NomLogradouro: WideString; DiaNascimentoInicio: Integer; 
                            MesNascimentoInicio: Integer; DiaNascimentoFim: Integer; 
                            MesNascimentoFim: Integer; Tipo: Integer; QtdQuebraRelatorio: Integer): WideString; dispid 26;
    function PesquisarPorPropriedadeRural(CodPropriedadeRural: Integer): Integer; dispid 201;
    function LimparEndereco(CodPessoa: Integer): Integer; dispid 202;
    function PesquisarGestores(CodPessoaGestor: Integer): Integer; dispid 203;
    function InserirComentario(CodPessoa: Integer; const TxtComentario: WideString): Integer; dispid 204;
    function ExcluirComentario(CodPessoa: Integer; CodComentario: Integer): Integer; dispid 205;
    function PesquisarComentario(CodPessoa: Integer; CodComentario: Integer): Integer; dispid 207;
  end;

// *********************************************************************//
// Interface: IPapeis
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6A9D89EE-162D-448D-8A76-FFA37E1A27F1}
// *********************************************************************//
  IPapeis = interface(IDispatch)
    ['{6A9D89EE-162D-448D-8A76-FFA37E1A27F1}']
    function Pesquisar(const CodTipoAcessoNaoDesejado: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  IPapeisDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6A9D89EE-162D-448D-8A76-FFA37E1A27F1}
// *********************************************************************//
  IPapeisDisp = dispinterface
    ['{6A9D89EE-162D-448D-8A76-FFA37E1A27F1}']
    function Pesquisar(const CodTipoAcessoNaoDesejado: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
  end;

// *********************************************************************//
// Interface: IUsuarios
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {50784262-2BC3-429B-A6E3-D6176FC38825}
// *********************************************************************//
  IUsuarios = interface(IDispatch)
    ['{50784262-2BC3-429B-A6E3-D6176FC38825}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(const NomUsuario: WideString; CodPerfil: Integer; 
                       const IndUsuarioBloqueado: WideString; CodPessoa: Integer; 
                       const NomPessoa: WideString; CodPapel: Integer; 
                       const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                       CodOrdenacao: Integer; IndPesquisarDesativados: WordBool): Integer; safecall;
    function Inserir(const NomUsuario: WideString; const TxtSenha: WideString; CodPerfil: Integer; 
                     const NomTratamento: WideString; CodPessoa: Integer; CodPapel: Integer): Integer; safecall;
    function Alterar(CodUsuario: Integer; const NomUsuario: WideString; const TxtSenha: WideString; 
                     CodPerfil: Integer; const NomTratamento: WideString): Integer; safecall;
    function Excluir(CodUsuario: Integer): Integer; safecall;
    function Buscar(CodUsuario: Integer): Integer; safecall;
    function Get_Usuario: IUsuario; safecall;
    function seUsuarioFTP(CodUsuario: Integer): Integer; safecall;
    property Usuario: IUsuario read Get_Usuario;
  end;

// *********************************************************************//
// DispIntf:  IUsuariosDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {50784262-2BC3-429B-A6E3-D6176FC38825}
// *********************************************************************//
  IUsuariosDisp = dispinterface
    ['{50784262-2BC3-429B-A6E3-D6176FC38825}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    procedure FecharPesquisa; dispid 11;
    function Pesquisar(const NomUsuario: WideString; CodPerfil: Integer; 
                       const IndUsuarioBloqueado: WideString; CodPessoa: Integer; 
                       const NomPessoa: WideString; CodPapel: Integer; 
                       const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                       CodOrdenacao: Integer; IndPesquisarDesativados: WordBool): Integer; dispid 12;
    function Inserir(const NomUsuario: WideString; const TxtSenha: WideString; CodPerfil: Integer; 
                     const NomTratamento: WideString; CodPessoa: Integer; CodPapel: Integer): Integer; dispid 13;
    function Alterar(CodUsuario: Integer; const NomUsuario: WideString; const TxtSenha: WideString; 
                     CodPerfil: Integer; const NomTratamento: WideString): Integer; dispid 14;
    function Excluir(CodUsuario: Integer): Integer; dispid 15;
    function Buscar(CodUsuario: Integer): Integer; dispid 16;
    property Usuario: IUsuario readonly dispid 17;
    function seUsuarioFTP(CodUsuario: Integer): Integer; dispid 18;
  end;

// *********************************************************************//
// Interface: IComunicado
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {08C05AE4-910B-11D6-A34A-ABCB68004322}
// *********************************************************************//
  IComunicado = interface(IDispatch)
    ['{08C05AE4-910B-11D6-A34A-ABCB68004322}']
    function Get_CodComunicado: Integer; safecall;
    procedure Set_CodComunicado(Value: Integer); safecall;
    function Get_TxtAssunto: WideString; safecall;
    procedure Set_TxtAssunto(const Value: WideString); safecall;
    function Get_TxtComunicado: WideString; safecall;
    procedure Set_TxtComunicado(const Value: WideString); safecall;
    function Get_DtaInicioValidade: TDateTime; safecall;
    procedure Set_DtaInicioValidade(Value: TDateTime); safecall;
    function Get_DtaFimValidade: TDateTime; safecall;
    procedure Set_DtaFimValidade(Value: TDateTime); safecall;
    function Get_DtaEnvioComunicado: TDateTime; safecall;
    procedure Set_DtaEnvioComunicado(Value: TDateTime); safecall;
    function Get_CodUsuarioEnvio: Integer; safecall;
    procedure Set_CodUsuarioEnvio(Value: Integer); safecall;
    function Get_NomUsuarioEnvio: WideString; safecall;
    procedure Set_NomUsuarioEnvio(const Value: WideString); safecall;
    function Get_PessoaEnvio: IPessoa; safecall;
    procedure Set_PessoaEnvio(const Value: IPessoa); safecall;
    function Get_CodPapelEnvio: Integer; safecall;
    procedure Set_CodPapelEnvio(Value: Integer); safecall;
    function Get_DesPapelEnvio: WideString; safecall;
    procedure Set_DesPapelEnvio(const Value: WideString); safecall;
    function Get_CodOpcaoEnvio: Integer; safecall;
    procedure Set_CodOpcaoEnvio(Value: Integer); safecall;
    function Get_DesOpcaoEnvio: WideString; safecall;
    procedure Set_DesOpcaoEnvio(const Value: WideString); safecall;
    function Get_CodUsuarioOpcaoEnvio: Integer; safecall;
    procedure Set_CodUsuarioOpcaoEnvio(Value: Integer); safecall;
    function Get_NomUsuarioOpcaoEnvio: WideString; safecall;
    procedure Set_NomUsuarioOpcaoEnvio(const Value: WideString); safecall;
    function Get_PessoaOpcaoEnvio: IPessoa; safecall;
    procedure Set_PessoaOpcaoEnvio(const Value: IPessoa); safecall;
    function Get_CodPapelOpcaoEnvio: Integer; safecall;
    procedure Set_CodPapelOpcaoEnvio(Value: Integer); safecall;
    function Get_DesPapelOpcaoEnvio: WideString; safecall;
    procedure Set_DesPapelOpcaoEnvio(const Value: WideString); safecall;
    function Get_DesSituacao: WideString; safecall;
    procedure Set_DesSituacao(const Value: WideString); safecall;
    function Get_DtaLeitura: TDateTime; safecall;
    procedure Set_DtaLeitura(Value: TDateTime); safecall;
    property CodComunicado: Integer read Get_CodComunicado write Set_CodComunicado;
    property TxtAssunto: WideString read Get_TxtAssunto write Set_TxtAssunto;
    property TxtComunicado: WideString read Get_TxtComunicado write Set_TxtComunicado;
    property DtaInicioValidade: TDateTime read Get_DtaInicioValidade write Set_DtaInicioValidade;
    property DtaFimValidade: TDateTime read Get_DtaFimValidade write Set_DtaFimValidade;
    property DtaEnvioComunicado: TDateTime read Get_DtaEnvioComunicado write Set_DtaEnvioComunicado;
    property CodUsuarioEnvio: Integer read Get_CodUsuarioEnvio write Set_CodUsuarioEnvio;
    property NomUsuarioEnvio: WideString read Get_NomUsuarioEnvio write Set_NomUsuarioEnvio;
    property PessoaEnvio: IPessoa read Get_PessoaEnvio write Set_PessoaEnvio;
    property CodPapelEnvio: Integer read Get_CodPapelEnvio write Set_CodPapelEnvio;
    property DesPapelEnvio: WideString read Get_DesPapelEnvio write Set_DesPapelEnvio;
    property CodOpcaoEnvio: Integer read Get_CodOpcaoEnvio write Set_CodOpcaoEnvio;
    property DesOpcaoEnvio: WideString read Get_DesOpcaoEnvio write Set_DesOpcaoEnvio;
    property CodUsuarioOpcaoEnvio: Integer read Get_CodUsuarioOpcaoEnvio write Set_CodUsuarioOpcaoEnvio;
    property NomUsuarioOpcaoEnvio: WideString read Get_NomUsuarioOpcaoEnvio write Set_NomUsuarioOpcaoEnvio;
    property PessoaOpcaoEnvio: IPessoa read Get_PessoaOpcaoEnvio write Set_PessoaOpcaoEnvio;
    property CodPapelOpcaoEnvio: Integer read Get_CodPapelOpcaoEnvio write Set_CodPapelOpcaoEnvio;
    property DesPapelOpcaoEnvio: WideString read Get_DesPapelOpcaoEnvio write Set_DesPapelOpcaoEnvio;
    property DesSituacao: WideString read Get_DesSituacao write Set_DesSituacao;
    property DtaLeitura: TDateTime read Get_DtaLeitura write Set_DtaLeitura;
  end;

// *********************************************************************//
// DispIntf:  IComunicadoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {08C05AE4-910B-11D6-A34A-ABCB68004322}
// *********************************************************************//
  IComunicadoDisp = dispinterface
    ['{08C05AE4-910B-11D6-A34A-ABCB68004322}']
    property CodComunicado: Integer dispid 1;
    property TxtAssunto: WideString dispid 2;
    property TxtComunicado: WideString dispid 3;
    property DtaInicioValidade: TDateTime dispid 4;
    property DtaFimValidade: TDateTime dispid 5;
    property DtaEnvioComunicado: TDateTime dispid 6;
    property CodUsuarioEnvio: Integer dispid 7;
    property NomUsuarioEnvio: WideString dispid 8;
    property PessoaEnvio: IPessoa dispid 9;
    property CodPapelEnvio: Integer dispid 10;
    property DesPapelEnvio: WideString dispid 11;
    property CodOpcaoEnvio: Integer dispid 12;
    property DesOpcaoEnvio: WideString dispid 13;
    property CodUsuarioOpcaoEnvio: Integer dispid 14;
    property NomUsuarioOpcaoEnvio: WideString dispid 15;
    property PessoaOpcaoEnvio: IPessoa dispid 16;
    property CodPapelOpcaoEnvio: Integer dispid 17;
    property DesPapelOpcaoEnvio: WideString dispid 18;
    property DesSituacao: WideString dispid 19;
    property DtaLeitura: TDateTime dispid 20;
  end;

// *********************************************************************//
// Interface: IComunicados
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {08C05AE8-910B-11D6-A34A-ABCB68004322}
// *********************************************************************//
  IComunicados = interface(IDispatch)
    ['{08C05AE8-910B-11D6-A34A-ABCB68004322}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function PesquisarNaoLidos(CodUsuarioDestinatario: Integer): Integer; safecall;
    function PesquisarHistorico(CodUsuarioDestinatario: Integer; DtaInicio: TDateTime; 
                                DtaFim: TDateTime): Integer; safecall;
    function EnviarParaUsuario(CodUsuario: Integer; const TxtAssunto: WideString; 
                               const TxtComunicado: WideString; DtaInicioValidade: TDateTime; 
                               DtaFimValidade: TDateTime; 
                               const IndComunicadoImportante: WideString; CodPapel: Integer; 
                               CodOpcaoEnvioComunicado: Integer): Integer; safecall;
    function EnviarParaTodos(const TxtAssunto: WideString; const TxtComunicado: WideString; 
                             DtaInicioValidade: TDateTime; DtaFimValidade: TDateTime; 
                             const IndComunicadoImportante: WideString; CodPapel: Integer; 
                             CodOpcaoEnvioComunicado: Integer): Integer; safecall;
    function EnviarParaProdutores(CodTecnico: Integer; CodAssociacao: Integer; 
                                  const TxtAssunto: WideString; const TxtComunicado: WideString; 
                                  DtaInicioValidade: TDateTime; DtaFimValidade: TDateTime; 
                                  const IndComunicadoImportante: WideString; CodPapel: Integer; 
                                  CodOpcaoEnvioComunicado: Integer): Integer; safecall;
    function EnviarParaTecnicos(CodProdutor: Integer; const TxtAssunto: WideString; 
                                const TxtComunicado: WideString; DtaInicioValidade: TDateTime; 
                                DtaFimValidade: TDateTime; 
                                const IndComunicadoImportante: WideString; CodPapel: Integer; 
                                CodOpcaoEnvioComunicado: Integer): Integer; safecall;
    function EnviarParaAssociacao(CodProdutor: Integer; const TxtAssunto: WideString; 
                                  const TxtComunicado: WideString; DtaInicioValidade: TDateTime; 
                                  DtaFimValidade: TDateTime; 
                                  const IndComunicadoImportante: WideString; CodPapel: Integer; 
                                  CodOpcaoEnvioComunicado: Integer): Integer; safecall;
    function BuscarEnviado(CodComunicado: Integer): Integer; safecall;
    function MarcarComoLido(CodComunicado: Integer): Integer; safecall;
    function PesquisarEnviados(CodUsuarioEnvio: Integer; DtaInicio: TDateTime; DtaFim: TDateTime): Integer; safecall;
    function PesquisarDestinatarios(CodComunicado: Integer; const IndComunicadoLido: WideString): Integer; safecall;
    function BuscarRecebido(CodComunicado: Integer; CodUsuarioDestinatario: Integer): Integer; safecall;
    function Get_Comunicado: IComunicado; safecall;
    function FinalizarComunicado(CodComunicado: Integer): Integer; safecall;
    property Comunicado: IComunicado read Get_Comunicado;
  end;

// *********************************************************************//
// DispIntf:  IComunicadosDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {08C05AE8-910B-11D6-A34A-ABCB68004322}
// *********************************************************************//
  IComunicadosDisp = dispinterface
    ['{08C05AE8-910B-11D6-A34A-ABCB68004322}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    procedure FecharPesquisa; dispid 11;
    function PesquisarNaoLidos(CodUsuarioDestinatario: Integer): Integer; dispid 12;
    function PesquisarHistorico(CodUsuarioDestinatario: Integer; DtaInicio: TDateTime; 
                                DtaFim: TDateTime): Integer; dispid 13;
    function EnviarParaUsuario(CodUsuario: Integer; const TxtAssunto: WideString; 
                               const TxtComunicado: WideString; DtaInicioValidade: TDateTime; 
                               DtaFimValidade: TDateTime; 
                               const IndComunicadoImportante: WideString; CodPapel: Integer; 
                               CodOpcaoEnvioComunicado: Integer): Integer; dispid 14;
    function EnviarParaTodos(const TxtAssunto: WideString; const TxtComunicado: WideString; 
                             DtaInicioValidade: TDateTime; DtaFimValidade: TDateTime; 
                             const IndComunicadoImportante: WideString; CodPapel: Integer; 
                             CodOpcaoEnvioComunicado: Integer): Integer; dispid 15;
    function EnviarParaProdutores(CodTecnico: Integer; CodAssociacao: Integer; 
                                  const TxtAssunto: WideString; const TxtComunicado: WideString; 
                                  DtaInicioValidade: TDateTime; DtaFimValidade: TDateTime; 
                                  const IndComunicadoImportante: WideString; CodPapel: Integer; 
                                  CodOpcaoEnvioComunicado: Integer): Integer; dispid 16;
    function EnviarParaTecnicos(CodProdutor: Integer; const TxtAssunto: WideString; 
                                const TxtComunicado: WideString; DtaInicioValidade: TDateTime; 
                                DtaFimValidade: TDateTime; 
                                const IndComunicadoImportante: WideString; CodPapel: Integer; 
                                CodOpcaoEnvioComunicado: Integer): Integer; dispid 17;
    function EnviarParaAssociacao(CodProdutor: Integer; const TxtAssunto: WideString; 
                                  const TxtComunicado: WideString; DtaInicioValidade: TDateTime; 
                                  DtaFimValidade: TDateTime; 
                                  const IndComunicadoImportante: WideString; CodPapel: Integer; 
                                  CodOpcaoEnvioComunicado: Integer): Integer; dispid 18;
    function BuscarEnviado(CodComunicado: Integer): Integer; dispid 19;
    function MarcarComoLido(CodComunicado: Integer): Integer; dispid 20;
    function PesquisarEnviados(CodUsuarioEnvio: Integer; DtaInicio: TDateTime; DtaFim: TDateTime): Integer; dispid 21;
    function PesquisarDestinatarios(CodComunicado: Integer; const IndComunicadoLido: WideString): Integer; dispid 22;
    function BuscarRecebido(CodComunicado: Integer; CodUsuarioDestinatario: Integer): Integer; dispid 23;
    property Comunicado: IComunicado readonly dispid 24;
    function FinalizarComunicado(CodComunicado: Integer): Integer; dispid 25;
  end;

// *********************************************************************//
// Interface: IBloqueios
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75581DA5-9511-11D6-A34A-A91CD2608F22}
// *********************************************************************//
  IBloqueios = interface(IDispatch)
    ['{75581DA5-9511-11D6-A34A-A91CD2608F22}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(const CodAplicacaoBloqueio: WideString; const NomUsuario: WideString; 
                       CodPessoa: Integer; const NomPessoa: WideString; 
                       const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                       const SglProdutor: WideString; CodMotivoBloqueio: Integer; 
                       DtaInicio: TDateTime; DtaFim: TDateTime; 
                       const IndApenasBloqueados: WideString; CodOrdenacao: Integer): Integer; safecall;
    function Buscar(const CodAplicacaoBloqueio: WideString; CodUsuario: Integer; 
                    CodPessoaProdutor: Integer; DtaInicioBloqueio: TDateTime): Integer; safecall;
    function Excluir(const CodAplicacaoBloqueio: WideString; CodUsuario: Integer; 
                     CodPessoaProdutor: Integer): Integer; safecall;
    function Inserir(const CodAplicacaoBloqueio: WideString; CodUsuario: Integer; 
                     CodPessoaProdutor: Integer; CodMotivoBloqueio: Integer; 
                     const TxtObservacaoBloqueio: WideString; 
                     const TxtObservacaoUsuario: WideString; 
                     const TxtProcedimentoUsuario: WideString): Integer; safecall;
    function Get_Inicializado: WordBool; safecall;
    function Get_Bloqueio: IBloqueio; safecall;
    property Inicializado: WordBool read Get_Inicializado;
    property Bloqueio: IBloqueio read Get_Bloqueio;
  end;

// *********************************************************************//
// DispIntf:  IBloqueiosDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75581DA5-9511-11D6-A34A-A91CD2608F22}
// *********************************************************************//
  IBloqueiosDisp = dispinterface
    ['{75581DA5-9511-11D6-A34A-A91CD2608F22}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    procedure FecharPesquisa; dispid 11;
    function Pesquisar(const CodAplicacaoBloqueio: WideString; const NomUsuario: WideString; 
                       CodPessoa: Integer; const NomPessoa: WideString; 
                       const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                       const SglProdutor: WideString; CodMotivoBloqueio: Integer; 
                       DtaInicio: TDateTime; DtaFim: TDateTime; 
                       const IndApenasBloqueados: WideString; CodOrdenacao: Integer): Integer; dispid 12;
    function Buscar(const CodAplicacaoBloqueio: WideString; CodUsuario: Integer; 
                    CodPessoaProdutor: Integer; DtaInicioBloqueio: TDateTime): Integer; dispid 13;
    function Excluir(const CodAplicacaoBloqueio: WideString; CodUsuario: Integer; 
                     CodPessoaProdutor: Integer): Integer; dispid 15;
    function Inserir(const CodAplicacaoBloqueio: WideString; CodUsuario: Integer; 
                     CodPessoaProdutor: Integer; CodMotivoBloqueio: Integer; 
                     const TxtObservacaoBloqueio: WideString; 
                     const TxtObservacaoUsuario: WideString; 
                     const TxtProcedimentoUsuario: WideString): Integer; dispid 16;
    property Inicializado: WordBool readonly dispid 17;
    property Bloqueio: IBloqueio readonly dispid 18;
  end;

// *********************************************************************//
// Interface: IPerfil
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75581DA9-9511-11D6-A34A-A91CD2608F22}
// *********************************************************************//
  IPerfil = interface(IDispatch)
    ['{75581DA9-9511-11D6-A34A-A91CD2608F22}']
    function Get_CodPerfil: Integer; safecall;
    procedure Set_CodPerfil(Value: Integer); safecall;
    function Get_NomPerfil: WideString; safecall;
    procedure Set_NomPerfil(const Value: WideString); safecall;
    function Get_CodPapel: Integer; safecall;
    procedure Set_CodPapel(Value: Integer); safecall;
    function Get_DesPapel: WideString; safecall;
    procedure Set_DesPapel(const Value: WideString); safecall;
    function Get_DesPerfil: WideString; safecall;
    procedure Set_DesPerfil(const Value: WideString); safecall;
    function Get_DtaFimValidade: TDateTime; safecall;
    procedure Set_DtaFimValidade(Value: TDateTime); safecall;
    property CodPerfil: Integer read Get_CodPerfil write Set_CodPerfil;
    property NomPerfil: WideString read Get_NomPerfil write Set_NomPerfil;
    property CodPapel: Integer read Get_CodPapel write Set_CodPapel;
    property DesPapel: WideString read Get_DesPapel write Set_DesPapel;
    property DesPerfil: WideString read Get_DesPerfil write Set_DesPerfil;
    property DtaFimValidade: TDateTime read Get_DtaFimValidade write Set_DtaFimValidade;
  end;

// *********************************************************************//
// DispIntf:  IPerfilDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75581DA9-9511-11D6-A34A-A91CD2608F22}
// *********************************************************************//
  IPerfilDisp = dispinterface
    ['{75581DA9-9511-11D6-A34A-A91CD2608F22}']
    property CodPerfil: Integer dispid 1;
    property NomPerfil: WideString dispid 2;
    property CodPapel: Integer dispid 3;
    property DesPapel: WideString dispid 4;
    property DesPerfil: WideString dispid 5;
    property DtaFimValidade: TDateTime dispid 7;
  end;

// *********************************************************************//
// Interface: IAcessoTecnicoProdutor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75581DB1-9511-11D6-A34A-A91CD2608F22}
// *********************************************************************//
  IAcessoTecnicoProdutor = interface(IDispatch)
    ['{75581DB1-9511-11D6-A34A-A91CD2608F22}']
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Adicionar(CodPessoaProdutor: Integer; CodPessoaTecnico: Integer): Integer; safecall;
    function Retirar(CodPessoaProdutor: Integer; CodPessoaTecnico: Integer): Integer; safecall;
    function PesquisarTecnicos(CodPessoaProdutor: Integer; const ind_considerar_inativos: WideString): Integer; safecall;
    function PesquisarProdutores(CodPessoaTecnico: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IAcessoTecnicoProdutorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75581DB1-9511-11D6-A34A-A91CD2608F22}
// *********************************************************************//
  IAcessoTecnicoProdutorDisp = dispinterface
    ['{75581DB1-9511-11D6-A34A-A91CD2608F22}']
    function EOF: WordBool; dispid 1;
    procedure IrAoProximo; dispid 2;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 3;
    procedure FecharPesquisa; dispid 4;
    function Adicionar(CodPessoaProdutor: Integer; CodPessoaTecnico: Integer): Integer; dispid 5;
    function Retirar(CodPessoaProdutor: Integer; CodPessoaTecnico: Integer): Integer; dispid 6;
    function PesquisarTecnicos(CodPessoaProdutor: Integer; const ind_considerar_inativos: WideString): Integer; dispid 7;
    function PesquisarProdutores(CodPessoaTecnico: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 201;
  end;

// *********************************************************************//
// Interface: IAcessoAssociacaoProdutor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75581DB5-9511-11D6-A34A-A91CD2608F22}
// *********************************************************************//
  IAcessoAssociacaoProdutor = interface(IDispatch)
    ['{75581DB5-9511-11D6-A34A-A91CD2608F22}']
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Adicionar(CodPessoaProdutor: Integer; CodPessoaAssociacao: Integer): Integer; safecall;
    function Retirar(CodPessoaProdutor: Integer; CodPessoaAssociacao: Integer): Integer; safecall;
    function PesquisarAssociacoes(CodPessoaProdutor: Integer): Integer; safecall;
    function PesquisarProdutores(CodPessoaAssociacao: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IAcessoAssociacaoProdutorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75581DB5-9511-11D6-A34A-A91CD2608F22}
// *********************************************************************//
  IAcessoAssociacaoProdutorDisp = dispinterface
    ['{75581DB5-9511-11D6-A34A-A91CD2608F22}']
    function EOF: WordBool; dispid 1;
    procedure IrAoProximo; dispid 2;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 3;
    procedure FecharPesquisa; dispid 4;
    function Adicionar(CodPessoaProdutor: Integer; CodPessoaAssociacao: Integer): Integer; dispid 5;
    function Retirar(CodPessoaProdutor: Integer; CodPessoaAssociacao: Integer): Integer; dispid 6;
    function PesquisarAssociacoes(CodPessoaProdutor: Integer): Integer; dispid 7;
    function PesquisarProdutores(CodPessoaAssociacao: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 201;
  end;

// *********************************************************************//
// Interface: IPerfis
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C4444438-F28B-4589-8189-F111A813E50C}
// *********************************************************************//
  IPerfis = interface(IDispatch)
    ['{C4444438-F28B-4589-8189-F111A813E50C}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(CodPapel: Integer; IndPesquisarDesativados: WordBool): Integer; safecall;
    function Buscar(CodPerfil: Integer): Integer; safecall;
    function Excluir(CodPerfil: Integer): Integer; safecall;
    function Inserir(const NomPerfil: WideString; CodPapel: Integer; const DesPerfil: WideString): Integer; safecall;
    function Alterar(CodPerfil: Integer; const NomPerfil: WideString; const DesPerfil: WideString): Integer; safecall;
    function Get_Inicializado: WordBool; safecall;
    function Get_Perfil: IPerfil; safecall;
    function InserirItemMenu(CodPerfil: Integer; CodItemMenu: Integer): Integer; safecall;
    function ExcluirItemMenu(CodPerfil: Integer; CodItemMenu: Integer): Integer; safecall;
    function PesquisarItemMenu(CodPerfil: Integer; CodMenu: Integer): Integer; safecall;
    function InserirFuncao(CodPerfil: Integer; CodFuncao: Integer): Integer; safecall;
    function ExcluirFuncao(CodPerfil: Integer; CodFuncao: Integer): Integer; safecall;
    function PesquisarFuncoes(CodPerfil: Integer; CodMenu: Integer): Integer; safecall;
    property Inicializado: WordBool read Get_Inicializado;
    property Perfil: IPerfil read Get_Perfil;
  end;

// *********************************************************************//
// DispIntf:  IPerfisDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C4444438-F28B-4589-8189-F111A813E50C}
// *********************************************************************//
  IPerfisDisp = dispinterface
    ['{C4444438-F28B-4589-8189-F111A813E50C}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    procedure FecharPesquisa; dispid 11;
    function Pesquisar(CodPapel: Integer; IndPesquisarDesativados: WordBool): Integer; dispid 12;
    function Buscar(CodPerfil: Integer): Integer; dispid 13;
    function Excluir(CodPerfil: Integer): Integer; dispid 15;
    function Inserir(const NomPerfil: WideString; CodPapel: Integer; const DesPerfil: WideString): Integer; dispid 16;
    function Alterar(CodPerfil: Integer; const NomPerfil: WideString; const DesPerfil: WideString): Integer; dispid 19;
    property Inicializado: WordBool readonly dispid 20;
    property Perfil: IPerfil readonly dispid 21;
    function InserirItemMenu(CodPerfil: Integer; CodItemMenu: Integer): Integer; dispid 14;
    function ExcluirItemMenu(CodPerfil: Integer; CodItemMenu: Integer): Integer; dispid 17;
    function PesquisarItemMenu(CodPerfil: Integer; CodMenu: Integer): Integer; dispid 18;
    function InserirFuncao(CodPerfil: Integer; CodFuncao: Integer): Integer; dispid 22;
    function ExcluirFuncao(CodPerfil: Integer; CodFuncao: Integer): Integer; dispid 23;
    function PesquisarFuncoes(CodPerfil: Integer; CodMenu: Integer): Integer; dispid 24;
  end;

// *********************************************************************//
// Interface: IMotivoBloqueio
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {57B2DF20-9687-11D6-A34A-EC347E25B022}
// *********************************************************************//
  IMotivoBloqueio = interface(IDispatch)
    ['{57B2DF20-9687-11D6-A34A-EC347E25B022}']
    function Get_CodMotivoBloqueio: Integer; safecall;
    procedure Set_CodMotivoBloqueio(Value: Integer); safecall;
    function Get_DesMotivoBloqueio: WideString; safecall;
    procedure Set_DesMotivoBloqueio(const Value: WideString); safecall;
    function Get_TxtMotivoUsuario: WideString; safecall;
    procedure Set_TxtMotivoUsuario(const Value: WideString); safecall;
    function Get_TxtObservacaoUsuario: WideString; safecall;
    procedure Set_TxtObservacaoUsuario(const Value: WideString); safecall;
    function Get_TxtProcedimentoUsuario: WideString; safecall;
    procedure Set_TxtProcedimentoUsuario(const Value: WideString); safecall;
    function Get_CodAplicacaoBloqueio: WideString; safecall;
    procedure Set_CodAplicacaoBloqueio(const Value: WideString); safecall;
    function Get_DesAplicacaoBloqueio: WideString; safecall;
    procedure Set_DesAplicacaoBloqueio(const Value: WideString); safecall;
    function Get_IndRestritoSistema: WideString; safecall;
    procedure Set_IndRestritoSistema(const Value: WideString); safecall;
    property CodMotivoBloqueio: Integer read Get_CodMotivoBloqueio write Set_CodMotivoBloqueio;
    property DesMotivoBloqueio: WideString read Get_DesMotivoBloqueio write Set_DesMotivoBloqueio;
    property TxtMotivoUsuario: WideString read Get_TxtMotivoUsuario write Set_TxtMotivoUsuario;
    property TxtObservacaoUsuario: WideString read Get_TxtObservacaoUsuario write Set_TxtObservacaoUsuario;
    property TxtProcedimentoUsuario: WideString read Get_TxtProcedimentoUsuario write Set_TxtProcedimentoUsuario;
    property CodAplicacaoBloqueio: WideString read Get_CodAplicacaoBloqueio write Set_CodAplicacaoBloqueio;
    property DesAplicacaoBloqueio: WideString read Get_DesAplicacaoBloqueio write Set_DesAplicacaoBloqueio;
    property IndRestritoSistema: WideString read Get_IndRestritoSistema write Set_IndRestritoSistema;
  end;

// *********************************************************************//
// DispIntf:  IMotivoBloqueioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {57B2DF20-9687-11D6-A34A-EC347E25B022}
// *********************************************************************//
  IMotivoBloqueioDisp = dispinterface
    ['{57B2DF20-9687-11D6-A34A-EC347E25B022}']
    property CodMotivoBloqueio: Integer dispid 1;
    property DesMotivoBloqueio: WideString dispid 2;
    property TxtMotivoUsuario: WideString dispid 3;
    property TxtObservacaoUsuario: WideString dispid 4;
    property TxtProcedimentoUsuario: WideString dispid 5;
    property CodAplicacaoBloqueio: WideString dispid 6;
    property DesAplicacaoBloqueio: WideString dispid 7;
    property IndRestritoSistema: WideString dispid 8;
  end;

// *********************************************************************//
// Interface: IMotivosBloqueio
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {57B2DF24-9687-11D6-A34A-EC347E25B022}
// *********************************************************************//
  IMotivosBloqueio = interface(IDispatch)
    ['{57B2DF24-9687-11D6-A34A-EC347E25B022}']
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(const CodAplicacaoBloqueio: WideString; const IndRestritoSistema: WideString): Integer; safecall;
    function Buscar(CodMotivoBloqueio: Integer): Integer; safecall;
    function Alterar(CodMotivoBloqueio: Integer; const TxtMotivoUsuario: WideString; 
                     const TxtObservacao: WideString; const TxtProcedimentoUsuario: WideString): Integer; safecall;
    function Get_MotivoBloqueio: IMotivoBloqueio; safecall;
    property MotivoBloqueio: IMotivoBloqueio read Get_MotivoBloqueio;
  end;

// *********************************************************************//
// DispIntf:  IMotivosBloqueioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {57B2DF24-9687-11D6-A34A-EC347E25B022}
// *********************************************************************//
  IMotivosBloqueioDisp = dispinterface
    ['{57B2DF24-9687-11D6-A34A-EC347E25B022}']
    function EOF: WordBool; dispid 1;
    procedure IrAoProximo; dispid 2;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 3;
    procedure FecharPesquisa; dispid 4;
    function Pesquisar(const CodAplicacaoBloqueio: WideString; const IndRestritoSistema: WideString): Integer; dispid 5;
    function Buscar(CodMotivoBloqueio: Integer): Integer; dispid 6;
    function Alterar(CodMotivoBloqueio: Integer; const TxtMotivoUsuario: WideString; 
                     const TxtObservacao: WideString; const TxtProcedimentoUsuario: WideString): Integer; dispid 7;
    property MotivoBloqueio: IMotivoBloqueio readonly dispid 8;
  end;

// *********************************************************************//
// Interface: IPaises
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {792611C0-9A44-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPaises = interface(IDispatch)
    ['{792611C0-9A44-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Inserir(const NomPais: WideString; CodPaisSisBov: Integer): Integer; safecall;
    function Alterar(CodPais: Integer; const NomPais: WideString; CodPaisSisBov: Integer): Integer; safecall;
    function Excluir(CodPais: Integer): Integer; safecall;
    function Buscar(CodPais: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    procedure Deslocar(NumDeslocamento: Integer); safecall;
    function Get_Pais: IPais; safecall;
    function PaisCertificadora: Integer; safecall;
    property Pais: IPais read Get_Pais;
  end;

// *********************************************************************//
// DispIntf:  IPaisesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {792611C0-9A44-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPaisesDisp = dispinterface
    ['{792611C0-9A44-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    function Inserir(const NomPais: WideString; CodPaisSisBov: Integer): Integer; dispid 6;
    function Alterar(CodPais: Integer; const NomPais: WideString; CodPaisSisBov: Integer): Integer; dispid 7;
    function Excluir(CodPais: Integer): Integer; dispid 8;
    function Buscar(CodPais: Integer): Integer; dispid 9;
    function NumeroRegistros: Integer; dispid 11;
    procedure IrAoPrimeiro; dispid 13;
    procedure IrAoUltimo; dispid 14;
    procedure IrAoAnterior; dispid 15;
    procedure Posicionar(NumPosicao: Integer); dispid 16;
    procedure Deslocar(NumDeslocamento: Integer); dispid 17;
    property Pais: IPais readonly dispid 18;
    function PaisCertificadora: Integer; dispid 10;
  end;

// *********************************************************************//
// Interface: ICodigosSisbov
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4DBA7FAF-9A89-487F-916F-B4284108B6B9}
// *********************************************************************//
  ICodigosSisbov = interface(IDispatch)
    ['{4DBA7FAF-9A89-487F-916F-B4284108B6B9}']
    function Inserir(CodPessoaProdutor: Integer; const SglProdutor: WideString; 
                     const NumCNPJCPFProdutor: WideString; CodPropriedadeRural: Integer; 
                     const NumImovelReceitaFederal: WideString; CodLocalizacaoSisbov: Integer; 
                     NumSolicitacaoSISBOV: Integer; DtaSolicitacaoSISBOV: TDateTime; 
                     CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                     CodMicroRegiaoSISBOV: Integer; CodAnimalSISBOVInicio: Integer; 
                     NumDVSISBOVInicio: Integer; CodAnimalSISBOVFim: Integer; 
                     NumDVSISBOVFim: Integer; CodigoOS: Integer): Integer; safecall;
    function Pesquisar(CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                       CodMicroRegiaoSISBOV: Integer; SeqInicial: Integer; SeqFinal: Integer; 
                       const IndCodigoUtilizado: WideString; const NomPessoa: WideString; 
                       const NomPropriedade: WideString; const SglProdutor: WideString; 
                       DtaInicioCadastramentoCodigos: TDateTime; 
                       DtaFimCadastramentoCodigos: TDateTime; 
                       DtaInicioUtilizacaoCodigos: TDateTime; DtaFimUtilizacaoCodigos: TDateTime; 
                       NumSolicitacaoSISBOV: Integer): Integer; safecall;
    procedure FecharPesquisa; safecall;
    function EOF: WordBool; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure IrAoProximo; safecall;
    function BOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    procedure Deslocar(NumDeslocamento: Integer); safecall;
    function Excluir(CodPessoaProdutor: Integer; const SglProdutor: WideString; 
                     const NumCNPJCPFProdutor: WideString; CodPropriedadeRural: Integer; 
                     const NumImovelReceitaFederal: WideString; CodLocalizacaoSisbov: Integer; 
                     CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                     CodMicroRegiaoSISBOV: Integer; CodAnimalSISBOVInicio: Integer; 
                     NumDVSISBOVInicio: Integer; CodAnimalSISBOVFim: Integer; 
                     NumDVSISBOVFim: Integer): Integer; safecall;
    function GerarRelatorioConsolidado(const CodEstado: WideString; const SglProdutor: WideString; 
                                       const NomPessoaProdutor: WideString; 
                                       const NumCNPJCPFProdutor: WideString; 
                                       const NumImovelReceitaFederal: WideString; 
                                       CodLocalizacaoSisbov: Integer; 
                                       const NomPropriedadeRural: WideString; 
                                       const NomMunicipioPropriedadeRural: WideString; 
                                       DtaSolicitacaoSISBOVInicio: TDateTime; 
                                       DtaSolicitacaoSISBOVFim: TDateTime; 
                                       DtaInsercaoInicio: TDateTime; DtaInsercaoFim: TDateTime; 
                                       DtaUtilizacaoInicio: TDateTime; DtaUtilizacaoFim: TDateTime; 
                                       DtaLiberacaoAbateInicio: TDateTime; 
                                       DtaLiberacaoAbateFim: TDateTime; 
                                       DtaExpiracaoInicio: TDateTime; DtaExpiracaoFim: TDateTime; 
                                       const CodSituacoesCodigoSISBOV: WideString; 
                                       QtdQuebraRelatorio: Integer; Tipo: Integer): WideString; safecall;
    function ReservarCodigosProdutor(CodPessoaProdutor: Integer; CodEstadoSISBOV: Integer; 
                                     CodMicroRegiaoSISBOV: Integer; CodAnimalInicio: Integer; 
                                     CodAnimalFim: Integer; CodPropriedadeRural: Integer): Integer; safecall;
    function CancelarReservaProdutor(CodPessoaProdutor: Integer; CodEstadoSISBOV: Integer; 
                                     CodMicroRegiaoSISBOV: Integer; CodAnimalInicio: Integer; 
                                     CodAnimalFim: Integer; CodPropriedadeRural: Integer): Integer; safecall;
    function PesquisarReservaProdutor(const NomProdutor: WideString; CodEstadoSISBOV: Integer; 
                                      CodMicroRegiaoSISBOV: Integer; 
                                      const IndCodigoUtilizado: WideString; 
                                      const NomPropriedade: WideString; CodInicial: Integer; 
                                      CodFinal: Integer): Integer; safecall;
    function GerarRelatorioCodigosSisbov(CodEstado: Integer; CodMicroRegiao: Integer; 
                                         const CodOrdenacao: WideString; SeqInicial: Integer; 
                                         SeqFinal: Integer; Tipo: Integer; 
                                         const SglProdutor: WideString; 
                                         const NomProdutor: WideString; 
                                         const NomPropriedade: WideString; 
                                         DtaInicioCadastramentoCodigos: TDateTime; 
                                         DtaFimCadastramentoCodigos: TDateTime; 
                                         DtaInicioUtilizacaoCodigos: TDateTime; 
                                         DtaFimUtilizacaoCodigos: TDateTime; CodPais: Integer; 
                                         QtdQuebraRelatorio: Integer; NumSolicitacaoSISBOV: Integer): WideString; safecall;
    function GeraArquivoCodigoExportacao: Integer; safecall;
    function AlterarSolicitacao(CodPessoaProdutor: Integer; const SglProdutor: WideString; 
                                const NumCNPJCPFProdutor: WideString; CodPropriedadeRural: Integer; 
                                const NumImovelReceitaFederal: WideString; 
                                CodLocalizacaoSisbov: Integer; NumSolicitacaoSISBOV: Integer; 
                                DtaSolicitacaoSISBOV: TDateTime; CodPaisSisBov: Integer; 
                                CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                CodAnimalSISBOVInicio: Integer; NumDVSISBOVInicio: Integer; 
                                CodAnimalSISBOVFim: Integer; NumDVSISBOVFim: Integer): Integer; safecall;
    function ProcessarAutenticacao(CodPessoaProdutor: Integer; const SglProdutor: WideString; 
                                   const NumCNPJCPFProdutor: WideString; 
                                   CodPropriedadeRural: Integer; 
                                   const NumImovelReceitaFederal: WideString; 
                                   CodLocalizacaoSisbov: Integer; CodPaisSisBov: Integer; 
                                   CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                   CodAnimalSISBOVInicio: Integer; NumDVSISBOVInicio: Integer; 
                                   CodAnimalSISBOVFim: Integer; NumDVSISBOVFim: Integer; 
                                   DtaLiberacaoAbate: TDateTime): Integer; safecall;
    function CancelarAutenticacao(CodPessoaProdutor: Integer; const SglProdutor: WideString; 
                                  const NumCNPJCPFProdutor: WideString; 
                                  CodPropriedadeRural: Integer; 
                                  const NumImovelReceitaFederal: WideString; 
                                  CodLocalizacaoSisbov: Integer; CodPaisSisBov: Integer; 
                                  CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                  CodAnimalSISBOVInicio: Integer; NumDVSISBOVInicio: Integer; 
                                  CodAnimalSISBOVFim: Integer; NumDVSISBOVFim: Integer): Integer; safecall;
    function ProcessarEnvioCertificado(CodOrdemServico: Integer; NumRemessaFicha: Integer; 
                                       DtaEnvio: TDateTime; const NomServicoEnvio: WideString; 
                                       const NumConhecimento: WideString): Integer; safecall;
    function CancelarEnvioCertificado(CodOrdemServico: Integer; NumRemessaFicha: Integer): Integer; safecall;
    function ProcessarRecebimentoFichas(DtaRecebimentoFicha: TDateTime; CodPaisSisBov: Integer; 
                                        CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                        const CodAnimaisSISBOVInicio: WideString; 
                                        const CodAnimaisSISBOVFim: WideString): Integer; safecall;
    function AdicionarFaixaRecebimento(CodOrdemServico: Integer; NumRemessaFicha: Integer; 
                                       CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                                       CodMicroRegiaoSISBOV: Integer; 
                                       CodAnimalSISBOVInicio: Integer; CodAnimalSISBOVFim: Integer): Integer; safecall;
    function RetirarFaixaRecebimento(CodOrdemServico: Integer; NumRemessaFaixa: Integer; 
                                     SeqFaixaRemessa: Integer): Integer; safecall;
    function PesquisarFaixaRecebimento(CodOrdemServico: Integer; NumRemessaFicha: Integer): Integer; safecall;
    function Get_CodOrdemServico: Integer; safecall;
    function Get_NumRemessaFicha: Integer; safecall;
    function ProcessarAprovacaoFichas(CodOrdemServico: Integer; NumRemessaFicha: Integer): Integer; safecall;
    function CancelarAprovacaoFichas(CodOrdemServico: Integer; NumRemessaFicha: Integer): Integer; safecall;
    function ProcessarImpressaoCertificado(CodOrdemServico: Integer; NumRemessaFicha: Integer): Integer; safecall;
    function CancelarImpressaoCertificado(CodOrdemServico: Integer; NumRemessaFicha: Integer): Integer; safecall;
    function InserirEnvioCertificado(CodPessoaProdutor: Integer; const SglProdutor: WideString; 
                                     const NumCNPJCPF: WideString; CodPropriedadeRural: Integer; 
                                     const NumImovelReceitaFederal: WideString; 
                                     CodLocalizacaoSisbov: Integer; DtaEnvio: TDateTime; 
                                     const NomServicoEnvio: WideString; 
                                     const NumConhecimento: WideString; CodPaisSisBov: Integer; 
                                     CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                     CodAnimalSISBOVInicio: Integer; CodAnimalSISBOVFim: Integer; 
                                     NumDVSISBOVInicio: Integer; NumDVSISBOVFim: Integer): Integer; safecall;
    function ExcluirEnvioCertificado(CodPessoaProdutor: Integer; const SglProdutor: WideString; 
                                     const NumCNPJCPFProdutor: WideString; 
                                     CodPropriedadeRural: Integer; 
                                     const NumImovelReceitaFederal: WideString; 
                                     CodLocalizacaoSisbov: Integer; CodPaisSisBov: Integer; 
                                     CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                     CodAnimalSISBOVInicio: Integer; CodAnimalSISBOVFim: Integer; 
                                     NumDVSISBOVInicio: Integer; NumDBSisBovFim: Integer): Integer; safecall;
    property CodOrdemServico: Integer read Get_CodOrdemServico;
    property NumRemessaFicha: Integer read Get_NumRemessaFicha;
  end;

// *********************************************************************//
// DispIntf:  ICodigosSisbovDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4DBA7FAF-9A89-487F-916F-B4284108B6B9}
// *********************************************************************//
  ICodigosSisbovDisp = dispinterface
    ['{4DBA7FAF-9A89-487F-916F-B4284108B6B9}']
    function Inserir(CodPessoaProdutor: Integer; const SglProdutor: WideString; 
                     const NumCNPJCPFProdutor: WideString; CodPropriedadeRural: Integer; 
                     const NumImovelReceitaFederal: WideString; CodLocalizacaoSisbov: Integer; 
                     NumSolicitacaoSISBOV: Integer; DtaSolicitacaoSISBOV: TDateTime; 
                     CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                     CodMicroRegiaoSISBOV: Integer; CodAnimalSISBOVInicio: Integer; 
                     NumDVSISBOVInicio: Integer; CodAnimalSISBOVFim: Integer; 
                     NumDVSISBOVFim: Integer; CodigoOS: Integer): Integer; dispid 1;
    function Pesquisar(CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                       CodMicroRegiaoSISBOV: Integer; SeqInicial: Integer; SeqFinal: Integer; 
                       const IndCodigoUtilizado: WideString; const NomPessoa: WideString; 
                       const NomPropriedade: WideString; const SglProdutor: WideString; 
                       DtaInicioCadastramentoCodigos: TDateTime; 
                       DtaFimCadastramentoCodigos: TDateTime; 
                       DtaInicioUtilizacaoCodigos: TDateTime; DtaFimUtilizacaoCodigos: TDateTime; 
                       NumSolicitacaoSISBOV: Integer): Integer; dispid 2;
    procedure FecharPesquisa; dispid 6;
    function EOF: WordBool; dispid 8;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 9;
    procedure IrAoProximo; dispid 10;
    function BOF: WordBool; dispid 3;
    function NumeroRegistros: Integer; dispid 4;
    procedure IrAoPrimeiro; dispid 5;
    procedure IrAoUltimo; dispid 7;
    procedure Posicionar(NumPosicao: Integer); dispid 11;
    procedure Deslocar(NumDeslocamento: Integer); dispid 12;
    function Excluir(CodPessoaProdutor: Integer; const SglProdutor: WideString; 
                     const NumCNPJCPFProdutor: WideString; CodPropriedadeRural: Integer; 
                     const NumImovelReceitaFederal: WideString; CodLocalizacaoSisbov: Integer; 
                     CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                     CodMicroRegiaoSISBOV: Integer; CodAnimalSISBOVInicio: Integer; 
                     NumDVSISBOVInicio: Integer; CodAnimalSISBOVFim: Integer; 
                     NumDVSISBOVFim: Integer): Integer; dispid 13;
    function GerarRelatorioConsolidado(const CodEstado: WideString; const SglProdutor: WideString; 
                                       const NomPessoaProdutor: WideString; 
                                       const NumCNPJCPFProdutor: WideString; 
                                       const NumImovelReceitaFederal: WideString; 
                                       CodLocalizacaoSisbov: Integer; 
                                       const NomPropriedadeRural: WideString; 
                                       const NomMunicipioPropriedadeRural: WideString; 
                                       DtaSolicitacaoSISBOVInicio: TDateTime; 
                                       DtaSolicitacaoSISBOVFim: TDateTime; 
                                       DtaInsercaoInicio: TDateTime; DtaInsercaoFim: TDateTime; 
                                       DtaUtilizacaoInicio: TDateTime; DtaUtilizacaoFim: TDateTime; 
                                       DtaLiberacaoAbateInicio: TDateTime; 
                                       DtaLiberacaoAbateFim: TDateTime; 
                                       DtaExpiracaoInicio: TDateTime; DtaExpiracaoFim: TDateTime; 
                                       const CodSituacoesCodigoSISBOV: WideString; 
                                       QtdQuebraRelatorio: Integer; Tipo: Integer): WideString; dispid 14;
    function ReservarCodigosProdutor(CodPessoaProdutor: Integer; CodEstadoSISBOV: Integer; 
                                     CodMicroRegiaoSISBOV: Integer; CodAnimalInicio: Integer; 
                                     CodAnimalFim: Integer; CodPropriedadeRural: Integer): Integer; dispid 15;
    function CancelarReservaProdutor(CodPessoaProdutor: Integer; CodEstadoSISBOV: Integer; 
                                     CodMicroRegiaoSISBOV: Integer; CodAnimalInicio: Integer; 
                                     CodAnimalFim: Integer; CodPropriedadeRural: Integer): Integer; dispid 16;
    function PesquisarReservaProdutor(const NomProdutor: WideString; CodEstadoSISBOV: Integer; 
                                      CodMicroRegiaoSISBOV: Integer; 
                                      const IndCodigoUtilizado: WideString; 
                                      const NomPropriedade: WideString; CodInicial: Integer; 
                                      CodFinal: Integer): Integer; dispid 17;
    function GerarRelatorioCodigosSisbov(CodEstado: Integer; CodMicroRegiao: Integer; 
                                         const CodOrdenacao: WideString; SeqInicial: Integer; 
                                         SeqFinal: Integer; Tipo: Integer; 
                                         const SglProdutor: WideString; 
                                         const NomProdutor: WideString; 
                                         const NomPropriedade: WideString; 
                                         DtaInicioCadastramentoCodigos: TDateTime; 
                                         DtaFimCadastramentoCodigos: TDateTime; 
                                         DtaInicioUtilizacaoCodigos: TDateTime; 
                                         DtaFimUtilizacaoCodigos: TDateTime; CodPais: Integer; 
                                         QtdQuebraRelatorio: Integer; NumSolicitacaoSISBOV: Integer): WideString; dispid 18;
    function GeraArquivoCodigoExportacao: Integer; dispid 19;
    function AlterarSolicitacao(CodPessoaProdutor: Integer; const SglProdutor: WideString; 
                                const NumCNPJCPFProdutor: WideString; CodPropriedadeRural: Integer; 
                                const NumImovelReceitaFederal: WideString; 
                                CodLocalizacaoSisbov: Integer; NumSolicitacaoSISBOV: Integer; 
                                DtaSolicitacaoSISBOV: TDateTime; CodPaisSisBov: Integer; 
                                CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                CodAnimalSISBOVInicio: Integer; NumDVSISBOVInicio: Integer; 
                                CodAnimalSISBOVFim: Integer; NumDVSISBOVFim: Integer): Integer; dispid 201;
    function ProcessarAutenticacao(CodPessoaProdutor: Integer; const SglProdutor: WideString; 
                                   const NumCNPJCPFProdutor: WideString; 
                                   CodPropriedadeRural: Integer; 
                                   const NumImovelReceitaFederal: WideString; 
                                   CodLocalizacaoSisbov: Integer; CodPaisSisBov: Integer; 
                                   CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                   CodAnimalSISBOVInicio: Integer; NumDVSISBOVInicio: Integer; 
                                   CodAnimalSISBOVFim: Integer; NumDVSISBOVFim: Integer; 
                                   DtaLiberacaoAbate: TDateTime): Integer; dispid 202;
    function CancelarAutenticacao(CodPessoaProdutor: Integer; const SglProdutor: WideString; 
                                  const NumCNPJCPFProdutor: WideString; 
                                  CodPropriedadeRural: Integer; 
                                  const NumImovelReceitaFederal: WideString; 
                                  CodLocalizacaoSisbov: Integer; CodPaisSisBov: Integer; 
                                  CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                  CodAnimalSISBOVInicio: Integer; NumDVSISBOVInicio: Integer; 
                                  CodAnimalSISBOVFim: Integer; NumDVSISBOVFim: Integer): Integer; dispid 203;
    function ProcessarEnvioCertificado(CodOrdemServico: Integer; NumRemessaFicha: Integer; 
                                       DtaEnvio: TDateTime; const NomServicoEnvio: WideString; 
                                       const NumConhecimento: WideString): Integer; dispid 204;
    function CancelarEnvioCertificado(CodOrdemServico: Integer; NumRemessaFicha: Integer): Integer; dispid 205;
    function ProcessarRecebimentoFichas(DtaRecebimentoFicha: TDateTime; CodPaisSisBov: Integer; 
                                        CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                        const CodAnimaisSISBOVInicio: WideString; 
                                        const CodAnimaisSISBOVFim: WideString): Integer; dispid 206;
    function AdicionarFaixaRecebimento(CodOrdemServico: Integer; NumRemessaFicha: Integer; 
                                       CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                                       CodMicroRegiaoSISBOV: Integer; 
                                       CodAnimalSISBOVInicio: Integer; CodAnimalSISBOVFim: Integer): Integer; dispid 207;
    function RetirarFaixaRecebimento(CodOrdemServico: Integer; NumRemessaFaixa: Integer; 
                                     SeqFaixaRemessa: Integer): Integer; dispid 208;
    function PesquisarFaixaRecebimento(CodOrdemServico: Integer; NumRemessaFicha: Integer): Integer; dispid 209;
    property CodOrdemServico: Integer readonly dispid 210;
    property NumRemessaFicha: Integer readonly dispid 211;
    function ProcessarAprovacaoFichas(CodOrdemServico: Integer; NumRemessaFicha: Integer): Integer; dispid 212;
    function CancelarAprovacaoFichas(CodOrdemServico: Integer; NumRemessaFicha: Integer): Integer; dispid 213;
    function ProcessarImpressaoCertificado(CodOrdemServico: Integer; NumRemessaFicha: Integer): Integer; dispid 214;
    function CancelarImpressaoCertificado(CodOrdemServico: Integer; NumRemessaFicha: Integer): Integer; dispid 215;
    function InserirEnvioCertificado(CodPessoaProdutor: Integer; const SglProdutor: WideString; 
                                     const NumCNPJCPF: WideString; CodPropriedadeRural: Integer; 
                                     const NumImovelReceitaFederal: WideString; 
                                     CodLocalizacaoSisbov: Integer; DtaEnvio: TDateTime; 
                                     const NomServicoEnvio: WideString; 
                                     const NumConhecimento: WideString; CodPaisSisBov: Integer; 
                                     CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                     CodAnimalSISBOVInicio: Integer; CodAnimalSISBOVFim: Integer; 
                                     NumDVSISBOVInicio: Integer; NumDVSISBOVFim: Integer): Integer; dispid 216;
    function ExcluirEnvioCertificado(CodPessoaProdutor: Integer; const SglProdutor: WideString; 
                                     const NumCNPJCPFProdutor: WideString; 
                                     CodPropriedadeRural: Integer; 
                                     const NumImovelReceitaFederal: WideString; 
                                     CodLocalizacaoSisbov: Integer; CodPaisSisBov: Integer; 
                                     CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                     CodAnimalSISBOVInicio: Integer; CodAnimalSISBOVFim: Integer; 
                                     NumDVSISBOVInicio: Integer; NumDBSisBovFim: Integer): Integer; dispid 217;
  end;

// *********************************************************************//
// Interface: IEstados
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {46ADB180-9AFD-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IEstados = interface(IDispatch)
    ['{46ADB180-9AFD-11D6-B075-00E07DAEF481}']
    function Pesquisar(CodPais: Integer; const CodOrdenacao: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Inserir(const NomEstado: WideString; const SglEstado: WideString; 
                     CodEstSisBov: Integer; CodPais: Integer): Integer; safecall;
    function Alterar(CodEstado: Integer; const NomEstado: WideString; const SglEstado: WideString; 
                     CodEstSisBov: Integer): Integer; safecall;
    function Excluir(CodEstado: Integer): Integer; safecall;
    function Buscar(CodEstado: Integer): Integer; safecall;
    function BOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function Get_Estado: IEstado; safecall;
    property Estado: IEstado read Get_Estado;
  end;

// *********************************************************************//
// DispIntf:  IEstadosDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {46ADB180-9AFD-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IEstadosDisp = dispinterface
    ['{46ADB180-9AFD-11D6-B075-00E07DAEF481}']
    function Pesquisar(CodPais: Integer; const CodOrdenacao: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    function Inserir(const NomEstado: WideString; const SglEstado: WideString; 
                     CodEstSisBov: Integer; CodPais: Integer): Integer; dispid 6;
    function Alterar(CodEstado: Integer; const NomEstado: WideString; const SglEstado: WideString; 
                     CodEstSisBov: Integer): Integer; dispid 7;
    function Excluir(CodEstado: Integer): Integer; dispid 8;
    function Buscar(CodEstado: Integer): Integer; dispid 9;
    function BOF: WordBool; dispid 10;
    function NumeroRegistros: Integer; dispid 11;
    procedure IrAoPrimeiro; dispid 12;
    procedure IrAoUltimo; dispid 13;
    procedure IrAoAnterior; dispid 14;
    procedure Posicionar(NumPosicao: Integer); dispid 15;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 16;
    property Estado: IEstado readonly dispid 17;
  end;

// *********************************************************************//
// Interface: IMicroRegioes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A94A3060-9B0D-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IMicroRegioes = interface(IDispatch)
    ['{A94A3060-9B0D-11D6-B075-00E07DAEF481}']
    function Pesquisar(const NomMicroRegiao: WideString; CodEstado: Integer; 
                       const CodOrdenacao: WideString; CodMicroRegiaoSISBOV: Integer): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Inserir(const NomMicroRegiao: WideString; CodMicroRegiao: Integer; CodEstado: Integer): Integer; safecall;
    function Alterar(CodMicroRegiao: Integer; const NomMicroRegiao: WideString; 
                     CodMicroRegiaoSISBOV: Integer): Integer; safecall;
    function Excluir(CodMicroRegiao: Integer): Integer; safecall;
    function Buscar(CodMicroRegiao: Integer): Integer; safecall;
    function BOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function Get_MicroRegiao: IMicroRegiao; safecall;
    property MicroRegiao: IMicroRegiao read Get_MicroRegiao;
  end;

// *********************************************************************//
// DispIntf:  IMicroRegioesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A94A3060-9B0D-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IMicroRegioesDisp = dispinterface
    ['{A94A3060-9B0D-11D6-B075-00E07DAEF481}']
    function Pesquisar(const NomMicroRegiao: WideString; CodEstado: Integer; 
                       const CodOrdenacao: WideString; CodMicroRegiaoSISBOV: Integer): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    function Inserir(const NomMicroRegiao: WideString; CodMicroRegiao: Integer; CodEstado: Integer): Integer; dispid 6;
    function Alterar(CodMicroRegiao: Integer; const NomMicroRegiao: WideString; 
                     CodMicroRegiaoSISBOV: Integer): Integer; dispid 7;
    function Excluir(CodMicroRegiao: Integer): Integer; dispid 8;
    function Buscar(CodMicroRegiao: Integer): Integer; dispid 9;
    function BOF: WordBool; dispid 10;
    function NumeroRegistros: Integer; dispid 11;
    procedure IrAoPrimeiro; dispid 12;
    procedure IrAoUltimo; dispid 13;
    procedure IrAoAnterior; dispid 14;
    procedure Posicionar(NumPosicao: Integer); dispid 15;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 16;
    property MicroRegiao: IMicroRegiao readonly dispid 17;
  end;

// *********************************************************************//
// Interface: IRacas
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AD937304-9B32-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IRacas = interface(IDispatch)
    ['{AD937304-9B32-11D6-B075-00E07DAEF481}']
    function Pesquisar(CodEspecie: Integer; CodAptidao: Integer; const CodOrdenacao: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Inserir(const SglRaca: WideString; const DesRaca: WideString; 
                     const IndRacaPura: WideString; const CodRacaSisBov: WideString; 
                     CodEspecie: Integer; const IndDefaultProdutor: WideString; 
                     QtdPesoPadraoNascimento: Double; QtdMinDiasGestacao: Integer; 
                     QtdMaxDiasGestacao: Integer; const CodRacaAbcz: WideString): Integer; safecall;
    function Alterar(CodRaca: Integer; const SglRaca: WideString; const DesRaca: WideString; 
                     const IndRacaPura: WideString; const CodRacaSisBov: WideString; 
                     const IndDefaultProdutor: WideString; QtdPesoPadraoNascimento: Double; 
                     QtdMinDiasGestacao: Integer; QtdMaxDiasGestacao: Integer; 
                     const CodRacaAbcz: WideString): Integer; safecall;
    function Excluir(CodRaca: Integer): Integer; safecall;
    function Buscar(CodRaca: Integer): Integer; safecall;
    function Get_Raca: IRaca; safecall;
    function AdicionarAptidao(CodRaca: Integer; CodAptidao: Integer): Integer; safecall;
    function PossuiAptidao(CodRaca: Integer; CodAptidao: Integer): Integer; safecall;
    function RetirarAptidao(CodRaca: Integer; CodAptidao: Integer): Integer; safecall;
    function PesquisarDoProdutor(const IndRacaProdutor: WideString; CodEspecie: Integer; 
                                 const CodOrdenacao: WideString): Integer; safecall;
    function AdicionarAoProdutor(CodRaca: Integer): Integer; safecall;
    function RetirarDoProdutor(CodRaca: Integer): Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    function GerarRelatorio(CodEspecie: Integer; const CodOrdenacao: WideString; Tipo: Integer; 
                            QtdQuebraRelatorio: Integer): WideString; safecall;
    function PesquisarAgrupamentos(CodRaca: Integer; CodTipoAgrupRacas: Integer): Integer; safecall;
    property Raca: IRaca read Get_Raca;
  end;

// *********************************************************************//
// DispIntf:  IRacasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AD937304-9B32-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IRacasDisp = dispinterface
    ['{AD937304-9B32-11D6-B075-00E07DAEF481}']
    function Pesquisar(CodEspecie: Integer; CodAptidao: Integer; const CodOrdenacao: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    function Inserir(const SglRaca: WideString; const DesRaca: WideString; 
                     const IndRacaPura: WideString; const CodRacaSisBov: WideString; 
                     CodEspecie: Integer; const IndDefaultProdutor: WideString; 
                     QtdPesoPadraoNascimento: Double; QtdMinDiasGestacao: Integer; 
                     QtdMaxDiasGestacao: Integer; const CodRacaAbcz: WideString): Integer; dispid 6;
    function Alterar(CodRaca: Integer; const SglRaca: WideString; const DesRaca: WideString; 
                     const IndRacaPura: WideString; const CodRacaSisBov: WideString; 
                     const IndDefaultProdutor: WideString; QtdPesoPadraoNascimento: Double; 
                     QtdMinDiasGestacao: Integer; QtdMaxDiasGestacao: Integer; 
                     const CodRacaAbcz: WideString): Integer; dispid 7;
    function Excluir(CodRaca: Integer): Integer; dispid 8;
    function Buscar(CodRaca: Integer): Integer; dispid 9;
    property Raca: IRaca readonly dispid 11;
    function AdicionarAptidao(CodRaca: Integer; CodAptidao: Integer): Integer; dispid 10;
    function PossuiAptidao(CodRaca: Integer; CodAptidao: Integer): Integer; dispid 12;
    function RetirarAptidao(CodRaca: Integer; CodAptidao: Integer): Integer; dispid 13;
    function PesquisarDoProdutor(const IndRacaProdutor: WideString; CodEspecie: Integer; 
                                 const CodOrdenacao: WideString): Integer; dispid 14;
    function AdicionarAoProdutor(CodRaca: Integer): Integer; dispid 15;
    function RetirarDoProdutor(CodRaca: Integer): Integer; dispid 16;
    procedure IrAoPrimeiro; dispid 17;
    function GerarRelatorio(CodEspecie: Integer; const CodOrdenacao: WideString; Tipo: Integer; 
                            QtdQuebraRelatorio: Integer): WideString; dispid 18;
    function PesquisarAgrupamentos(CodRaca: Integer; CodTipoAgrupRacas: Integer): Integer; dispid 19;
  end;

// *********************************************************************//
// Interface: IPelagens
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7FF0B4C0-9B3D-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPelagens = interface(IDispatch)
    ['{7FF0B4C0-9B3D-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodOrdenacao: WideString; const IndRestritoSistema: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Inserir(const SglPelagem: WideString; const DesPelagem: WideString): Integer; safecall;
    function Alterar(CodPelagem: Integer; const SglPelagem: WideString; const DesPelagem: WideString): Integer; safecall;
    function Excluir(CodPelagem: Integer): Integer; safecall;
    function Buscar(CodPelagem: Integer): Integer; safecall;
    function Get_Pelagem: IPelagem; safecall;
    function BOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    procedure Deslocar(NumDeslocamento: Integer); safecall;
    property Pelagem: IPelagem read Get_Pelagem;
  end;

// *********************************************************************//
// DispIntf:  IPelagensDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7FF0B4C0-9B3D-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPelagensDisp = dispinterface
    ['{7FF0B4C0-9B3D-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodOrdenacao: WideString; const IndRestritoSistema: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    function Inserir(const SglPelagem: WideString; const DesPelagem: WideString): Integer; dispid 7;
    function Alterar(CodPelagem: Integer; const SglPelagem: WideString; const DesPelagem: WideString): Integer; dispid 8;
    function Excluir(CodPelagem: Integer): Integer; dispid 9;
    function Buscar(CodPelagem: Integer): Integer; dispid 10;
    property Pelagem: IPelagem readonly dispid 6;
    function BOF: WordBool; dispid 11;
    function NumeroRegistros: Integer; dispid 12;
    procedure IrAoPrimeiro; dispid 13;
    procedure IrAoUltimo; dispid 14;
    procedure IrAoAnterior; dispid 15;
    procedure Posicionar(NumPosicao: Integer); dispid 16;
    procedure Deslocar(NumDeslocamento: Integer); dispid 17;
  end;

// *********************************************************************//
// Interface: ILocal
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C10DB144-9CFC-11D6-A34A-9E07ADEB7323}
// *********************************************************************//
  ILocal = interface(IDispatch)
    ['{C10DB144-9CFC-11D6-A34A-9E07ADEB7323}']
    function Get_CodPessoaProdutor: Integer; safecall;
    procedure Set_CodPessoaProdutor(Value: Integer); safecall;
    function Get_CodFazenda: Integer; safecall;
    procedure Set_CodFazenda(Value: Integer); safecall;
    function Get_CodLocal: Integer; safecall;
    procedure Set_CodLocal(Value: Integer); safecall;
    function Get_SglLocal: WideString; safecall;
    procedure Set_SglLocal(const Value: WideString); safecall;
    function Get_DesLocal: WideString; safecall;
    procedure Set_DesLocal(const Value: WideString); safecall;
    function Get_SglFazenda: WideString; safecall;
    procedure Set_SglFazenda(const Value: WideString); safecall;
    function Get_NomFazenda: WideString; safecall;
    procedure Set_NomFazenda(const Value: WideString); safecall;
    function Get_CodEstado: Integer; safecall;
    procedure Set_CodEstado(Value: Integer); safecall;
    function Get_SglEstado: WideString; safecall;
    procedure Set_SglEstado(const Value: WideString); safecall;
    function Get_DtaCadastramento: TDateTime; safecall;
    procedure Set_DtaCadastramento(Value: TDateTime); safecall;
    function Get_IndPrincipal: WideString; safecall;
    property CodPessoaProdutor: Integer read Get_CodPessoaProdutor write Set_CodPessoaProdutor;
    property CodFazenda: Integer read Get_CodFazenda write Set_CodFazenda;
    property CodLocal: Integer read Get_CodLocal write Set_CodLocal;
    property SglLocal: WideString read Get_SglLocal write Set_SglLocal;
    property DesLocal: WideString read Get_DesLocal write Set_DesLocal;
    property SglFazenda: WideString read Get_SglFazenda write Set_SglFazenda;
    property NomFazenda: WideString read Get_NomFazenda write Set_NomFazenda;
    property CodEstado: Integer read Get_CodEstado write Set_CodEstado;
    property SglEstado: WideString read Get_SglEstado write Set_SglEstado;
    property DtaCadastramento: TDateTime read Get_DtaCadastramento write Set_DtaCadastramento;
    property IndPrincipal: WideString read Get_IndPrincipal;
  end;

// *********************************************************************//
// DispIntf:  ILocalDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C10DB144-9CFC-11D6-A34A-9E07ADEB7323}
// *********************************************************************//
  ILocalDisp = dispinterface
    ['{C10DB144-9CFC-11D6-A34A-9E07ADEB7323}']
    property CodPessoaProdutor: Integer dispid 1;
    property CodFazenda: Integer dispid 2;
    property CodLocal: Integer dispid 3;
    property SglLocal: WideString dispid 4;
    property DesLocal: WideString dispid 5;
    property SglFazenda: WideString dispid 6;
    property NomFazenda: WideString dispid 7;
    property CodEstado: Integer dispid 10;
    property SglEstado: WideString dispid 11;
    property DtaCadastramento: TDateTime dispid 12;
    property IndPrincipal: WideString readonly dispid 201;
  end;

// *********************************************************************//
// Interface: ILocais
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C10DB148-9CFC-11D6-A34A-9E07ADEB7323}
// *********************************************************************//
  ILocais = interface(IDispatch)
    ['{C10DB148-9CFC-11D6-A34A-9E07ADEB7323}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(CodFazenda: Integer; const CodOrdenacao: WideString): Integer; safecall;
    function Inserir(CodFazenda: Integer; const SglLocal: WideString; const DesLocal: WideString; 
                     const CodTiposFonteAgua: WideString; const IndPrincipal: WideString): Integer; safecall;
    function Alterar(CodFazenda: Integer; CodLocal: Integer; const SglLocal: WideString; 
                     const DesLocal: WideString; const IndPrincipal: WideString): Integer; safecall;
    function Buscar(CodFazenda: Integer; CodLocal: Integer): Integer; safecall;
    function Excluir(CodFazenda: Integer; CodLocal: Integer): Integer; safecall;
    function AdicionarRegimeAlimentar(CodFazenda: Integer; CodLocal: Integer; 
                                      CodRegimeAlimentar: Integer): Integer; safecall;
    function RetirarRegimeAlimentar(CodFazenda: Integer; CodLocal: Integer; 
                                    CodRegimeAlimentar: Integer): Integer; safecall;
    function AdicionarTipoFonteAgua(CodFazenda: Integer; CodLocal: Integer; 
                                    CodTipoFonteAgua: Integer; DtaInicioValidade: TDateTime): Integer; safecall;
    function RetirarTipoFonteAgua(CodFazenda: Integer; CodLocal: Integer; 
                                  CodTipoFonteAgua: Integer; DtaInicioValidade: TDateTime; 
                                  DtaFimValidade: TDateTime): Integer; safecall;
    function ExcluirTipoFonteAgua(CodFazenda: Integer; CodLocal: Integer; 
                                  CodTipoFonteAgua: Integer; DtaInicioValidade: TDateTime; 
                                  DtaFimValidade: TDateTime): Integer; safecall;
    function Get_Local: ILocal; safecall;
    function PesquisarTiposFonteAgua(CodFazenda: Integer; CodLocal: Integer): Integer; safecall;
    function PossuiRegimeAlimentar(CodFazenda: Integer; CodLocal: Integer; 
                                   CodRegimeAlimentar: Integer): Integer; safecall;
    function PesquisarRelacionamento(CodFazenda: Integer): Integer; safecall;
    function InserirDadoGeral(const NumCNPJCPFProdutor: WideString; 
                              const CodNaturezaProdutor: WideString; CodFazenda: Integer; 
                              const SglLocal: WideString; const DesLocal: WideString; 
                              const CodTiposFonteAgua: WideString; 
                              const CodRegimeAlimentar: WideString): Integer; safecall;
    function AdicionarRegimeAlimentarDadoGeral(CodFazenda: Integer; CodLocal: Integer; 
                                               CodRegimeAlimentar: Integer; CodProdutor: Integer): Integer; safecall;
    function AdicionarTipoFonteAguaDadoGeral(CodFazenda: Integer; CodLocal: Integer; 
                                             CodTipoFonteAgua: Integer; 
                                             DtaInicioValidade: TDateTime; CodProdutor: Integer): Integer; safecall;
    property Local: ILocal read Get_Local;
  end;

// *********************************************************************//
// DispIntf:  ILocaisDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C10DB148-9CFC-11D6-A34A-9E07ADEB7323}
// *********************************************************************//
  ILocaisDisp = dispinterface
    ['{C10DB148-9CFC-11D6-A34A-9E07ADEB7323}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    procedure FecharPesquisa; dispid 11;
    function Pesquisar(CodFazenda: Integer; const CodOrdenacao: WideString): Integer; dispid 12;
    function Inserir(CodFazenda: Integer; const SglLocal: WideString; const DesLocal: WideString; 
                     const CodTiposFonteAgua: WideString; const IndPrincipal: WideString): Integer; dispid 13;
    function Alterar(CodFazenda: Integer; CodLocal: Integer; const SglLocal: WideString; 
                     const DesLocal: WideString; const IndPrincipal: WideString): Integer; dispid 14;
    function Buscar(CodFazenda: Integer; CodLocal: Integer): Integer; dispid 15;
    function Excluir(CodFazenda: Integer; CodLocal: Integer): Integer; dispid 16;
    function AdicionarRegimeAlimentar(CodFazenda: Integer; CodLocal: Integer; 
                                      CodRegimeAlimentar: Integer): Integer; dispid 17;
    function RetirarRegimeAlimentar(CodFazenda: Integer; CodLocal: Integer; 
                                    CodRegimeAlimentar: Integer): Integer; dispid 18;
    function AdicionarTipoFonteAgua(CodFazenda: Integer; CodLocal: Integer; 
                                    CodTipoFonteAgua: Integer; DtaInicioValidade: TDateTime): Integer; dispid 19;
    function RetirarTipoFonteAgua(CodFazenda: Integer; CodLocal: Integer; 
                                  CodTipoFonteAgua: Integer; DtaInicioValidade: TDateTime; 
                                  DtaFimValidade: TDateTime): Integer; dispid 20;
    function ExcluirTipoFonteAgua(CodFazenda: Integer; CodLocal: Integer; 
                                  CodTipoFonteAgua: Integer; DtaInicioValidade: TDateTime; 
                                  DtaFimValidade: TDateTime): Integer; dispid 21;
    property Local: ILocal readonly dispid 22;
    function PesquisarTiposFonteAgua(CodFazenda: Integer; CodLocal: Integer): Integer; dispid 23;
    function PossuiRegimeAlimentar(CodFazenda: Integer; CodLocal: Integer; 
                                   CodRegimeAlimentar: Integer): Integer; dispid 24;
    function PesquisarRelacionamento(CodFazenda: Integer): Integer; dispid 25;
    function InserirDadoGeral(const NumCNPJCPFProdutor: WideString; 
                              const CodNaturezaProdutor: WideString; CodFazenda: Integer; 
                              const SglLocal: WideString; const DesLocal: WideString; 
                              const CodTiposFonteAgua: WideString; 
                              const CodRegimeAlimentar: WideString): Integer; dispid 26;
    function AdicionarRegimeAlimentarDadoGeral(CodFazenda: Integer; CodLocal: Integer; 
                                               CodRegimeAlimentar: Integer; CodProdutor: Integer): Integer; dispid 27;
    function AdicionarTipoFonteAguaDadoGeral(CodFazenda: Integer; CodLocal: Integer; 
                                             CodTipoFonteAgua: Integer; 
                                             DtaInicioValidade: TDateTime; CodProdutor: Integer): Integer; dispid 28;
  end;

// *********************************************************************//
// Interface: ITiposOrigem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D89FADE0-9D56-11D6-B075-00E07DAEF481}
// *********************************************************************//
  ITiposOrigem = interface(IDispatch)
    ['{D89FADE0-9D56-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposOrigemDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D89FADE0-9D56-11D6-B075-00E07DAEF481}
// *********************************************************************//
  ITiposOrigemDisp = dispinterface
    ['{D89FADE0-9D56-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
  end;

// *********************************************************************//
// Interface: IFazendas
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63804AE4-9DB2-11D6-A34A-DB62E7263D22}
// *********************************************************************//
  IFazendas = interface(IDispatch)
    ['{63804AE4-9DB2-11D6-A34A-DB62E7263D22}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
    function Inserir(const SglFazenda: WideString; const NomFazenda: WideString; 
                     CodEstado: Integer; const NumPropriedadeRural: WideString; 
                     CodIndTipoProprietario: Integer; const TxtObservacao: WideString; 
                     const CodUlavPro: WideString; const CodUlavFaz: WideString; 
                     QtdDistMun: Integer; const DesAcessoFaz: WideString): Integer; safecall;
    function Alterar(CodFazenda: Integer; const SglFazenda: WideString; 
                     const NomFazenda: WideString; CodEstado: Integer; 
                     const NumPropriedadeRural: WideString; CodIndTipoProprietario: Integer; 
                     const TxtObservacao: WideString; const CodUlavPro: WideString; 
                     const CodUlavFaz: WideString; QtdDistMun: Integer; 
                     const DesAcessoFaz: WideString): Integer; safecall;
    function Buscar(CodFazenda: Integer): Integer; safecall;
    function Excluir(CodFazenda: Integer): Integer; safecall;
    function Get_Fazenda: IFazenda; safecall;
    function EfetivarCadastro(CodFazenda: Integer; IndProdutorDefinido: Integer; 
                              const NumCNPJCPFProdutor: WideString): Integer; safecall;
    function CancelarEfetivacao(CodFazenda: Integer; const IndExportarPropriedade: WideString): Integer; safecall;
    function DefinirPropriedadeRural(CodFazenda: Integer; CodPropriedadeRural: Integer): Integer; safecall;
    function DefinirImagem(CodFazenda: Integer; const ArquivoOrigem: WideString): Integer; safecall;
    function RemoverImagem(CodFazenda: Integer): Integer; safecall;
    function LiberarImagem(CodFazenda: Integer): Integer; safecall;
    function GerarRelatorio(const SglProdutor: WideString; const NomPessoaProdutor: WideString; 
                            const SglFazenda: WideString; const NomFazenda: WideString; 
                            const CodSituacaoSISBOVFazenda: WideString; 
                            const IndSituacaoImagemFazenda: WideString; 
                            const NomPropriedadeRural: WideString; 
                            const NumImovelReceitaFederal: WideString; 
                            CodLocalizacaoSisbov: Integer; CodEstado: Integer; 
                            const NomMunicipio: WideString; const CodMicroRegiao: WideString; 
                            DtaInicioCadastramento: TDateTime; DtaFimCadastramento: TDateTime; 
                            Tipo: Integer; QtdQuebraRelatorio: Integer; 
                            DtaInicioVistoria: TDateTime; DtaFimVistoria: TDateTime): WideString; safecall;
    function InserirDadoGeral(const NumCNPJCPFProdutor: WideString; 
                              const CodNaturezaProdutor: WideString; const SglFazenda: WideString; 
                              const NomFazenda: WideString; CodEstado: Integer; 
                              const NumPropriedadeRural: WideString; 
                              const NumImovelReceitaFederal: WideString; 
                              CodIndTipoProprietario: Integer; const TxtObservacao: WideString): Integer; safecall;
    function AlterarCodigoExportacao(CodFazenda: Integer; CodExportacao: Integer): Integer; safecall;
    function DesvincularProdutorPropriedade(const cpfprodutor: WideString; 
                                            const cnpjprodutor: WideString; idpropriedade: Integer): Integer; safecall;
    property Fazenda: IFazenda read Get_Fazenda;
  end;

// *********************************************************************//
// DispIntf:  IFazendasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63804AE4-9DB2-11D6-A34A-DB62E7263D22}
// *********************************************************************//
  IFazendasDisp = dispinterface
    ['{63804AE4-9DB2-11D6-A34A-DB62E7263D22}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    procedure FecharPesquisa; dispid 11;
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 12;
    function Inserir(const SglFazenda: WideString; const NomFazenda: WideString; 
                     CodEstado: Integer; const NumPropriedadeRural: WideString; 
                     CodIndTipoProprietario: Integer; const TxtObservacao: WideString; 
                     const CodUlavPro: WideString; const CodUlavFaz: WideString; 
                     QtdDistMun: Integer; const DesAcessoFaz: WideString): Integer; dispid 13;
    function Alterar(CodFazenda: Integer; const SglFazenda: WideString; 
                     const NomFazenda: WideString; CodEstado: Integer; 
                     const NumPropriedadeRural: WideString; CodIndTipoProprietario: Integer; 
                     const TxtObservacao: WideString; const CodUlavPro: WideString; 
                     const CodUlavFaz: WideString; QtdDistMun: Integer; 
                     const DesAcessoFaz: WideString): Integer; dispid 14;
    function Buscar(CodFazenda: Integer): Integer; dispid 15;
    function Excluir(CodFazenda: Integer): Integer; dispid 16;
    property Fazenda: IFazenda readonly dispid 17;
    function EfetivarCadastro(CodFazenda: Integer; IndProdutorDefinido: Integer; 
                              const NumCNPJCPFProdutor: WideString): Integer; dispid 28;
    function CancelarEfetivacao(CodFazenda: Integer; const IndExportarPropriedade: WideString): Integer; dispid 18;
    function DefinirPropriedadeRural(CodFazenda: Integer; CodPropriedadeRural: Integer): Integer; dispid 19;
    function DefinirImagem(CodFazenda: Integer; const ArquivoOrigem: WideString): Integer; dispid 20;
    function RemoverImagem(CodFazenda: Integer): Integer; dispid 21;
    function LiberarImagem(CodFazenda: Integer): Integer; dispid 22;
    function GerarRelatorio(const SglProdutor: WideString; const NomPessoaProdutor: WideString; 
                            const SglFazenda: WideString; const NomFazenda: WideString; 
                            const CodSituacaoSISBOVFazenda: WideString; 
                            const IndSituacaoImagemFazenda: WideString; 
                            const NomPropriedadeRural: WideString; 
                            const NumImovelReceitaFederal: WideString; 
                            CodLocalizacaoSisbov: Integer; CodEstado: Integer; 
                            const NomMunicipio: WideString; const CodMicroRegiao: WideString; 
                            DtaInicioCadastramento: TDateTime; DtaFimCadastramento: TDateTime; 
                            Tipo: Integer; QtdQuebraRelatorio: Integer; 
                            DtaInicioVistoria: TDateTime; DtaFimVistoria: TDateTime): WideString; dispid 23;
    function InserirDadoGeral(const NumCNPJCPFProdutor: WideString; 
                              const CodNaturezaProdutor: WideString; const SglFazenda: WideString; 
                              const NomFazenda: WideString; CodEstado: Integer; 
                              const NumPropriedadeRural: WideString; 
                              const NumImovelReceitaFederal: WideString; 
                              CodIndTipoProprietario: Integer; const TxtObservacao: WideString): Integer; dispid 24;
    function AlterarCodigoExportacao(CodFazenda: Integer; CodExportacao: Integer): Integer; dispid 201;
    function DesvincularProdutorPropriedade(const cpfprodutor: WideString; 
                                            const cnpjprodutor: WideString; idpropriedade: Integer): Integer; dispid 202;
  end;

// *********************************************************************//
// Interface: IFazenda
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63804AE8-9DB2-11D6-A34A-DB62E7263D22}
// *********************************************************************//
  IFazenda = interface(IDispatch)
    ['{63804AE8-9DB2-11D6-A34A-DB62E7263D22}']
    function Get_CodPessoaProdutor: Integer; safecall;
    procedure Set_CodPessoaProdutor(Value: Integer); safecall;
    function Get_CodFazenda: Integer; safecall;
    procedure Set_CodFazenda(Value: Integer); safecall;
    function Get_NomFazenda: WideString; safecall;
    procedure Set_NomFazenda(const Value: WideString); safecall;
    function Get_SglFazenda: WideString; safecall;
    procedure Set_SglFazenda(const Value: WideString); safecall;
    function Get_SglEstado: WideString; safecall;
    procedure Set_SglEstado(const Value: WideString); safecall;
    function Get_NumPropriedadeRural: WideString; safecall;
    procedure Set_NumPropriedadeRural(const Value: WideString); safecall;
    function Get_TxtObservacao: WideString; safecall;
    procedure Set_TxtObservacao(const Value: WideString); safecall;
    function Get_CodPropriedadeRural: Integer; safecall;
    procedure Set_CodPropriedadeRural(Value: Integer); safecall;
    function Get_NomPropriedadeRural: WideString; safecall;
    procedure Set_NomPropriedadeRural(const Value: WideString); safecall;
    function Get_NumImovelReceitaFederalPR: WideString; safecall;
    procedure Set_NumImovelReceitaFederalPR(const Value: WideString); safecall;
    function Get_NomMunicipioPR: WideString; safecall;
    procedure Set_NomMunicipioPR(const Value: WideString); safecall;
    function Get_SglEstadoPR: WideString; safecall;
    procedure Set_SglEstadoPR(const Value: WideString); safecall;
    function Get_NomPaisPR: WideString; safecall;
    procedure Set_NomPaisPR(const Value: WideString); safecall;
    function Get_DtaCadastramento: TDateTime; safecall;
    procedure Set_DtaCadastramento(Value: TDateTime); safecall;
    function Get_DtaEfetivacaoCadastro: TDateTime; safecall;
    procedure Set_DtaEfetivacaoCadastro(Value: TDateTime); safecall;
    function Get_CodEstado: Integer; safecall;
    procedure Set_CodEstado(Value: Integer); safecall;
    function Get_IndSituacaoImagem: WideString; safecall;
    procedure Set_IndSituacaoImagem(const Value: WideString); safecall;
    function Get_IndEfetivadoUmaVez: WideString; safecall;
    procedure Set_IndEfetivadoUmaVez(const Value: WideString); safecall;
    function Get_CodLocalizacaoSisbov: Integer; safecall;
    procedure Set_CodLocalizacaoSisbov(Value: Integer); safecall;
    function Get_CodRegimePosseUso: Integer; safecall;
    procedure Set_CodRegimePosseUso(Value: Integer); safecall;
    function Get_DesRegimePosseUso: WideString; safecall;
    procedure Set_DesRegimePosseUso(const Value: WideString); safecall;
    function Get_CodUlavPro: WideString; safecall;
    procedure Set_CodUlavPro(const Value: WideString); safecall;
    function Get_CodUlavFaz: WideString; safecall;
    procedure Set_CodUlavFaz(const Value: WideString); safecall;
    function Get_QtdDistMunicipio: Integer; safecall;
    procedure Set_QtdDistMunicipio(Value: Integer); safecall;
    function Get_DesAcessoFaz: WideString; safecall;
    procedure Set_DesAcessoFaz(const Value: WideString); safecall;
    function Get_CodIdPropriedadeSisbov: Integer; safecall;
    procedure Set_CodIdPropriedadeSisbov(Value: Integer); safecall;
    property CodPessoaProdutor: Integer read Get_CodPessoaProdutor write Set_CodPessoaProdutor;
    property CodFazenda: Integer read Get_CodFazenda write Set_CodFazenda;
    property NomFazenda: WideString read Get_NomFazenda write Set_NomFazenda;
    property SglFazenda: WideString read Get_SglFazenda write Set_SglFazenda;
    property SglEstado: WideString read Get_SglEstado write Set_SglEstado;
    property NumPropriedadeRural: WideString read Get_NumPropriedadeRural write Set_NumPropriedadeRural;
    property TxtObservacao: WideString read Get_TxtObservacao write Set_TxtObservacao;
    property CodPropriedadeRural: Integer read Get_CodPropriedadeRural write Set_CodPropriedadeRural;
    property NomPropriedadeRural: WideString read Get_NomPropriedadeRural write Set_NomPropriedadeRural;
    property NumImovelReceitaFederalPR: WideString read Get_NumImovelReceitaFederalPR write Set_NumImovelReceitaFederalPR;
    property NomMunicipioPR: WideString read Get_NomMunicipioPR write Set_NomMunicipioPR;
    property SglEstadoPR: WideString read Get_SglEstadoPR write Set_SglEstadoPR;
    property NomPaisPR: WideString read Get_NomPaisPR write Set_NomPaisPR;
    property DtaCadastramento: TDateTime read Get_DtaCadastramento write Set_DtaCadastramento;
    property DtaEfetivacaoCadastro: TDateTime read Get_DtaEfetivacaoCadastro write Set_DtaEfetivacaoCadastro;
    property CodEstado: Integer read Get_CodEstado write Set_CodEstado;
    property IndSituacaoImagem: WideString read Get_IndSituacaoImagem write Set_IndSituacaoImagem;
    property IndEfetivadoUmaVez: WideString read Get_IndEfetivadoUmaVez write Set_IndEfetivadoUmaVez;
    property CodLocalizacaoSisbov: Integer read Get_CodLocalizacaoSisbov write Set_CodLocalizacaoSisbov;
    property CodRegimePosseUso: Integer read Get_CodRegimePosseUso write Set_CodRegimePosseUso;
    property DesRegimePosseUso: WideString read Get_DesRegimePosseUso write Set_DesRegimePosseUso;
    property CodUlavPro: WideString read Get_CodUlavPro write Set_CodUlavPro;
    property CodUlavFaz: WideString read Get_CodUlavFaz write Set_CodUlavFaz;
    property QtdDistMunicipio: Integer read Get_QtdDistMunicipio write Set_QtdDistMunicipio;
    property DesAcessoFaz: WideString read Get_DesAcessoFaz write Set_DesAcessoFaz;
    property CodIdPropriedadeSisbov: Integer read Get_CodIdPropriedadeSisbov write Set_CodIdPropriedadeSisbov;
  end;

// *********************************************************************//
// DispIntf:  IFazendaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63804AE8-9DB2-11D6-A34A-DB62E7263D22}
// *********************************************************************//
  IFazendaDisp = dispinterface
    ['{63804AE8-9DB2-11D6-A34A-DB62E7263D22}']
    property CodPessoaProdutor: Integer dispid 1;
    property CodFazenda: Integer dispid 2;
    property NomFazenda: WideString dispid 4;
    property SglFazenda: WideString dispid 3;
    property SglEstado: WideString dispid 15;
    property NumPropriedadeRural: WideString dispid 5;
    property TxtObservacao: WideString dispid 6;
    property CodPropriedadeRural: Integer dispid 7;
    property NomPropriedadeRural: WideString dispid 8;
    property NumImovelReceitaFederalPR: WideString dispid 9;
    property NomMunicipioPR: WideString dispid 10;
    property SglEstadoPR: WideString dispid 11;
    property NomPaisPR: WideString dispid 12;
    property DtaCadastramento: TDateTime dispid 13;
    property DtaEfetivacaoCadastro: TDateTime dispid 14;
    property CodEstado: Integer dispid 16;
    property IndSituacaoImagem: WideString dispid 17;
    property IndEfetivadoUmaVez: WideString dispid 18;
    property CodLocalizacaoSisbov: Integer dispid 19;
    property CodRegimePosseUso: Integer dispid 20;
    property DesRegimePosseUso: WideString dispid 21;
    property CodUlavPro: WideString dispid 201;
    property CodUlavFaz: WideString dispid 202;
    property QtdDistMunicipio: Integer dispid 203;
    property DesAcessoFaz: WideString dispid 204;
    property CodIdPropriedadeSisbov: Integer dispid 205;
  end;

// *********************************************************************//
// Interface: IRegimesAlimentares
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {376E6000-9E24-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IRegimesAlimentares = interface(IDispatch)
    ['{376E6000-9E24-11D6-B075-00E07DAEF481}']
    function Pesquisar(CodAptidao: Integer; const IndAnimalMamando: WideString; 
                       const IndIncluirNaoDefinido: WideString; const CodOrdenacao: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function PesquisarRelacionamento: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRegimesAlimentaresDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {376E6000-9E24-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IRegimesAlimentaresDisp = dispinterface
    ['{376E6000-9E24-11D6-B075-00E07DAEF481}']
    function Pesquisar(CodAptidao: Integer; const IndAnimalMamando: WideString; 
                       const IndIncluirNaoDefinido: WideString; const CodOrdenacao: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    function PesquisarRelacionamento: Integer; dispid 6;
    procedure IrAoPrimeiro; dispid 9;
  end;

// *********************************************************************//
// Interface: IAssociacoesRaca
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {376E6004-9E24-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IAssociacoesRaca = interface(IDispatch)
    ['{376E6004-9E24-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Get_AssociacaoRaca: IAssociacaoRaca; safecall;
    function BOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    procedure Deslocar(NumDeslocamento: Integer); safecall;
    function Inserir(const SglAssociacaoRaca: WideString; const NomAssociacaoRaca: WideString): Integer; safecall;
    function Alterar(CodAssociacaoRaca: Integer; const SglAssociacaoRaca: WideString; 
                     const NomAssociacaoRaca: WideString): Integer; safecall;
    function Excluir(CodAssociacaoRaca: Integer): Integer; safecall;
    function Buscar(CodAssociacaoRaca: Integer): Integer; safecall;
    function AdicionarGrauSangue(CodAssociacaoRaca: Integer; const CodGrausSangue: WideString): Integer; safecall;
    function RetirarGrauSangue(CodAssociacaoRaca: Integer; const CodGrausSangue: WideString): Integer; safecall;
    function PesquisarRelacionamento: Integer; safecall;
    function PesquisarDoProdutor(const IndAssociacaoRacaProdutor: WideString; 
                                 const CodOrdenacao: WideString): Integer; safecall;
    function AdicionarAoProdutor(CodAssociacaoRaca: Integer): Integer; safecall;
    function RetirarDoProdutor(CodAssociacaoRaca: Integer): Integer; safecall;
    function AdicionarRaca(CodAssociacaoRaca: Integer; const CodRacas: WideString): Integer; safecall;
    function RetirarRaca(CodAssociacaoRaca: Integer; const CodRacas: WideString): Integer; safecall;
    function PesquisarRacas(CodAssociacaoRaca: Integer; const IndAindaNaoRelacionados: WideString; 
                            const CodOrdenacao: WideString): Integer; safecall;
    property AssociacaoRaca: IAssociacaoRaca read Get_AssociacaoRaca;
  end;

// *********************************************************************//
// DispIntf:  IAssociacoesRacaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {376E6004-9E24-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IAssociacoesRacaDisp = dispinterface
    ['{376E6004-9E24-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    property AssociacaoRaca: IAssociacaoRaca readonly dispid 6;
    function BOF: WordBool; dispid 7;
    function NumeroRegistros: Integer; dispid 8;
    procedure IrAoPrimeiro; dispid 9;
    procedure IrAoUltimo; dispid 10;
    procedure IrAoAnterior; dispid 11;
    procedure Posicionar(NumPosicao: Integer); dispid 12;
    procedure Deslocar(NumDeslocamento: Integer); dispid 13;
    function Inserir(const SglAssociacaoRaca: WideString; const NomAssociacaoRaca: WideString): Integer; dispid 14;
    function Alterar(CodAssociacaoRaca: Integer; const SglAssociacaoRaca: WideString; 
                     const NomAssociacaoRaca: WideString): Integer; dispid 15;
    function Excluir(CodAssociacaoRaca: Integer): Integer; dispid 16;
    function Buscar(CodAssociacaoRaca: Integer): Integer; dispid 17;
    function AdicionarGrauSangue(CodAssociacaoRaca: Integer; const CodGrausSangue: WideString): Integer; dispid 18;
    function RetirarGrauSangue(CodAssociacaoRaca: Integer; const CodGrausSangue: WideString): Integer; dispid 19;
    function PesquisarRelacionamento: Integer; dispid 20;
    function PesquisarDoProdutor(const IndAssociacaoRacaProdutor: WideString; 
                                 const CodOrdenacao: WideString): Integer; dispid 21;
    function AdicionarAoProdutor(CodAssociacaoRaca: Integer): Integer; dispid 22;
    function RetirarDoProdutor(CodAssociacaoRaca: Integer): Integer; dispid 23;
    function AdicionarRaca(CodAssociacaoRaca: Integer; const CodRacas: WideString): Integer; dispid 24;
    function RetirarRaca(CodAssociacaoRaca: Integer; const CodRacas: WideString): Integer; dispid 25;
    function PesquisarRacas(CodAssociacaoRaca: Integer; const IndAindaNaoRelacionados: WideString; 
                            const CodOrdenacao: WideString): Integer; dispid 26;
  end;

// *********************************************************************//
// Interface: IGrausSangue
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82B8AC20-9E63-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IGrausSangue = interface(IDispatch)
    ['{82B8AC20-9E63-11D6-B075-00E07DAEF481}']
    function PesquisarRelacionamentos: Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Inserir(const SglGrauSangue: WideString; const DesGrauSangue: WideString): Integer; safecall;
    function Excluir(CodGrauSangue: Integer): Integer; safecall;
    function Buscar(CodGrauSangue: Integer): Integer; safecall;
    function Alterar(CodGrauSangue: Integer; const SglGrauSangue: WideString; 
                     const DesGrauSangue: WideString): Integer; safecall;
    function BOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function Get_GrauSangue: IGrauSangue; safecall;
    function Pesquisar(CodAssociacaoRaca: Integer; const IndAindaNaoRelacionados: WideString; 
                       const CodOrdenacao: WideString): Integer; safecall;
    function PesquisarDoProdutor(const CodOrdenacao: WideString): Integer; safecall;
    function PesquisarRelacionamentoParaProdutor: Integer; safecall;
    property GrauSangue: IGrauSangue read Get_GrauSangue;
  end;

// *********************************************************************//
// DispIntf:  IGrausSangueDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82B8AC20-9E63-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IGrausSangueDisp = dispinterface
    ['{82B8AC20-9E63-11D6-B075-00E07DAEF481}']
    function PesquisarRelacionamentos: Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    function Inserir(const SglGrauSangue: WideString; const DesGrauSangue: WideString): Integer; dispid 7;
    function Excluir(CodGrauSangue: Integer): Integer; dispid 8;
    function Buscar(CodGrauSangue: Integer): Integer; dispid 9;
    function Alterar(CodGrauSangue: Integer; const SglGrauSangue: WideString; 
                     const DesGrauSangue: WideString): Integer; dispid 10;
    function BOF: WordBool; dispid 11;
    function NumeroRegistros: Integer; dispid 12;
    procedure IrAoPrimeiro; dispid 13;
    procedure IrAoUltimo; dispid 14;
    procedure IrAoAnterior; dispid 15;
    procedure Posicionar(NumPosicao: Integer); dispid 16;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 17;
    property GrauSangue: IGrauSangue readonly dispid 19;
    function Pesquisar(CodAssociacaoRaca: Integer; const IndAindaNaoRelacionados: WideString; 
                       const CodOrdenacao: WideString): Integer; dispid 6;
    function PesquisarDoProdutor(const CodOrdenacao: WideString): Integer; dispid 18;
    function PesquisarRelacionamentoParaProdutor: Integer; dispid 20;
  end;

// *********************************************************************//
// Interface: ITiposIdentificador
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A1FA3560-9E75-11D6-A34A-BFE3F2C1B223}
// *********************************************************************//
  ITiposIdentificador = interface(IDispatch)
    ['{A1FA3560-9E75-11D6-A34A-BFE3F2C1B223}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    procedure IrAoPrimeiro; safecall;
    function DefinirDoProdutor(CodTipoIdentificador1: Integer; CodPosicaoIdentificador1: Integer; 
                               CodTipoIdentificador2: Integer; CodPosicaoIdentificador2: Integer; 
                               CodTipoIdentificador3: Integer; CodPosicaoIdentificador3: Integer; 
                               CodTipoIdentificador4: Integer; CodPosicaoIdentificador4: Integer): Integer; safecall;
    function Get_IdentificadorDoProdutor: IIdentificadorDoProdutor; safecall;
    function BuscarDoProdutor(NumSequenciadentificador: Integer): Integer; safecall;
    property IdentificadorDoProdutor: IIdentificadorDoProdutor read Get_IdentificadorDoProdutor;
  end;

// *********************************************************************//
// DispIntf:  ITiposIdentificadorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A1FA3560-9E75-11D6-A34A-BFE3F2C1B223}
// *********************************************************************//
  ITiposIdentificadorDisp = dispinterface
    ['{A1FA3560-9E75-11D6-A34A-BFE3F2C1B223}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    procedure IrAoPrimeiro; dispid 6;
    function DefinirDoProdutor(CodTipoIdentificador1: Integer; CodPosicaoIdentificador1: Integer; 
                               CodTipoIdentificador2: Integer; CodPosicaoIdentificador2: Integer; 
                               CodTipoIdentificador3: Integer; CodPosicaoIdentificador3: Integer; 
                               CodTipoIdentificador4: Integer; CodPosicaoIdentificador4: Integer): Integer; dispid 7;
    property IdentificadorDoProdutor: IIdentificadorDoProdutor readonly dispid 8;
    function BuscarDoProdutor(NumSequenciadentificador: Integer): Integer; dispid 9;
  end;

// *********************************************************************//
// Interface: ICategoriasAnimal
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC261EC5-9EEC-11D6-B075-00E07DAEF481}
// *********************************************************************//
  ICategoriasAnimal = interface(IDispatch)
    ['{EC261EC5-9EEC-11D6-B075-00E07DAEF481}']
    function Pesquisar(CodAptidao: Integer; const IndAnimalAtivo: WideString; 
                       const IndSexo: WideString; NumIdade: Integer; 
                       const IndAnimalCadastrado: WideString; const CodOrdenacao: WideString; 
                       const IndRestritoSistema: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function PesquisarRelacionamento: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
  end;

// *********************************************************************//
// DispIntf:  ICategoriasAnimalDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC261EC5-9EEC-11D6-B075-00E07DAEF481}
// *********************************************************************//
  ICategoriasAnimalDisp = dispinterface
    ['{EC261EC5-9EEC-11D6-B075-00E07DAEF481}']
    function Pesquisar(CodAptidao: Integer; const IndAnimalAtivo: WideString; 
                       const IndSexo: WideString; NumIdade: Integer; 
                       const IndAnimalCadastrado: WideString; const CodOrdenacao: WideString; 
                       const IndRestritoSistema: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    function PesquisarRelacionamento: Integer; dispid 6;
    procedure IrAoPrimeiro; dispid 7;
  end;

// *********************************************************************//
// Interface: ITiposFonteAgua
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC261EC9-9EEC-11D6-B075-00E07DAEF481}
// *********************************************************************//
  ITiposFonteAgua = interface(IDispatch)
    ['{EC261EC9-9EEC-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposFonteAguaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC261EC9-9EEC-11D6-B075-00E07DAEF481}
// *********************************************************************//
  ITiposFonteAguaDisp = dispinterface
    ['{EC261EC9-9EEC-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
  end;

// *********************************************************************//
// Interface: IAnimal
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BA7B9AA0-9F49-11D6-A34A-BFB2F9F3A223}
// *********************************************************************//
  IAnimal = interface(IDispatch)
    ['{BA7B9AA0-9F49-11D6-A34A-BFB2F9F3A223}']
    function Get_CodPessoaProdutor: Integer; safecall;
    procedure Set_CodPessoaProdutor(Value: Integer); safecall;
    function Get_CodAnimal: Integer; safecall;
    procedure Set_CodAnimal(Value: Integer); safecall;
    function Get_CodFazendaManejo: Integer; safecall;
    procedure Set_CodFazendaManejo(Value: Integer); safecall;
    function Get_SglFazendaManejo: WideString; safecall;
    procedure Set_SglFazendaManejo(const Value: WideString); safecall;
    function Get_CodAnimalManejo: WideString; safecall;
    procedure Set_CodAnimalManejo(const Value: WideString); safecall;
    function Get_CodPaisSisBov: Integer; safecall;
    procedure Set_CodPaisSisBov(Value: Integer); safecall;
    function Get_CodEstadoSISBOV: Integer; safecall;
    procedure Set_CodEstadoSISBOV(Value: Integer); safecall;
    function Get_CodMicroRegiaoSISBOV: Integer; safecall;
    procedure Set_CodMicroRegiaoSISBOV(Value: Integer); safecall;
    function Get_CodAnimalSisbov: Integer; safecall;
    procedure Set_CodAnimalSisbov(Value: Integer); safecall;
    function Get_NumDVSisbov: Integer; safecall;
    procedure Set_NumDVSisbov(Value: Integer); safecall;
    function Get_NomAnimal: WideString; safecall;
    procedure Set_NomAnimal(const Value: WideString); safecall;
    function Get_DesApelido: WideString; safecall;
    procedure Set_DesApelido(const Value: WideString); safecall;
    function Get_CodRaca: Integer; safecall;
    procedure Set_CodRaca(Value: Integer); safecall;
    function Get_SglRaca: WideString; safecall;
    procedure Set_SglRaca(const Value: WideString); safecall;
    function Get_DesRaca: WideString; safecall;
    procedure Set_DesRaca(const Value: WideString); safecall;
    function Get_CodPelagem: Integer; safecall;
    procedure Set_CodPelagem(Value: Integer); safecall;
    function Get_SglPelagem: WideString; safecall;
    procedure Set_SglPelagem(const Value: WideString); safecall;
    function Get_DesPelagem: WideString; safecall;
    procedure Set_DesPelagem(const Value: WideString); safecall;
    function Get_IndSexo: WideString; safecall;
    procedure Set_IndSexo(const Value: WideString); safecall;
    function Get_CodTipoOrigem: Integer; safecall;
    procedure Set_CodTipoOrigem(Value: Integer); safecall;
    function Get_SglTipoOrigem: WideString; safecall;
    procedure Set_SglTipoOrigem(const Value: WideString); safecall;
    function Get_DesTipoOrigem: WideString; safecall;
    procedure Set_DesTipoOrigem(const Value: WideString); safecall;
    function Get_DtaNascimento: TDateTime; safecall;
    procedure Set_DtaNascimento(Value: TDateTime); safecall;
    function Get_DtaCompra: TDateTime; safecall;
    procedure Set_DtaCompra(Value: TDateTime); safecall;
    function Get_CodAnimalPai: Integer; safecall;
    procedure Set_CodAnimalPai(Value: Integer); safecall;
    function Get_SglFazendaAnimalPai: WideString; safecall;
    procedure Set_SglFazendaAnimalPai(const Value: WideString); safecall;
    function Get_CodManejoAnimalPai: WideString; safecall;
    procedure Set_CodManejoAnimalPai(const Value: WideString); safecall;
    function Get_CodAnimalMae: Integer; safecall;
    procedure Set_CodAnimalMae(Value: Integer); safecall;
    function Get_SglFazendaAnimalMae: WideString; safecall;
    procedure Set_SglFazendaAnimalMae(const Value: WideString); safecall;
    function Get_CodManejoAnimalMae: WideString; safecall;
    procedure Set_CodManejoAnimalMae(const Value: WideString); safecall;
    function Get_CodAnimalReceptor: Integer; safecall;
    procedure Set_CodAnimalReceptor(Value: Integer); safecall;
    function Get_SglFazendaAnimalReceptor: WideString; safecall;
    procedure Set_SglFazendaAnimalReceptor(const Value: WideString); safecall;
    function Get_CodManejoAnimalReceptor: WideString; safecall;
    procedure Set_CodManejoAnimalReceptor(const Value: WideString); safecall;
    function Get_IndAnimalCastrado: WideString; safecall;
    procedure Set_IndAnimalCastrado(const Value: WideString); safecall;
    function Get_CodRegimeAlimentar: Integer; safecall;
    procedure Set_CodRegimeAlimentar(Value: Integer); safecall;
    function Get_SglRegimeAlimentar: WideString; safecall;
    procedure Set_SglRegimeAlimentar(const Value: WideString); safecall;
    function Get_DesRegimeAlimentar: WideString; safecall;
    procedure Set_DesRegimeAlimentar(const Value: WideString); safecall;
    function Get_CodCategoriaAnimal: Integer; safecall;
    procedure Set_CodCategoriaAnimal(Value: Integer); safecall;
    function Get_SglCategoriaAnimal: WideString; safecall;
    procedure Set_SglCategoriaAnimal(const Value: WideString); safecall;
    function Get_DesCategoriaAnimal: WideString; safecall;
    procedure Set_DesCategoriaAnimal(const Value: WideString); safecall;
    function Get_CodFazendaCorrente: Integer; safecall;
    procedure Set_CodFazendaCorrente(Value: Integer); safecall;
    function Get_SglFazendaCorrente: WideString; safecall;
    procedure Set_SglFazendaCorrente(const Value: WideString); safecall;
    function Get_NomFazendaCorrente: WideString; safecall;
    procedure Set_NomFazendaCorrente(const Value: WideString); safecall;
    function Get_CodLocalCorrente: Integer; safecall;
    procedure Set_CodLocalCorrente(Value: Integer); safecall;
    function Get_SglLocalCorrente: WideString; safecall;
    procedure Set_SglLocalCorrente(const Value: WideString); safecall;
    function Get_DesLocalCorrente: WideString; safecall;
    procedure Set_DesLocalCorrente(const Value: WideString); safecall;
    function Get_CodLoteCorrente: Integer; safecall;
    procedure Set_CodLoteCorrente(Value: Integer); safecall;
    function Get_SglLoteCorrente: WideString; safecall;
    procedure Set_SglLoteCorrente(const Value: WideString); safecall;
    function Get_DesLoteCorrente: WideString; safecall;
    procedure Set_DesLoteCorrente(const Value: WideString); safecall;
    function Get_TxtObservacao: WideString; safecall;
    procedure Set_TxtObservacao(const Value: WideString); safecall;
    function Get_DtaCadastramento: TDateTime; safecall;
    procedure Set_DtaCadastramento(Value: TDateTime); safecall;
    function Get_DtaEfetivacaoCadastro: TDateTime; safecall;
    procedure Set_DtaEfetivacaoCadastro(Value: TDateTime); safecall;
    function Get_DtaUltimoEvento: TDateTime; safecall;
    procedure Set_DtaUltimoEvento(Value: TDateTime); safecall;
    function Get_CodAssociacaoRaca: Integer; safecall;
    procedure Set_CodAssociacaoRaca(Value: Integer); safecall;
    function Get_SglAssociacaoRaca: WideString; safecall;
    procedure Set_SglAssociacaoRaca(const Value: WideString); safecall;
    function Get_CodGrauSangue: Integer; safecall;
    procedure Set_CodGrauSangue(Value: Integer); safecall;
    function Get_SglGrauSangue: WideString; safecall;
    procedure Set_SglGrauSangue(const Value: WideString); safecall;
    function Get_NumRGD: WideString; safecall;
    procedure Set_NumRGD(const Value: WideString); safecall;
    function Get_CodAnimalCertificadora: WideString; safecall;
    procedure Set_CodAnimalCertificadora(const Value: WideString); safecall;
    function Get_CodSituacaoSisBov: WideString; safecall;
    procedure Set_CodSituacaoSisBov(const Value: WideString); safecall;
    function Get_DesSituacaoSisbov: WideString; safecall;
    procedure Set_DesSituacaoSisbov(const Value: WideString); safecall;
    function Get_DtaIdentificacaoSisbov: TDateTime; safecall;
    procedure Set_DtaIdentificacaoSisbov(Value: TDateTime); safecall;
    function Get_NumImovelIdentificacao: WideString; safecall;
    procedure Set_NumImovelIdentificacao(const Value: WideString); safecall;
    function Get_CodPropriedadeIdentificacao: Integer; safecall;
    procedure Set_CodPropriedadeIdentificacao(Value: Integer); safecall;
    function Get_NomPropriedadeIdentificacao: WideString; safecall;
    procedure Set_NomPropriedadeIdentificacao(const Value: WideString); safecall;
    function Get_CodFazendaIdentificacao: Integer; safecall;
    procedure Set_CodFazendaIdentificacao(Value: Integer); safecall;
    function Get_SglFazendaIdentificacao: WideString; safecall;
    procedure Set_SglFazendaIdentificacao(const Value: WideString); safecall;
    function Get_NomFazendaIdentificacao: WideString; safecall;
    procedure Set_NomFazendaIdentificacao(const Value: WideString); safecall;
    function Get_NumImovelNascimento: WideString; safecall;
    procedure Set_NumImovelNascimento(const Value: WideString); safecall;
    function Get_CodPropriedadeNascimento: Integer; safecall;
    procedure Set_CodPropriedadeNascimento(Value: Integer); safecall;
    function Get_NomPropriedadeNascimento: WideString; safecall;
    procedure Set_NomPropriedadeNascimento(const Value: WideString); safecall;
    function Get_CodFazendaNascimento: Integer; safecall;
    procedure Set_CodFazendaNascimento(Value: Integer); safecall;
    function Get_SglFazendaNascimento: WideString; safecall;
    procedure Set_SglFazendaNascimento(const Value: WideString); safecall;
    function Get_NomFazendaNascimento: WideString; safecall;
    procedure Set_NomFazendaNascimento(const Value: WideString); safecall;
    function Get_CodPessoaSecundariaCriador: Integer; safecall;
    procedure Set_CodPessoaSecundariaCriador(Value: Integer); safecall;
    function Get_NomPessoaSecundariaCriador: WideString; safecall;
    procedure Set_NomPessoaSecundariaCriador(const Value: WideString); safecall;
    function Get_CodEspecie: Integer; safecall;
    procedure Set_CodEspecie(Value: Integer); safecall;
    function Get_SglEspecie: WideString; safecall;
    procedure Set_SglEspecie(const Value: WideString); safecall;
    function Get_DesEspecie: WideString; safecall;
    procedure Set_DesEspecie(const Value: WideString); safecall;
    function Get_CodAptidao: Integer; safecall;
    procedure Set_CodAptidao(Value: Integer); safecall;
    function Get_SglAptidao: WideString; safecall;
    procedure Set_SglAptidao(const Value: WideString); safecall;
    function Get_DesAptidao: WideString; safecall;
    procedure Set_DesAptidao(const Value: WideString); safecall;
    function Get_NumImovelCorrente: WideString; safecall;
    procedure Set_NumImovelCorrente(const Value: WideString); safecall;
    function Get_CodPropriedadeCorrente: Integer; safecall;
    procedure Set_CodPropriedadeCorrente(Value: Integer); safecall;
    function Get_CodPessoCorrente: Integer; safecall;
    procedure Set_CodPessoCorrente(Value: Integer); safecall;
    function Get_NomPessoaCorrente: WideString; safecall;
    procedure Set_NomPessoaCorrente(const Value: WideString); safecall;
    function Get_NumCNPJCPFCorrente: WideString; safecall;
    procedure Set_NumCNPJCPFCorrente(const Value: WideString); safecall;
    function Get_NumCNPJCPFCorrenteFormatado: WideString; safecall;
    procedure Set_NumCNPJCPFCorrenteFormatado(const Value: WideString); safecall;
    function Get_CodPaisOrigem: Integer; safecall;
    procedure Set_CodPaisOrigem(Value: Integer); safecall;
    function Get_NomPaisOrigem: WideString; safecall;
    procedure Set_NomPaisOrigem(const Value: WideString); safecall;
    function Get_DesPropriedadeOrigem: WideString; safecall;
    procedure Set_DesPropriedadeOrigem(const Value: WideString); safecall;
    function Get_DtaAutorizacaoImportacao: TDateTime; safecall;
    procedure Set_DtaAutorizacaoImportacao(Value: TDateTime); safecall;
    function Get_DtaEntradaPais: TDateTime; safecall;
    procedure Set_DtaEntradaPais(Value: TDateTime); safecall;
    function Get_NumGuiaImportacao: WideString; safecall;
    procedure Set_NumGuiaImportacao(const Value: WideString); safecall;
    function Get_NumLicencaImportacao: WideString; safecall;
    procedure Set_NumLicencaImportacao(const Value: WideString); safecall;
    function Get_CodArquivoSisbov: Integer; safecall;
    procedure Set_CodArquivoSisbov(Value: Integer); safecall;
    function Get_DtaGravacaoSisbov: TDateTime; safecall;
    procedure Set_DtaGravacaoSisbov(Value: TDateTime); safecall;
    function Get_NomArquivoSisbov: WideString; safecall;
    procedure Set_NomArquivoSisbov(const Value: WideString); safecall;
    function Get_CodTipoLugar: Integer; safecall;
    procedure Set_CodTipoLugar(Value: Integer); safecall;
    function Get_SglTipoLugar: WideString; safecall;
    procedure Set_SglTipoLugar(const Value: WideString); safecall;
    function Get_DesTipoLugar: WideString; safecall;
    procedure Set_DesTipoLugar(const Value: WideString); safecall;
    function Get_TxtSituacaoSisBov: WideString; safecall;
    procedure Set_TxtSituacaoSisBov(const Value: WideString); safecall;
    function Get_NumTransponder: WideString; safecall;
    procedure Set_NumTransponder(const Value: WideString); safecall;
    function Get_CodTipoIdentificador1: Integer; safecall;
    procedure Set_CodTipoIdentificador1(Value: Integer); safecall;
    function Get_SglTipoIdentificador1: WideString; safecall;
    procedure Set_SglTipoIdentificador1(const Value: WideString); safecall;
    function Get_DesTipoIdentificador1: WideString; safecall;
    procedure Set_DesTipoIdentificador1(const Value: WideString); safecall;
    function Get_CodPosicaoIdentificador1: Integer; safecall;
    procedure Set_CodPosicaoIdentificador1(Value: Integer); safecall;
    function Get_SglPosicaoIdentificador1: WideString; safecall;
    procedure Set_SglPosicaoIdentificador1(const Value: WideString); safecall;
    function Get_DesPosicaoIdentificador1: WideString; safecall;
    procedure Set_DesPosicaoIdentificador1(const Value: WideString); safecall;
    function Get_CodTipoIdentificador2: Integer; safecall;
    procedure Set_CodTipoIdentificador2(Value: Integer); safecall;
    function Get_SglTipoIdentificador2: WideString; safecall;
    procedure Set_SglTipoIdentificador2(const Value: WideString); safecall;
    function Get_DesTipoIdentificador2: WideString; safecall;
    procedure Set_DesTipoIdentificador2(const Value: WideString); safecall;
    function Get_CodPosicaoIdentificador2: Integer; safecall;
    procedure Set_CodPosicaoIdentificador2(Value: Integer); safecall;
    function Get_SglPosicaoIdentificador2: WideString; safecall;
    procedure Set_SglPosicaoIdentificador2(const Value: WideString); safecall;
    function Get_DesPosicaoIdentificador2: WideString; safecall;
    procedure Set_DesPosicaoIdentificador2(const Value: WideString); safecall;
    function Get_CodTipoIdentificador3: Integer; safecall;
    procedure Set_CodTipoIdentificador3(Value: Integer); safecall;
    function Get_SglTipoIdentificador3: WideString; safecall;
    procedure Set_SglTipoIdentificador3(const Value: WideString); safecall;
    function Get_DesTipoIdentificador3: WideString; safecall;
    procedure Set_DesTipoIdentificador3(const Value: WideString); safecall;
    function Get_CodPosicaoIdentificador3: Integer; safecall;
    procedure Set_CodPosicaoIdentificador3(Value: Integer); safecall;
    function Get_SglPosicaoIdentificador3: WideString; safecall;
    procedure Set_SglPosicaoIdentificador3(const Value: WideString); safecall;
    function Get_DesPosicaoIdentificador3: WideString; safecall;
    procedure Set_DesPosicaoIdentificador3(const Value: WideString); safecall;
    function Get_CodTipoIdentificador4: Integer; safecall;
    procedure Set_CodTipoIdentificador4(Value: Integer); safecall;
    function Get_SglTipoIdentificador4: WideString; safecall;
    procedure Set_SglTipoIdentificador4(const Value: WideString); safecall;
    function Get_DesTipoIdentificador4: WideString; safecall;
    procedure Set_DesTipoIdentificador4(const Value: WideString); safecall;
    function Get_CodPosicaoIdentificador4: Integer; safecall;
    procedure Set_CodPosicaoIdentificador4(Value: Integer); safecall;
    function Get_SglPosicaoIdentificador4: WideString; safecall;
    procedure Set_SglPosicaoIdentificador4(const Value: WideString); safecall;
    function Get_DesPosicaoIdentificador4: WideString; safecall;
    procedure Set_DesPosicaoIdentificador4(const Value: WideString); safecall;
    function Get_NomPropriedadeCorrente: WideString; safecall;
    procedure Set_NomPropriedadeCorrente(const Value: WideString); safecall;
    function Get_CodPessoaCorrente: Integer; safecall;
    procedure Set_CodPessoaCorrente(Value: Integer); safecall;
    function Get_IndPessoaSecundaria: WideString; safecall;
    procedure Set_IndPessoaSecundaria(const Value: WideString); safecall;
    function Get_NomAssociacaoRaca: WideString; safecall;
    procedure Set_NomAssociacaoRaca(const Value: WideString); safecall;
    function Get_DesGrauSangue: WideString; safecall;
    procedure Set_DesGrauSangue(const Value: WideString); safecall;
    function Get_NumGta: WideString; safecall;
    procedure Set_NumGta(const Value: WideString); safecall;
    function Get_DtaEmissaoGta: TDateTime; safecall;
    procedure Set_DtaEmissaoGta(Value: TDateTime); safecall;
    function Get_NumNotaFiscal: Integer; safecall;
    procedure Set_NumNotaFiscal(Value: Integer); safecall;
    function Get_NomMunicipioIdentificacao: WideString; safecall;
    procedure Set_NomMunicipioIdentificacao(const Value: WideString); safecall;
    function Get_SglEstadoIdentificacao: WideString; safecall;
    procedure Set_SglEstadoIdentificacao(const Value: WideString); safecall;
    function Get_NomMunicipioNascimento: WideString; safecall;
    procedure Set_NomMunicipioNascimento(const Value: WideString); safecall;
    function Get_SglEstadoNascimento: WideString; safecall;
    procedure Set_SglEstadoNascimento(const Value: WideString); safecall;
    function Get_DesComposicaoRacial: WideString; safecall;
    procedure Set_DesComposicaoRacial(const Value: WideString); safecall;
    function Get_IndAptoCobertura: WideString; safecall;
    procedure Set_IndAptoCobertura(const Value: WideString); safecall;
    function Get_IndCadastroParto: WideString; safecall;
    procedure Set_IndCadastroParto(const Value: WideString); safecall;
    function Get_IndCodSisBovReservado: WideString; safecall;
    procedure Set_IndCodSisBovReservado(const Value: WideString); safecall;
    function Get_CodPessoaTecnico: Integer; safecall;
    procedure Set_CodPessoaTecnico(Value: Integer); safecall;
    function Get_NomPessoaTecnico: WideString; safecall;
    procedure Set_NomPessoaTecnico(const Value: WideString); safecall;
    function Get_CodLocalizacaoNascimento: Integer; safecall;
    procedure Set_CodLocalizacaoNascimento(Value: Integer); safecall;
    function Get_CodLocalizacaoIdentificacao: Integer; safecall;
    procedure Set_CodLocalizacaoIdentificacao(Value: Integer); safecall;
    function Get_CodLocalizacaoCorrente: Integer; safecall;
    procedure Set_CodLocalizacaoCorrente(Value: Integer); safecall;
    function Get_NomPessoaVendedor: WideString; safecall;
    procedure Set_NomPessoaVendedor(const Value: WideString); safecall;
    function Get_NomPessoaProdutor: WideString; safecall;
    procedure Set_NomPessoaProdutor(const Value: WideString); safecall;
    property CodPessoaProdutor: Integer read Get_CodPessoaProdutor write Set_CodPessoaProdutor;
    property CodAnimal: Integer read Get_CodAnimal write Set_CodAnimal;
    property CodFazendaManejo: Integer read Get_CodFazendaManejo write Set_CodFazendaManejo;
    property SglFazendaManejo: WideString read Get_SglFazendaManejo write Set_SglFazendaManejo;
    property CodAnimalManejo: WideString read Get_CodAnimalManejo write Set_CodAnimalManejo;
    property CodPaisSisBov: Integer read Get_CodPaisSisBov write Set_CodPaisSisBov;
    property CodEstadoSISBOV: Integer read Get_CodEstadoSISBOV write Set_CodEstadoSISBOV;
    property CodMicroRegiaoSISBOV: Integer read Get_CodMicroRegiaoSISBOV write Set_CodMicroRegiaoSISBOV;
    property CodAnimalSisbov: Integer read Get_CodAnimalSisbov write Set_CodAnimalSisbov;
    property NumDVSisbov: Integer read Get_NumDVSisbov write Set_NumDVSisbov;
    property NomAnimal: WideString read Get_NomAnimal write Set_NomAnimal;
    property DesApelido: WideString read Get_DesApelido write Set_DesApelido;
    property CodRaca: Integer read Get_CodRaca write Set_CodRaca;
    property SglRaca: WideString read Get_SglRaca write Set_SglRaca;
    property DesRaca: WideString read Get_DesRaca write Set_DesRaca;
    property CodPelagem: Integer read Get_CodPelagem write Set_CodPelagem;
    property SglPelagem: WideString read Get_SglPelagem write Set_SglPelagem;
    property DesPelagem: WideString read Get_DesPelagem write Set_DesPelagem;
    property IndSexo: WideString read Get_IndSexo write Set_IndSexo;
    property CodTipoOrigem: Integer read Get_CodTipoOrigem write Set_CodTipoOrigem;
    property SglTipoOrigem: WideString read Get_SglTipoOrigem write Set_SglTipoOrigem;
    property DesTipoOrigem: WideString read Get_DesTipoOrigem write Set_DesTipoOrigem;
    property DtaNascimento: TDateTime read Get_DtaNascimento write Set_DtaNascimento;
    property DtaCompra: TDateTime read Get_DtaCompra write Set_DtaCompra;
    property CodAnimalPai: Integer read Get_CodAnimalPai write Set_CodAnimalPai;
    property SglFazendaAnimalPai: WideString read Get_SglFazendaAnimalPai write Set_SglFazendaAnimalPai;
    property CodManejoAnimalPai: WideString read Get_CodManejoAnimalPai write Set_CodManejoAnimalPai;
    property CodAnimalMae: Integer read Get_CodAnimalMae write Set_CodAnimalMae;
    property SglFazendaAnimalMae: WideString read Get_SglFazendaAnimalMae write Set_SglFazendaAnimalMae;
    property CodManejoAnimalMae: WideString read Get_CodManejoAnimalMae write Set_CodManejoAnimalMae;
    property CodAnimalReceptor: Integer read Get_CodAnimalReceptor write Set_CodAnimalReceptor;
    property SglFazendaAnimalReceptor: WideString read Get_SglFazendaAnimalReceptor write Set_SglFazendaAnimalReceptor;
    property CodManejoAnimalReceptor: WideString read Get_CodManejoAnimalReceptor write Set_CodManejoAnimalReceptor;
    property IndAnimalCastrado: WideString read Get_IndAnimalCastrado write Set_IndAnimalCastrado;
    property CodRegimeAlimentar: Integer read Get_CodRegimeAlimentar write Set_CodRegimeAlimentar;
    property SglRegimeAlimentar: WideString read Get_SglRegimeAlimentar write Set_SglRegimeAlimentar;
    property DesRegimeAlimentar: WideString read Get_DesRegimeAlimentar write Set_DesRegimeAlimentar;
    property CodCategoriaAnimal: Integer read Get_CodCategoriaAnimal write Set_CodCategoriaAnimal;
    property SglCategoriaAnimal: WideString read Get_SglCategoriaAnimal write Set_SglCategoriaAnimal;
    property DesCategoriaAnimal: WideString read Get_DesCategoriaAnimal write Set_DesCategoriaAnimal;
    property CodFazendaCorrente: Integer read Get_CodFazendaCorrente write Set_CodFazendaCorrente;
    property SglFazendaCorrente: WideString read Get_SglFazendaCorrente write Set_SglFazendaCorrente;
    property NomFazendaCorrente: WideString read Get_NomFazendaCorrente write Set_NomFazendaCorrente;
    property CodLocalCorrente: Integer read Get_CodLocalCorrente write Set_CodLocalCorrente;
    property SglLocalCorrente: WideString read Get_SglLocalCorrente write Set_SglLocalCorrente;
    property DesLocalCorrente: WideString read Get_DesLocalCorrente write Set_DesLocalCorrente;
    property CodLoteCorrente: Integer read Get_CodLoteCorrente write Set_CodLoteCorrente;
    property SglLoteCorrente: WideString read Get_SglLoteCorrente write Set_SglLoteCorrente;
    property DesLoteCorrente: WideString read Get_DesLoteCorrente write Set_DesLoteCorrente;
    property TxtObservacao: WideString read Get_TxtObservacao write Set_TxtObservacao;
    property DtaCadastramento: TDateTime read Get_DtaCadastramento write Set_DtaCadastramento;
    property DtaEfetivacaoCadastro: TDateTime read Get_DtaEfetivacaoCadastro write Set_DtaEfetivacaoCadastro;
    property DtaUltimoEvento: TDateTime read Get_DtaUltimoEvento write Set_DtaUltimoEvento;
    property CodAssociacaoRaca: Integer read Get_CodAssociacaoRaca write Set_CodAssociacaoRaca;
    property SglAssociacaoRaca: WideString read Get_SglAssociacaoRaca write Set_SglAssociacaoRaca;
    property CodGrauSangue: Integer read Get_CodGrauSangue write Set_CodGrauSangue;
    property SglGrauSangue: WideString read Get_SglGrauSangue write Set_SglGrauSangue;
    property NumRGD: WideString read Get_NumRGD write Set_NumRGD;
    property CodAnimalCertificadora: WideString read Get_CodAnimalCertificadora write Set_CodAnimalCertificadora;
    property CodSituacaoSisBov: WideString read Get_CodSituacaoSisBov write Set_CodSituacaoSisBov;
    property DesSituacaoSisbov: WideString read Get_DesSituacaoSisbov write Set_DesSituacaoSisbov;
    property DtaIdentificacaoSisbov: TDateTime read Get_DtaIdentificacaoSisbov write Set_DtaIdentificacaoSisbov;
    property NumImovelIdentificacao: WideString read Get_NumImovelIdentificacao write Set_NumImovelIdentificacao;
    property CodPropriedadeIdentificacao: Integer read Get_CodPropriedadeIdentificacao write Set_CodPropriedadeIdentificacao;
    property NomPropriedadeIdentificacao: WideString read Get_NomPropriedadeIdentificacao write Set_NomPropriedadeIdentificacao;
    property CodFazendaIdentificacao: Integer read Get_CodFazendaIdentificacao write Set_CodFazendaIdentificacao;
    property SglFazendaIdentificacao: WideString read Get_SglFazendaIdentificacao write Set_SglFazendaIdentificacao;
    property NomFazendaIdentificacao: WideString read Get_NomFazendaIdentificacao write Set_NomFazendaIdentificacao;
    property NumImovelNascimento: WideString read Get_NumImovelNascimento write Set_NumImovelNascimento;
    property CodPropriedadeNascimento: Integer read Get_CodPropriedadeNascimento write Set_CodPropriedadeNascimento;
    property NomPropriedadeNascimento: WideString read Get_NomPropriedadeNascimento write Set_NomPropriedadeNascimento;
    property CodFazendaNascimento: Integer read Get_CodFazendaNascimento write Set_CodFazendaNascimento;
    property SglFazendaNascimento: WideString read Get_SglFazendaNascimento write Set_SglFazendaNascimento;
    property NomFazendaNascimento: WideString read Get_NomFazendaNascimento write Set_NomFazendaNascimento;
    property CodPessoaSecundariaCriador: Integer read Get_CodPessoaSecundariaCriador write Set_CodPessoaSecundariaCriador;
    property NomPessoaSecundariaCriador: WideString read Get_NomPessoaSecundariaCriador write Set_NomPessoaSecundariaCriador;
    property CodEspecie: Integer read Get_CodEspecie write Set_CodEspecie;
    property SglEspecie: WideString read Get_SglEspecie write Set_SglEspecie;
    property DesEspecie: WideString read Get_DesEspecie write Set_DesEspecie;
    property CodAptidao: Integer read Get_CodAptidao write Set_CodAptidao;
    property SglAptidao: WideString read Get_SglAptidao write Set_SglAptidao;
    property DesAptidao: WideString read Get_DesAptidao write Set_DesAptidao;
    property NumImovelCorrente: WideString read Get_NumImovelCorrente write Set_NumImovelCorrente;
    property CodPropriedadeCorrente: Integer read Get_CodPropriedadeCorrente write Set_CodPropriedadeCorrente;
    property CodPessoCorrente: Integer read Get_CodPessoCorrente write Set_CodPessoCorrente;
    property NomPessoaCorrente: WideString read Get_NomPessoaCorrente write Set_NomPessoaCorrente;
    property NumCNPJCPFCorrente: WideString read Get_NumCNPJCPFCorrente write Set_NumCNPJCPFCorrente;
    property NumCNPJCPFCorrenteFormatado: WideString read Get_NumCNPJCPFCorrenteFormatado write Set_NumCNPJCPFCorrenteFormatado;
    property CodPaisOrigem: Integer read Get_CodPaisOrigem write Set_CodPaisOrigem;
    property NomPaisOrigem: WideString read Get_NomPaisOrigem write Set_NomPaisOrigem;
    property DesPropriedadeOrigem: WideString read Get_DesPropriedadeOrigem write Set_DesPropriedadeOrigem;
    property DtaAutorizacaoImportacao: TDateTime read Get_DtaAutorizacaoImportacao write Set_DtaAutorizacaoImportacao;
    property DtaEntradaPais: TDateTime read Get_DtaEntradaPais write Set_DtaEntradaPais;
    property NumGuiaImportacao: WideString read Get_NumGuiaImportacao write Set_NumGuiaImportacao;
    property NumLicencaImportacao: WideString read Get_NumLicencaImportacao write Set_NumLicencaImportacao;
    property CodArquivoSisbov: Integer read Get_CodArquivoSisbov write Set_CodArquivoSisbov;
    property DtaGravacaoSisbov: TDateTime read Get_DtaGravacaoSisbov write Set_DtaGravacaoSisbov;
    property NomArquivoSisbov: WideString read Get_NomArquivoSisbov write Set_NomArquivoSisbov;
    property CodTipoLugar: Integer read Get_CodTipoLugar write Set_CodTipoLugar;
    property SglTipoLugar: WideString read Get_SglTipoLugar write Set_SglTipoLugar;
    property DesTipoLugar: WideString read Get_DesTipoLugar write Set_DesTipoLugar;
    property TxtSituacaoSisBov: WideString read Get_TxtSituacaoSisBov write Set_TxtSituacaoSisBov;
    property NumTransponder: WideString read Get_NumTransponder write Set_NumTransponder;
    property CodTipoIdentificador1: Integer read Get_CodTipoIdentificador1 write Set_CodTipoIdentificador1;
    property SglTipoIdentificador1: WideString read Get_SglTipoIdentificador1 write Set_SglTipoIdentificador1;
    property DesTipoIdentificador1: WideString read Get_DesTipoIdentificador1 write Set_DesTipoIdentificador1;
    property CodPosicaoIdentificador1: Integer read Get_CodPosicaoIdentificador1 write Set_CodPosicaoIdentificador1;
    property SglPosicaoIdentificador1: WideString read Get_SglPosicaoIdentificador1 write Set_SglPosicaoIdentificador1;
    property DesPosicaoIdentificador1: WideString read Get_DesPosicaoIdentificador1 write Set_DesPosicaoIdentificador1;
    property CodTipoIdentificador2: Integer read Get_CodTipoIdentificador2 write Set_CodTipoIdentificador2;
    property SglTipoIdentificador2: WideString read Get_SglTipoIdentificador2 write Set_SglTipoIdentificador2;
    property DesTipoIdentificador2: WideString read Get_DesTipoIdentificador2 write Set_DesTipoIdentificador2;
    property CodPosicaoIdentificador2: Integer read Get_CodPosicaoIdentificador2 write Set_CodPosicaoIdentificador2;
    property SglPosicaoIdentificador2: WideString read Get_SglPosicaoIdentificador2 write Set_SglPosicaoIdentificador2;
    property DesPosicaoIdentificador2: WideString read Get_DesPosicaoIdentificador2 write Set_DesPosicaoIdentificador2;
    property CodTipoIdentificador3: Integer read Get_CodTipoIdentificador3 write Set_CodTipoIdentificador3;
    property SglTipoIdentificador3: WideString read Get_SglTipoIdentificador3 write Set_SglTipoIdentificador3;
    property DesTipoIdentificador3: WideString read Get_DesTipoIdentificador3 write Set_DesTipoIdentificador3;
    property CodPosicaoIdentificador3: Integer read Get_CodPosicaoIdentificador3 write Set_CodPosicaoIdentificador3;
    property SglPosicaoIdentificador3: WideString read Get_SglPosicaoIdentificador3 write Set_SglPosicaoIdentificador3;
    property DesPosicaoIdentificador3: WideString read Get_DesPosicaoIdentificador3 write Set_DesPosicaoIdentificador3;
    property CodTipoIdentificador4: Integer read Get_CodTipoIdentificador4 write Set_CodTipoIdentificador4;
    property SglTipoIdentificador4: WideString read Get_SglTipoIdentificador4 write Set_SglTipoIdentificador4;
    property DesTipoIdentificador4: WideString read Get_DesTipoIdentificador4 write Set_DesTipoIdentificador4;
    property CodPosicaoIdentificador4: Integer read Get_CodPosicaoIdentificador4 write Set_CodPosicaoIdentificador4;
    property SglPosicaoIdentificador4: WideString read Get_SglPosicaoIdentificador4 write Set_SglPosicaoIdentificador4;
    property DesPosicaoIdentificador4: WideString read Get_DesPosicaoIdentificador4 write Set_DesPosicaoIdentificador4;
    property NomPropriedadeCorrente: WideString read Get_NomPropriedadeCorrente write Set_NomPropriedadeCorrente;
    property CodPessoaCorrente: Integer read Get_CodPessoaCorrente write Set_CodPessoaCorrente;
    property IndPessoaSecundaria: WideString read Get_IndPessoaSecundaria write Set_IndPessoaSecundaria;
    property NomAssociacaoRaca: WideString read Get_NomAssociacaoRaca write Set_NomAssociacaoRaca;
    property DesGrauSangue: WideString read Get_DesGrauSangue write Set_DesGrauSangue;
    property NumGta: WideString read Get_NumGta write Set_NumGta;
    property DtaEmissaoGta: TDateTime read Get_DtaEmissaoGta write Set_DtaEmissaoGta;
    property NumNotaFiscal: Integer read Get_NumNotaFiscal write Set_NumNotaFiscal;
    property NomMunicipioIdentificacao: WideString read Get_NomMunicipioIdentificacao write Set_NomMunicipioIdentificacao;
    property SglEstadoIdentificacao: WideString read Get_SglEstadoIdentificacao write Set_SglEstadoIdentificacao;
    property NomMunicipioNascimento: WideString read Get_NomMunicipioNascimento write Set_NomMunicipioNascimento;
    property SglEstadoNascimento: WideString read Get_SglEstadoNascimento write Set_SglEstadoNascimento;
    property DesComposicaoRacial: WideString read Get_DesComposicaoRacial write Set_DesComposicaoRacial;
    property IndAptoCobertura: WideString read Get_IndAptoCobertura write Set_IndAptoCobertura;
    property IndCadastroParto: WideString read Get_IndCadastroParto write Set_IndCadastroParto;
    property IndCodSisBovReservado: WideString read Get_IndCodSisBovReservado write Set_IndCodSisBovReservado;
    property CodPessoaTecnico: Integer read Get_CodPessoaTecnico write Set_CodPessoaTecnico;
    property NomPessoaTecnico: WideString read Get_NomPessoaTecnico write Set_NomPessoaTecnico;
    property CodLocalizacaoNascimento: Integer read Get_CodLocalizacaoNascimento write Set_CodLocalizacaoNascimento;
    property CodLocalizacaoIdentificacao: Integer read Get_CodLocalizacaoIdentificacao write Set_CodLocalizacaoIdentificacao;
    property CodLocalizacaoCorrente: Integer read Get_CodLocalizacaoCorrente write Set_CodLocalizacaoCorrente;
    property NomPessoaVendedor: WideString read Get_NomPessoaVendedor write Set_NomPessoaVendedor;
    property NomPessoaProdutor: WideString read Get_NomPessoaProdutor write Set_NomPessoaProdutor;
  end;

// *********************************************************************//
// DispIntf:  IAnimalDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BA7B9AA0-9F49-11D6-A34A-BFB2F9F3A223}
// *********************************************************************//
  IAnimalDisp = dispinterface
    ['{BA7B9AA0-9F49-11D6-A34A-BFB2F9F3A223}']
    property CodPessoaProdutor: Integer dispid 1;
    property CodAnimal: Integer dispid 2;
    property CodFazendaManejo: Integer dispid 3;
    property SglFazendaManejo: WideString dispid 4;
    property CodAnimalManejo: WideString dispid 5;
    property CodPaisSisBov: Integer dispid 6;
    property CodEstadoSISBOV: Integer dispid 7;
    property CodMicroRegiaoSISBOV: Integer dispid 8;
    property CodAnimalSisbov: Integer dispid 9;
    property NumDVSisbov: Integer dispid 10;
    property NomAnimal: WideString dispid 14;
    property DesApelido: WideString dispid 15;
    property CodRaca: Integer dispid 16;
    property SglRaca: WideString dispid 17;
    property DesRaca: WideString dispid 18;
    property CodPelagem: Integer dispid 19;
    property SglPelagem: WideString dispid 20;
    property DesPelagem: WideString dispid 21;
    property IndSexo: WideString dispid 22;
    property CodTipoOrigem: Integer dispid 23;
    property SglTipoOrigem: WideString dispid 24;
    property DesTipoOrigem: WideString dispid 25;
    property DtaNascimento: TDateTime dispid 26;
    property DtaCompra: TDateTime dispid 27;
    property CodAnimalPai: Integer dispid 28;
    property SglFazendaAnimalPai: WideString dispid 29;
    property CodManejoAnimalPai: WideString dispid 30;
    property CodAnimalMae: Integer dispid 31;
    property SglFazendaAnimalMae: WideString dispid 32;
    property CodManejoAnimalMae: WideString dispid 33;
    property CodAnimalReceptor: Integer dispid 34;
    property SglFazendaAnimalReceptor: WideString dispid 35;
    property CodManejoAnimalReceptor: WideString dispid 36;
    property IndAnimalCastrado: WideString dispid 37;
    property CodRegimeAlimentar: Integer dispid 38;
    property SglRegimeAlimentar: WideString dispid 39;
    property DesRegimeAlimentar: WideString dispid 40;
    property CodCategoriaAnimal: Integer dispid 41;
    property SglCategoriaAnimal: WideString dispid 42;
    property DesCategoriaAnimal: WideString dispid 43;
    property CodFazendaCorrente: Integer dispid 44;
    property SglFazendaCorrente: WideString dispid 45;
    property NomFazendaCorrente: WideString dispid 46;
    property CodLocalCorrente: Integer dispid 47;
    property SglLocalCorrente: WideString dispid 48;
    property DesLocalCorrente: WideString dispid 49;
    property CodLoteCorrente: Integer dispid 50;
    property SglLoteCorrente: WideString dispid 51;
    property DesLoteCorrente: WideString dispid 52;
    property TxtObservacao: WideString dispid 53;
    property DtaCadastramento: TDateTime dispid 54;
    property DtaEfetivacaoCadastro: TDateTime dispid 55;
    property DtaUltimoEvento: TDateTime dispid 56;
    property CodAssociacaoRaca: Integer dispid 57;
    property SglAssociacaoRaca: WideString dispid 59;
    property CodGrauSangue: Integer dispid 60;
    property SglGrauSangue: WideString dispid 61;
    property NumRGD: WideString dispid 64;
    property CodAnimalCertificadora: WideString dispid 65;
    property CodSituacaoSisBov: WideString dispid 66;
    property DesSituacaoSisbov: WideString dispid 67;
    property DtaIdentificacaoSisbov: TDateTime dispid 68;
    property NumImovelIdentificacao: WideString dispid 69;
    property CodPropriedadeIdentificacao: Integer dispid 70;
    property NomPropriedadeIdentificacao: WideString dispid 71;
    property CodFazendaIdentificacao: Integer dispid 72;
    property SglFazendaIdentificacao: WideString dispid 73;
    property NomFazendaIdentificacao: WideString dispid 74;
    property NumImovelNascimento: WideString dispid 75;
    property CodPropriedadeNascimento: Integer dispid 76;
    property NomPropriedadeNascimento: WideString dispid 77;
    property CodFazendaNascimento: Integer dispid 78;
    property SglFazendaNascimento: WideString dispid 79;
    property NomFazendaNascimento: WideString dispid 80;
    property CodPessoaSecundariaCriador: Integer dispid 81;
    property NomPessoaSecundariaCriador: WideString dispid 82;
    property CodEspecie: Integer dispid 85;
    property SglEspecie: WideString dispid 86;
    property DesEspecie: WideString dispid 87;
    property CodAptidao: Integer dispid 88;
    property SglAptidao: WideString dispid 89;
    property DesAptidao: WideString dispid 90;
    property NumImovelCorrente: WideString dispid 91;
    property CodPropriedadeCorrente: Integer dispid 92;
    property CodPessoCorrente: Integer dispid 93;
    property NomPessoaCorrente: WideString dispid 94;
    property NumCNPJCPFCorrente: WideString dispid 95;
    property NumCNPJCPFCorrenteFormatado: WideString dispid 96;
    property CodPaisOrigem: Integer dispid 99;
    property NomPaisOrigem: WideString dispid 100;
    property DesPropriedadeOrigem: WideString dispid 101;
    property DtaAutorizacaoImportacao: TDateTime dispid 102;
    property DtaEntradaPais: TDateTime dispid 103;
    property NumGuiaImportacao: WideString dispid 104;
    property NumLicencaImportacao: WideString dispid 105;
    property CodArquivoSisbov: Integer dispid 106;
    property DtaGravacaoSisbov: TDateTime dispid 107;
    property NomArquivoSisbov: WideString dispid 108;
    property CodTipoLugar: Integer dispid 11;
    property SglTipoLugar: WideString dispid 58;
    property DesTipoLugar: WideString dispid 62;
    property TxtSituacaoSisBov: WideString dispid 12;
    property NumTransponder: WideString dispid 13;
    property CodTipoIdentificador1: Integer dispid 63;
    property SglTipoIdentificador1: WideString dispid 83;
    property DesTipoIdentificador1: WideString dispid 84;
    property CodPosicaoIdentificador1: Integer dispid 97;
    property SglPosicaoIdentificador1: WideString dispid 98;
    property DesPosicaoIdentificador1: WideString dispid 109;
    property CodTipoIdentificador2: Integer dispid 110;
    property SglTipoIdentificador2: WideString dispid 111;
    property DesTipoIdentificador2: WideString dispid 112;
    property CodPosicaoIdentificador2: Integer dispid 113;
    property SglPosicaoIdentificador2: WideString dispid 114;
    property DesPosicaoIdentificador2: WideString dispid 115;
    property CodTipoIdentificador3: Integer dispid 116;
    property SglTipoIdentificador3: WideString dispid 117;
    property DesTipoIdentificador3: WideString dispid 118;
    property CodPosicaoIdentificador3: Integer dispid 119;
    property SglPosicaoIdentificador3: WideString dispid 120;
    property DesPosicaoIdentificador3: WideString dispid 121;
    property CodTipoIdentificador4: Integer dispid 122;
    property SglTipoIdentificador4: WideString dispid 123;
    property DesTipoIdentificador4: WideString dispid 124;
    property CodPosicaoIdentificador4: Integer dispid 125;
    property SglPosicaoIdentificador4: WideString dispid 126;
    property DesPosicaoIdentificador4: WideString dispid 127;
    property NomPropriedadeCorrente: WideString dispid 128;
    property CodPessoaCorrente: Integer dispid 129;
    property IndPessoaSecundaria: WideString dispid 131;
    property NomAssociacaoRaca: WideString dispid 132;
    property DesGrauSangue: WideString dispid 133;
    property NumGta: WideString dispid 130;
    property DtaEmissaoGta: TDateTime dispid 134;
    property NumNotaFiscal: Integer dispid 135;
    property NomMunicipioIdentificacao: WideString dispid 136;
    property SglEstadoIdentificacao: WideString dispid 137;
    property NomMunicipioNascimento: WideString dispid 138;
    property SglEstadoNascimento: WideString dispid 139;
    property DesComposicaoRacial: WideString dispid 140;
    property IndAptoCobertura: WideString dispid 141;
    property IndCadastroParto: WideString dispid 142;
    property IndCodSisBovReservado: WideString dispid 143;
    property CodPessoaTecnico: Integer dispid 201;
    property NomPessoaTecnico: WideString dispid 202;
    property CodLocalizacaoNascimento: Integer dispid 203;
    property CodLocalizacaoIdentificacao: Integer dispid 204;
    property CodLocalizacaoCorrente: Integer dispid 205;
    property NomPessoaVendedor: WideString dispid 206;
    property NomPessoaProdutor: WideString dispid 207;
  end;

// *********************************************************************//
// Interface: IAnimais
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BA7B9AA4-9F49-11D6-A34A-BFB2F9F3A223}
// *********************************************************************//
  IAnimais = interface(IDispatch)
    ['{BA7B9AA4-9F49-11D6-A34A-BFB2F9F3A223}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Get_Animal: IAnimal; safecall;
    function InserirNascido(CodFazendaManejo: Integer; const CodAnimalManejo: WideString; 
                            const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                            CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                            CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                            const CodSituacaoSisBov: WideString; DtaIdentificacaoSisbov: TDateTime; 
                            const NumImovelIdentificacao: WideString; 
                            CodPropriedadeIdentificacao: Integer; CodFazendaIdentificacao: Integer; 
                            DtaNascimento: TDateTime; CodFazendaNascimento: Integer; 
                            const NomAnimal: WideString; const DesApelido: WideString; 
                            CodAssociacaoRaca: Integer; CodGrauSangue: Integer; 
                            const NumRGD: WideString; const NumTransponder: WideString; 
                            CodTipoIdentificador1: Integer; CodPosicaoIdentificador1: Integer; 
                            CodTipoIdentificador2: Integer; CodPosicaoIdentificador2: Integer; 
                            CodTipoIdentificador3: Integer; CodPosicaoIdentificador3: Integer; 
                            CodTipoIdentificador4: Integer; CodPosicaoIdentificador4: Integer; 
                            CodEspecie: Integer; CodAptidao: Integer; CodRaca: Integer; 
                            CodPelagem: Integer; const IndSexo: WideString; 
                            CodFazendaManejoPai: Integer; const CodAnimalPai: WideString; 
                            CodFazendaManejoMae: Integer; const CodAnimalMae: WideString; 
                            CodFazendaManejoReceptor: Integer; const CodAnimalReceptor: WideString; 
                            const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                            CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                            CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                            CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                            const NumCNPJCPFCorrente: WideString; CodPessoaCorrente: Integer; 
                            const TxtObservacao: WideString; 
                            const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                            const numCNPJCPFTecnico: WideString): Integer; safecall;
    function Get_AnimalResumido: IAnimalResumido; safecall;
    function Get_Filiacao: IFiliacao; safecall;
    function Get_Registro: IRegistro; safecall;
    function Buscar(CodAnimal: Integer; const CodAnimalSisbov: WideString; 
                    const IndAnimalDoProprioProdutor: WideString; const IndAnimalVendido: WideString): Integer; safecall;
    function InserirComprado(CodFazendaManejo: Integer; const CodAnimalManejo: WideString; 
                             const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                             CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                             CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                             const CodSituacaoSisBov: WideString; 
                             DtaIdentificacaoSisbov: TDateTime; 
                             const NumImovelIdentificacao: WideString; 
                             CodPropriedadeIdentificacao: Integer; 
                             CodFazendaIdentificacao: Integer; DtaNascimento: TDateTime; 
                             const NumImovelNascimento: WideString; 
                             CodPropriedadeNascimento: Integer; DtaCompra: TDateTime; 
                             CodPessoaSecundariaCriador: Integer; const NomAnimal: WideString; 
                             const DesApelido: WideString; CodAssociacaoRaca: Integer; 
                             CodGrauSangue: Integer; const NumRGD: WideString; 
                             const NumTransponder: WideString; CodTipoIdentificador1: Integer; 
                             CodPosicaoIdentificador1: Integer; CodTipoIdentificador2: Integer; 
                             CodPosicaoIdentificador2: Integer; CodTipoIdentificador3: Integer; 
                             CodPosicaoIdentificador3: Integer; CodTipoIdentificador4: Integer; 
                             CodPosicaoIdentificador4: Integer; CodEspecie: Integer; 
                             CodAptidao: Integer; CodRaca: Integer; CodPelagem: Integer; 
                             const IndSexo: WideString; CodFazendaManejoPai: Integer; 
                             const CodAnimalPai: WideString; CodFazendaManejoMae: Integer; 
                             const CodAnimalMae: WideString; CodFazendaManejoReceptor: Integer; 
                             const CodAnimalReceptor: WideString; 
                             const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                             CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                             CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                             CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                             const NumCNPJCPFCorrente: WideString; CodPessoaCorrente: Integer; 
                             const TxtObservacao: WideString; const NumGta: WideString; 
                             DtaEmissaoGta: TDateTime; NumNotaFiscal: Integer; 
                             const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                             const numCNPJCPFTecnico: WideString): Integer; safecall;
    function InserirImportado(CodFazendaManejo: Integer; const CodAnimalManejo: WideString; 
                              const CodAnimalCertificadora: WideString; 
                              const CodSituacaoSisBov: WideString; DtaNascimento: TDateTime; 
                              DtaCompra: TDateTime; CodPessoaSecundariaCriador: Integer; 
                              const NomAnimal: WideString; const DesApelido: WideString; 
                              CodAssociacaoRaca: Integer; CodGrauSangue: Integer; 
                              const NumRGD: WideString; const NumTransponder: WideString; 
                              CodTipoIdentificador1: Integer; CodPosicaoIdentificador1: Integer; 
                              CodTipoIdentificador2: Integer; CodPosicaoIdentificador2: Integer; 
                              CodTipoIdentificador3: Integer; CodPosicaoIdentificador3: Integer; 
                              CodTipoIdentificador4: Integer; CodPosicaoIdentificador4: Integer; 
                              CodEspecie: Integer; CodAptidao: Integer; CodRaca: Integer; 
                              CodPelagem: Integer; const IndSexo: WideString; 
                              CodFazendaManejoPai: Integer; const CodAnimalPai: WideString; 
                              CodFazendaManejoMae: Integer; const CodAnimalMae: WideString; 
                              CodFazendaManejoReceptor: Integer; 
                              const CodAnimalReceptor: WideString; 
                              const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                              CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                              CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                              CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                              const NumCNPJCPFCorrente: WideString; CodPessoaCorrente: Integer; 
                              CodPaisOrigem: Integer; const DesPropriedadeOrigem: WideString; 
                              DtaAutorizacaoImportacao: TDateTime; DtaEntradaPais: TDateTime; 
                              const NumGuiaImportacao: WideString; 
                              const NumLicencaImportacao: WideString; 
                              const TxtObservacao: WideString; 
                              const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                              const numCNPJCPFTecnico: WideString): Integer; safecall;
    function InserirExterno(const CodAnimalManejo: WideString; 
                            const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                            CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                            CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                            const CodSituacaoSisBov: WideString; DtaNascimento: TDateTime; 
                            const NomAnimal: WideString; const DesApelido: WideString; 
                            CodAssociacaoRaca: Integer; CodGrauSangue: Integer; 
                            const NumRGD: WideString; CodEspecie: Integer; CodAptidao: Integer; 
                            CodRaca: Integer; CodPelagem: Integer; const IndSexo: WideString; 
                            CodFazendaManejoPai: Integer; const CodAnimalPai: WideString; 
                            CodFazendaManejoMae: Integer; const CodAnimalMae: WideString; 
                            CodFazendaManejoReceptor: Integer; const CodAnimalReceptor: WideString; 
                            const TxtObservacao: WideString; 
                            const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                            const numCNPJCPFTecnico: WideString): Integer; safecall;
    function BuscarResumido(CodAnimal: Integer; const CodAnimalSisbov: WideString): Integer; safecall;
    function Pesquisar(CodFazendaManejo: Integer; const CodManejoInicio: WideString; 
                       const CodManejoFim: WideString; const CodAnimalCertificadora: WideString; 
                       CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                       CodMicroRegiaoSISBOV: Integer; CodSisBovInicio: Integer; 
                       CodSisBovFim: Integer; const CodSituacaoSisBov: WideString; 
                       DtaNascimentoInicio: TDateTime; DtaNascimentoFim: TDateTime; 
                       CodFazendaNascimento: Integer; DtaCompraInicio: TDateTime; 
                       DtaCompraFim: TDateTime; CodPessoaSecundariaCriador: Integer; 
                       const NomAnimal: WideString; const DesApelido: WideString; 
                       CodAptidao: Integer; const CodRaca: WideString; const IndSexo: WideString; 
                       const CodOrigem: WideString; const SglFazendaPai: WideString; 
                       const CodAnimalPai: WideString; const DesApelidoPai: WideString; 
                       const SglFazendaMae: WideString; const CodAnimalMae: WideString; 
                       const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                       const CodCategoria: WideString; const IndConsiderarExterno: WideString; 
                       CodAssociacao: Integer; CodGrauSangue: Integer; const NumRGD: WideString; 
                       CodTipoLugar: Integer; const CodLocal: WideString; 
                       const CodLote: WideString; CodFazendaCorrente: Integer; 
                       const NumImovelCorrente: WideString; CodLocalizacaoCorrente: Integer; 
                       const NumCPFCNPJCorrente: WideString; 
                       const IndCadastroEfetivado: WideString; const CodOrdenacao: WideString; 
                       CodEvento: Integer; const IndEventoAplicado: WideString; 
                       const IndAnimaisEvento: WideString; CodReprodutorMultiplo: Integer; 
                       const IndTrazerComposicaoRacial: WideString; 
                       const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                       QtdCompRacialIncio1: Double; QtdCompRacialFim1: Double; 
                       const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                       QtdCompRacialInicio2: Double; QtdCompRacialFim2: Double; 
                       const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                       QtdCompRacialInicio3: Double; QtdCompRacialFim3: Double; 
                       const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                       QtdCompRacialInicio4: Double; QtdCompRacialFim4: Double; 
                       const IndAptoCobertura: WideString; const IndAutenticacao: WideString; 
                       CodEstacaoMonta: Integer; const IndAnimalSemTecnico: WideString; 
                       CodPessoaTecnico: Integer): Integer; safecall;
    function AlterarNascido(CodAnimal: Integer; CodFazendaManejo: Integer; 
                            const CodAnimalManejo: WideString; 
                            const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                            CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                            CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                            DtaIdentificacaoSisbov: TDateTime; 
                            const NumImovelIdentificacao: WideString; 
                            CodPropriedadeIdentificacao: Integer; CodFazendaIdentificacao: Integer; 
                            DtaNascimento: TDateTime; CodFazendaNascimento: Integer; 
                            const NomAnimal: WideString; const DesApelido: WideString; 
                            const NumTransponder: WideString; CodTipoIdentificador1: Integer; 
                            CodPosicaoIdentificador1: Integer; CodTipoIdentificador2: Integer; 
                            CodPosicaoIdentificador2: Integer; CodTipoIdentificador3: Integer; 
                            CodPosicaoIdentificador3: Integer; CodTipoIdentificador4: Integer; 
                            CodPosicaoIdentificador4: Integer; CodRaca: Integer; 
                            CodPelagem: Integer; const IndAnimalCastrado: WideString; 
                            CodRegimeAlimentar: Integer; CodCategoriaAnimal: Integer; 
                            CodTipoLugar: Integer; CodLoteCorrente: Integer; 
                            CodLocalCorrente: Integer; CodFazendaCorrente: Integer; 
                            CodPropriedadeCorrente: Integer; const NumCNPJCPFCorrente: WideString; 
                            CodPessoaCorrente: Integer; const TxtObservacao: WideString; 
                            const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                            const IndSexo: WideString): Integer; safecall;
    function AlterarComprado(CodAnimal: Integer; CodFazendaManejo: Integer; 
                             const CodAnimalManejo: WideString; 
                             const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                             CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                             CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                             DtaIdentificacaoSisbov: TDateTime; 
                             const NumImovelIdentificacao: WideString; 
                             CodPropriedadeIdentificacao: Integer; 
                             CodFazendaIdentificacao: Integer; DtaNascimento: TDateTime; 
                             const NumImovelNascimento: WideString; 
                             CodPropriedadeNascimento: Integer; DtaCompra: TDateTime; 
                             CodPessoaSecundariaCriador: Integer; const NomAnimal: WideString; 
                             const DesApelido: WideString; const NumTransponder: WideString; 
                             CodTipoIdentificador1: Integer; CodPosicaoIdentificador1: Integer; 
                             CodTipoIdentificador2: Integer; CodPosicaoIdentificador2: Integer; 
                             CodTipoIdentificador3: Integer; CodPosicaoIdentificador3: Integer; 
                             CodTipoIdentificador4: Integer; CodPosicaoIdentificador4: Integer; 
                             CodRaca: Integer; CodPelagem: Integer; 
                             const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                             CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                             CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                             CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                             const NumCNPJCPFCorrente: WideString; CodPessoaCorrente: Integer; 
                             const TxtObservacao: WideString; const NumGta: WideString; 
                             DtaEmissaoGta: TDateTime; NumNotaFiscal: Integer; 
                             const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                             const IndSexo: WideString): Integer; safecall;
    function AlterarImportado(CodAnimal: Integer; CodFazendaManejo: Integer; 
                              const CodAnimalManejo: WideString; 
                              const CodAnimalCertificadora: WideString; DtaNascimento: TDateTime; 
                              DtaCompra: TDateTime; CodPessoaSecundariaCriador: Integer; 
                              const NomAnimal: WideString; const DesApelido: WideString; 
                              const NumTransponder: WideString; CodTipoIdentificador1: Integer; 
                              CodPosicaoIdentificador1: Integer; CodTipoIdentificador2: Integer; 
                              CodPosicaoIdentificador2: Integer; CodTipoIdentificador3: Integer; 
                              CodPosicaoIdentificador3: Integer; CodTipoIdentificador4: Integer; 
                              CodPosicaoIdentificador4: Integer; CodRaca: Integer; 
                              CodPelagem: Integer; const IndAnimalCastrado: WideString; 
                              CodRegimeAlimentar: Integer; CodCategoriaAnimal: Integer; 
                              CodTipoLugar: Integer; CodLoteCorrente: Integer; 
                              CodLocalCorrente: Integer; CodFazendaCorrente: Integer; 
                              CodPropriedadeCorrente: Integer; 
                              const NumCNPJCPFCorrente: WideString; CodPessoaCorrente: Integer; 
                              CodPaisOrigem: Integer; const DesPropriedadeOrigem: WideString; 
                              DtaAutorizacaoImportacao: TDateTime; DtaEntradaPais: TDateTime; 
                              const NumGuiaImportacao: WideString; 
                              const NumLicencaImportacao: WideString; 
                              const TxtObservacao: WideString; 
                              const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                              const IndSexo: WideString): Integer; safecall;
    function AlterarExterno(CodAnimal: Integer; const CodAnimalManejo: WideString; 
                            const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                            CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                            CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                            DtaNascimento: TDateTime; const NomAnimal: WideString; 
                            const DesApelido: WideString; CodRaca: Integer; CodPelagem: Integer; 
                            const TxtObservacao: WideString; 
                            const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                            const IndSexo: WideString): Integer; safecall;
    function BuscarFiliacao(CodAnimal: Integer): Integer; safecall;
    function BuscarRegistro(CodAnimal: Integer): Integer; safecall;
    function AlterarFiliacao(CodAnimalFilho: Integer; CodAnimal: Integer; 
                             CodFazendaManejo: Integer; const CodAnimalManejo: WideString; 
                             const CodAnimalCertificadora: WideString; 
                             const CodTipoFiliacao: WideString): Integer; safecall;
    function AlterarRegistro(CodAnimal: Integer; CodAssociacaoRaca: Integer; 
                             CodGrauSangue: Integer; const NumRGD: WideString): Integer; safecall;
    function EfetivarCadastro(CodAnimal: Integer): Integer; safecall;
    function CancelarEfetivacao(CodAnimal: Integer): Integer; safecall;
    function InserirNascidos(QtdAnimais: Integer; CodFazendaManejo: Integer; 
                             const TxtPrefixoAnimalManejo: WideString; 
                             const CodInicialAnimalManejo: WideString; 
                             const TxtSufixoAnimalManejo: WideString; 
                             const TxtPrefixoAnimalCertificadora: WideString; 
                             const CodInicialAnimalCertificadora: WideString; 
                             const TxtSufixoAnimalCertificadora: WideString; 
                             CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                             CodMicroRegiaoSISBOV: Integer; CodInicialAnimalSisbov: Integer; 
                             const CodSituacaoSisBov: WideString; 
                             DtaIdentificacaoSisbov: TDateTime; 
                             const NumImovelIdentificacao: WideString; 
                             CodPropriedadeIdentificacao: Integer; 
                             CodFazendaIdentificacao: Integer; DtaNascimento: TDateTime; 
                             CodFazendaNascimento: Integer; CodTipoIdentificador1: Integer; 
                             CodPosicaoIdentificador1: Integer; CodTipoIdentificador2: Integer; 
                             CodPosicaoIdentificador2: Integer; CodTipoIdentificador3: Integer; 
                             CodPosicaoIdentificador3: Integer; CodTipoIdentificador4: Integer; 
                             CodPosicaoIdentificador4: Integer; CodEspecie: Integer; 
                             CodAptidao: Integer; CodRaca: Integer; CodPelagem: Integer; 
                             const IndSexo: WideString; const IndAnimalCastrado: WideString; 
                             CodRegimeAlimentar: Integer; CodCategoriaAnimal: Integer; 
                             CodTipoLugar: Integer; CodLoteCorrente: Integer; 
                             CodLocalCorrente: Integer; CodFazendaCorrente: Integer; 
                             CodPropriedadeCorrente: Integer; const NumCNPJCPFCorrente: WideString; 
                             CodPessoaCorrente: Integer; const TxtObservacao: WideString; 
                             const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                             const numCNPJCPFTecnico: WideString): Integer; safecall;
    function InserirComprados(QtdAnimais: Integer; CodFazendaManejo: Integer; 
                              const TxtPrefixoAnimalManejo: WideString; 
                              const CodInicialAnimalManejo: WideString; 
                              const TxtSufixoAnimalManejo: WideString; 
                              const TxtPrefixoAnimalCertificadora: WideString; 
                              const CodInicialAnimalCertificadora: WideString; 
                              const TxtSufixoAnimalCertificadora: WideString; 
                              CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                              CodMicroRegiaoSISBOV: Integer; CodInicialAnimalSisbov: Integer; 
                              const CodSituacaoSisBov: WideString; 
                              DtaIdentificacaoSisbov: TDateTime; 
                              const NumImovelIdentificacao: WideString; 
                              CodPropriedadeIdentificacao: Integer; 
                              CodFazendaIdentificacao: Integer; DtaNascimento: TDateTime; 
                              const NumImovelNascimento: WideString; 
                              CodPropriedadeNascimento: Integer; DtaCompra: TDateTime; 
                              CodPessoaSecundariaCriador: Integer; CodTipoIdentificador1: Integer; 
                              CodPosicaoIdentificador1: Integer; CodTipoIdentificador2: Integer; 
                              CodPosicaoIdentificador2: Integer; CodTipoIdentificador3: Integer; 
                              CodPosicaoIdentificador3: Integer; CodTipoIdentificador4: Integer; 
                              CodPosicaoIdentificador4: Integer; CodEspecie: Integer; 
                              CodAptidao: Integer; CodRaca: Integer; CodPelagem: Integer; 
                              const IndSexo: WideString; const IndAnimalCastrado: WideString; 
                              CodRegimeAlimentar: Integer; CodCategoriaAnimal: Integer; 
                              CodTipoLugar: Integer; CodLoteCorrente: Integer; 
                              CodLocalCorrente: Integer; CodFazendaCorrente: Integer; 
                              CodPropriedadeCorrente: Integer; 
                              const NumCNPJCPFCorrente: WideString; CodPessoaCorrente: Integer; 
                              const TxtObservacao: WideString; const NumGta: WideString; 
                              DtaEmissaoGta: TDateTime; NumNotaFiscal: Integer; 
                              const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                              const numCNPJCPFTecnico: WideString): Integer; safecall;
    function InserirImportados(QtdAnimais: Integer; CodFazendaManejo: Integer; 
                               const TxtPrefixoAnimalManejo: WideString; 
                               const CodInicialAnimalManejo: WideString; 
                               const TxtSufixoAnimalManejo: WideString; 
                               const TxtPrefixoAnimalCertificadora: WideString; 
                               const CodInicialAnimalCertificadora: WideString; 
                               const TxtSufixoAnimalCertificadora: WideString; 
                               const CodSituacaoSisBov: WideString; DtaNascimento: TDateTime; 
                               DtaCompra: TDateTime; CodPessoaSecundariaCriador: Integer; 
                               CodTipoIdentificador1: Integer; CodPosicaoIdentificador1: Integer; 
                               CodTipoIdentificador2: Integer; CodPosicaoIdentificador2: Integer; 
                               CodTipoIdentificador3: Integer; CodPosicaoIdentificador3: Integer; 
                               CodTipoIdentificador4: Integer; CodPosicaoIdentificador4: Integer; 
                               CodEspecie: Integer; CodAptidao: Integer; CodRaca: Integer; 
                               CodPelagem: Integer; const IndSexo: WideString; 
                               const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                               CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                               CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                               CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                               const NumCNPJCPFCorrente: WideString; CodPessoaCorrente: Integer; 
                               CodPaisOrigem: Integer; const DesPropriedadeOrigem: WideString; 
                               DtaAutorizacaoImportacao: TDateTime; DtaEntradaPais: TDateTime; 
                               const NumGuiaImportacao: WideString; 
                               const NumLicencaImportacao: WideString; 
                               const TxtObservacao: WideString; 
                               const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                               const numCNPJCPFTecnico: WideString): Integer; safecall;
    function PesquisarConsolidado(CodFazenda: Integer; CodAgrupamento: Integer): Integer; safecall;
    function AlterarSisbovParaN(CodAnimal: Integer): Integer; safecall;
    function AlterarSisbovParaP(CodAnimal: Integer; CodPaisSisBov: Integer; 
                                CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                                DtaIdentificacaoSisbov: TDateTime; 
                                const NumImovelIdentificacao: WideString; 
                                CodPropriedadeIdentificacao: Integer; 
                                CodFazendaIdentificacao: Integer; 
                                const NumImovelNascimento: WideString; 
                                CodPropriedadeNascimento: Integer): Integer; safecall;
    function EfetivarCadastros(CodFazendaManejo: Integer; const CodInicialAnimalManejo: WideString; 
                               const CodFinalAnimalManejo: WideString; const CodAnimais: WideString): Integer; safecall;
    function CancelarEfetivacoes(CodFazendaManejo: Integer; 
                                 const CodInicialAnimalManejo: WideString; 
                                 const CodFinalAnimalManejo: WideString; 
                                 const CodAnimais: WideString): Integer; safecall;
    function Excluir(CodFazendaManejo: Integer; const CodInicialAnimalManejo: WideString; 
                     const CodFinalAnimalManejo: WideString; const CodAnimais: WideString): Integer; safecall;
    function AlterarSisbov(CodAnimal: Integer; CodFazendaManejo: Integer; 
                           const CodAnimalManejo: WideString; CodPaisSisBov: Integer; 
                           CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                           CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                           DtaIdentificacaoSisbov: TDateTime; 
                           const NumImovelIdentificacao: WideString; 
                           CodPropriedadeIdentificacao: Integer; CodFazendaIdentificacao: Integer): Integer; safecall;
    function AplicarEvento(const CodAnimais: WideString; CodFazenda: Integer; 
                           const CodAnimaisManejo: WideString; CodLote: Integer; CodLocal: Integer; 
                           CodEvento: Integer; const IndLimparMensagens: WideString): Integer; safecall;
    function AplicarEventoAnimaisPesquisados(CodEvento: Integer; 
                                             const IndLimparMensagens: WideString): Integer; safecall;
    function PesquisarMensagensAplicacaoEvento(CodEvento: Integer; 
                                               const IndOperacaoRemocao: WideString): Integer; safecall;
    function RemoverEvento(const CodAnimais: WideString; CodFazenda: Integer; 
                           const CodAnimaisManejo: WideString; CodLote: Integer; CodLocal: Integer; 
                           CodEvento: Integer; const IndLimparMensagens: WideString): Integer; safecall;
    function RemoverEventoAnimaisPesquisados(CodEvento: Integer; 
                                             const IndLimparMensagens: WideString): Integer; safecall;
    function PesquisarMensagensOperacaoCadastro(CodOperacao: Integer): Integer; safecall;
    function LimparErrosOperacao(CodAnimal: Integer; CodOperacaoCadastro: Integer): Integer; safecall;
    function GerarRelatorio(CodFazendaManejo: Integer; const CodManejoInicio: WideString; 
                            const CodManejoFim: WideString; 
                            const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                            CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                            CodSisBovInicio: Integer; CodSisBovFim: Integer; 
                            const CodSituacaoSisBov: WideString; DtaNascimentoInicio: TDateTime; 
                            DtaNascimentoFim: TDateTime; CodFazendaNascimento: Integer; 
                            DtaCompraInicio: TDateTime; DtaCompraFim: TDateTime; 
                            CodPessoaSecundariaCriador: Integer; const NomAnimal: WideString; 
                            const DesApelido: WideString; CodAptidao: Integer; 
                            const CodRaca: WideString; const IndSexo: WideString; 
                            const CodOrigem: WideString; const SglFazendaPai: WideString; 
                            const CodAnimalPai: WideString; const DesApelidoPai: WideString; 
                            const SglFazendaMae: WideString; const CodAnimalMae: WideString; 
                            const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                            const CodCategoria: WideString; const IndConsiderarExterno: WideString; 
                            CodAssociacao: Integer; CodGrauSangue: Integer; 
                            const NumRGD: WideString; CodTipoLugar: Integer; 
                            const CodLocal: WideString; const CodLote: WideString; 
                            CodFazendaCorrente: Integer; const NumImovelCorrente: WideString; 
                            CodLocalizacaoCorrente: Integer; const NumCPFCNPJCorrente: WideString; 
                            const IndCadastroEfetivado: WideString; const CodOrdenacao: WideString; 
                            CodEvento: Integer; const IndEventoAplicado: WideString; 
                            const IndAnimaisEvento: WideString; const IndAgrupRaca1: WideString; 
                            CodRaca1: Integer; QtdCompRacialInicio1: Double; 
                            QtdCompRacialFim1: Double; const IndAgrupRaca2: WideString; 
                            CodRaca2: Integer; QtdCompRacialInicio2: Double; 
                            QtdCompRacialFim2: Double; const IndAgrupRaca3: WideString; 
                            CodRaca3: Integer; QtdCompRacialInicio3: Double; 
                            QtdCompRacialFim3: Double; const IndAgrupRaca4: WideString; 
                            CodRaca4: Integer; QtdCompRacialInicio4: Double; 
                            QtdCompRacialFim4: Double; const IndAptoCobertura: WideString; 
                            const IndAutenticacao: WideString; Tipo: Integer; 
                            QtdQuebraRelatorio: Integer; const IndAnimalSemTecnico: WideString; 
                            CodPessoaTecnico: Integer): WideString; safecall;
    function PesquisarEventos(CodAnimal: Integer; CodGrupoEvento: Integer): Integer; safecall;
    function GerarRelatorioConsolidado(const SglProdutor: WideString; 
                                       const NomPessoaProdutor: WideString; 
                                       const CodSituacaoSisBov: WideString; 
                                       DtaNascimentoInicio: TDateTime; DtaNascimentoFim: TDateTime; 
                                       DtaIdentificacaoInicio: TDateTime; 
                                       DtaIdentifcacaoFim: TDateTime; 
                                       CodMicroRegiaoSisbovNascimento: Integer; 
                                       const NomMicroRegiaoNascimento: WideString; 
                                       CodEstadoNascimento: Integer; 
                                       const NumImovelNascimento: WideString; 
                                       CodLocalizacaoNascimento: Integer; 
                                       CodMicroRegiaoSisbovIdentificacao: Integer; 
                                       const NomMicroRegiaoIdentificacao: WideString; 
                                       CodEstadoIdentificacao: Integer; 
                                       const NumImovelIdentificacao: WideString; 
                                       CodLocalizacaoIdentificacao: Integer; 
                                       DtaCompraInicio: TDateTime; DtaCompraFim: TDateTime; 
                                       const CodRaca: WideString; const IndSexo: WideString; 
                                       const CodOrigem: WideString; 
                                       const IndAnimalCastrado: WideString; 
                                       CodRegimeAlimentar: Integer; const CodCategoria: WideString; 
                                       CodAssociacaoRaca: Integer; CodGrauSangue: Integer; 
                                       CodTipoLugar: Integer; const NumImovelCorrente: WideString; 
                                       CodLocalizacaoCorrente: Integer; 
                                       const NumCNPJCPFCorrente: WideString; 
                                       const NomPaisOrigem: WideString; 
                                       const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                       QtdCompRacialInicio1: Double; QtdCompRacialFim1: Double; 
                                       const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                       QtdCompRacialInicio2: Double; QtdCompRacialFim2: Double; 
                                       const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                       QtdCompRacialInicio3: Double; QtdCompRacialFim3: Double; 
                                       const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                       QtdCompRacialInicio4: Double; QtdCompRacialFim4: Double; 
                                       const IndAptoCobertura: WideString; 
                                       DtaInicioCertificado: TDateTime; 
                                       DtaFimCertificado: TDateTime; 
                                       DtaInicioCadastramento: TDateTime; 
                                       DtaFimCadastramento: TDateTime; Tipo: Integer; 
                                       QtdQuebraRelatorio: Integer; 
                                       const numCNPJCPFTecnico: WideString; 
                                       const IndAnimalSemTecnico: WideString; 
                                       const IndAnimalCompradoComEvento: WideString; 
                                       DtaInicioCadastramentoHerdom: TDateTime; 
                                       DtaFimCadastramentoHerdom: TDateTime): WideString; safecall;
    function GerarRelatorioEventos(CodAnimal: Integer; CodGrupoEvento: Integer; Tipo: Integer; 
                                   QtdQuebraRelatorio: Integer): WideString; safecall;
    function DefinirPesoAnimal(CodEvento: Integer; CodFazendaManejo: Integer; 
                               const CodAnimais: WideString; const CodAnimaisManejo: WideString; 
                               const QtdPesosAnimais: WideString; 
                               const IndLimparMensagens: WideString): Integer; safecall;
    function AlterarPesoAnimal(CodEvento: Integer; const CodAnimais: WideString; 
                               const QtdPesosAnimais: WideString): Integer; safecall;
    function GerarRelatorioPesoAjustado(Origem: Integer; const Sexo: WideString; Aptidao: Integer; 
                                        CodFazendaManejo: Integer; 
                                        const CodManejoInicial: WideString; 
                                        const CodManejoFinal: WideString; const Raca: WideString; 
                                        const SglFazendaPai: WideString; 
                                        const CodAnimalPai: WideString; 
                                        const DesApelidoPai: WideString; 
                                        const SglFazendaMae: WideString; 
                                        const CodAnimalMae: WideString; 
                                        DtaNascimentoInicio: TDateTime; 
                                        DtaNascimentoFim: TDateTime; DtaCompraInicio: TDateTime; 
                                        DtaCompraFim: TDateTime; CodPessoaSecundaria: Integer; 
                                        const CodCategoria: WideString; 
                                        const IndAnimalCastrado: WideString; 
                                        CodRegimeAlimentar: Integer; const CodLocal: WideString; 
                                        const CodLote: WideString; CodTipoLugar: Integer; 
                                        NumIdadePadrao: Integer; QtdPesoMinimo: Double; 
                                        QtdPesoMaximo: Double; QtdGPDMinimo: Double; 
                                        QtdGPDMaximo: Double; QtdGPMMinimo: Double; 
                                        QtdGPMMaximo: Double; const IndAgrupRaca1: WideString; 
                                        CodRaca1: Integer; QtdCompRacialInicio1: Double; 
                                        QtdCompRacialFim1: Double; const IndAgrupRaca2: WideString; 
                                        CodRaca2: Integer; QtdCompRacialInicio2: Double; 
                                        QtdCompRacialFim2: Double; const IndAgrupRaca3: WideString; 
                                        CodRaca3: Integer; QtdCompRacialInicio3: Double; 
                                        QtdCompRacialFim3: Double; const IndAgrupRaca4: WideString; 
                                        CodRaca4: Integer; QtdCompRacialInicio4: Double; 
                                        QtdCompRacialFim4: Double; Tipo: Integer; 
                                        QtdQuebraRelatorio: Integer): WideString; safecall;
    function GerarRelatorioPesagem(CodOrigem: Integer; const IndSexoAnimal: WideString; 
                                   CodAptidao: Integer; CodFazendaManejo: Integer; 
                                   const CodAnimalManejoInicio: WideString; 
                                   const CodAnimalManejoFim: WideString; const CodRaca: WideString; 
                                   const SglFazendaPai: WideString; 
                                   const CodAnimalManejoPai: WideString; 
                                   const DesApelidoPai: WideString; 
                                   const SglFazendaMae: WideString; 
                                   const CodAnimalManejoMae: WideString; 
                                   DtaNascimentoInicio: TDateTime; DtaNascimentoFim: TDateTime; 
                                   DtaCompraInicio: TDateTime; DtaCompraFim: TDateTime; 
                                   CodPessoaSecundaria: Integer; const CodCategoria: WideString; 
                                   const IndAnimalCastrado: WideString; 
                                   CodRegimeAlimentar: Integer; const CodLote: WideString; 
                                   const CodLocal: WideString; CodTipoLugar: Integer; 
                                   DtaPesagemInicio: TDateTime; DtaPesagemFim: TDateTime; 
                                   QtdPesoMinimo: Double; QtdPesoMaximo: Double; 
                                   QtdGPDMinimo: Double; QtdGPDMaximo: Double; 
                                   QtdGPMMinimo: Double; QtdGPMMaximo: Double; 
                                   QtdUltimasPesagens: Integer; const IndAgrupRaca1: WideString; 
                                   CodRaca1: Integer; QtdCompRacialInicio1: Double; 
                                   QtdCompRacialFim1: Double; const IndAgrupRaca2: WideString; 
                                   CodRaca2: Integer; QtdCompRacialInicio2: Double; 
                                   QtdCompRacialFim2: Double; const IndAgrupRaca3: WideString; 
                                   CodRaca3: Integer; QtdCompRacialInicio3: Double; 
                                   QtdCompRacialFim3: Double; const IndAgrupRaca4: WideString; 
                                   CodRaca4: Integer; QtdCompRacialInicio4: Double; 
                                   QtdCompRacialFim4: Double; Tipo: Integer; 
                                   QtdQuebraRelatorio: Integer): WideString; safecall;
    function DefinirComposicaoRacial(CodAnimal: Integer; CodRaca: Integer; 
                                     QtdComposicaoRacial: Double): Integer; safecall;
    function PesquisarComposicaoRacial(CodAnimal: Integer; const CodOrdenacao: WideString): Integer; safecall;
    function AlterarAtributo(CodAnimal: Integer; CodAtributo: Integer; Valor1: OleVariant; 
                             Valor2: OleVariant): Integer; safecall;
    function CalcularCompRacial(CodAnimal: Integer): Integer; safecall;
    function CalcularCompRacialDescendentes(CodAnimal: Integer; CodAnimalRM: Integer): Integer; safecall;
    function RecalcularTodasCompRacial: Integer; safecall;
    function LimparComposicaoRacial(CodAnimal: Integer): Integer; safecall;
    function PesquisarGenealogia(const CodAnimais: WideString; CodFazendaManejo: Integer; 
                                 const CodAnimaisManejo: WideString): Integer; safecall;
    function DefinirDiagnosticoPrenhez(CodEvento: Integer; const CodAnimais: WideString; 
                                       CodFazendaManejo: Integer; 
                                       const CodAnimaisManejo: WideString; 
                                       const IndVacasPrenhas: WideString): Integer; safecall;
    function DefinirExameAndrologico(CodEvento: Integer; const CodAnimais: WideString; 
                                     CodFazendaManejo: Integer; const CodAnimaisManejo: WideString; 
                                     const IndTourosAptos: WideString): Integer; safecall;
    function GerarRelatorioGenealogia(const CodAnimais: WideString; CodFazendaManejo: Integer; 
                                      const CodAnimaisManejo: WideString): WideString; safecall;
    function GerarRelatorioAscendentes(const CodAnimais: WideString; CodFazendaManejo: Integer; 
                                       const CodAnimaisManejo: WideString): WideString; safecall;
    function GerarRelAscendentesPesquisados: WideString; safecall;
    function DefinirAvaliacao(CodEvento: Integer; CodAnimal: Integer; CodFazendaManejo: Integer; 
                              const CodAnimalManejo: WideString; 
                              CodCaracteristicaAvaliacao: Integer; QtdAvalicao: Double): Integer; safecall;
    function RemoverAvaliacao(CodEvento: Integer; CodAnimal: Integer; CodFazendaManejo: Integer; 
                              const CodAnimalManejo: WideString): Integer; safecall;
    function PesquisarAvaliacao(CodEvento: Integer): Integer; safecall;
    function InserirNascidoParto(CodAnimalMae: Integer; CodAnimalPai: Integer; 
                                 CodReprodutorMultiplo: Integer; CodFazendaManejo: Integer; 
                                 const CodAnimalManejoCria: WideString; const IndSexo: WideString; 
                                 CodPelagem: Integer; DtaNascimento: TDateTime; 
                                 const CodSituacaoSisBov: WideString; CodEspecie: Integer; 
                                 CodAptidao: Integer; CodRaca: Integer; 
                                 CodRegimeAlimentar: Integer; CodCategoriaAnimal: Integer; 
                                 CodTipoLugar: Integer; CodLoteCorrente: Integer; 
                                 CodLocalCorrente: Integer; CodFazendaCorrente: Integer; 
                                 const IndCodSisBovReservado: WideString; 
                                 CodPessoaTecnico: Integer; const numCNPJCPFTecnico: WideString): Integer; safecall;
    function PesquisarPossivelPai(CodEstacaoMonta: Integer; CodAnimalFemea: Integer; 
                                  CodFazendaManejoFemea: Integer; 
                                  const CodAnimalManejoFemea: WideString; DtaEventoParto: TDateTime): Integer; safecall;
    function EfetivarCadastroAnimaisPesquisados: Integer; safecall;
    function CancelarEfetivacaoAnimaisPesquisados: Integer; safecall;
    function GerarRelatorioAutenticacao(const SglProdutor: WideString; 
                                        const NomPessoaProdutor: WideString; 
                                        const CodOrigens: WideString; const IndSexo: WideString; 
                                        CodAptidao: Integer; CodPaisSisBov: Integer; 
                                        CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                        CodSisBovInicio: Integer; CodSisBovFim: Integer; 
                                        const CodRacas: WideString; 
                                        const CodCategorias: WideString; 
                                        DtaInicioNascimento: TDateTime; 
                                        DtaFimNascimento: TDateTime; CodRegimeAlimentar: Integer; 
                                        CodTipoLugar: Integer; DtaInicioAutenticacao: TDateTime; 
                                        DtaFimAutenticacao: TDateTime; 
                                        DtaInicioAutenticacaoPrevista: TDateTime; 
                                        DtaFimAutenticacaoPrevista: TDateTime; 
                                        const IndCertificadoEmitido: WideString; Tipo: Integer; 
                                        QtdQuebraRelatorio: Integer): WideString; safecall;
    function MarcarAnimaisComoExportadosPesquisados: Integer; safecall;
    function DesmCancAnimaisComoExportadosPesquisados(CodProcessamento: Integer): Integer; safecall;
    function MarcarExportados(CodFazendaManejo: Integer; const CodInicialAnimalManejo: WideString; 
                              const CodFinalAnimalManejo: WideString; const CodAnimais: WideString): Integer; safecall;
    function DesmarcarExportados(CodFazendaManejo: Integer; 
                                 const CodInicialAnimalManejo: WideString; 
                                 const CodFinalAnimalManejo: WideString; 
                                 const CodAnimais: WideString; CodProcessamento: Integer): Integer; safecall;
    function PesquisarAnimalPai(CodFazendaManejo: Integer; const CodManejoInicio: WideString; 
                                const CodManejoFim: WideString; 
                                const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                                CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                CodSisBovInicio: Integer; CodSisBovFim: Integer; 
                                const CodSituacaoSisBov: WideString; 
                                DtaNascimentoInicio: TDateTime; DtaNascimentoFim: TDateTime; 
                                CodFazendaNascimento: Integer; DtaCompraInicio: TDateTime; 
                                DtaCompraFim: TDateTime; CodPessoaSecundariaCriador: Integer; 
                                const NomAnimal: WideString; const DesApelido: WideString; 
                                CodAptidao: Integer; const CodRaca: WideString; 
                                const IndSexo: WideString; const CodOrigem: WideString; 
                                const SglFazendaPai: WideString; const CodAnimalPai: WideString; 
                                const DesApelidoPai: WideString; const SglFazendaMae: WideString; 
                                const CodAnimalMae: WideString; 
                                const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                                const CodCategoria: WideString; 
                                const IndConsiderarExterno: WideString; CodAssociacao: Integer; 
                                CodGrauSangue: Integer; const NumRGD: WideString; 
                                CodTipoLugar: Integer; const CodLocal: WideString; 
                                const CodLote: WideString; CodFazendaCorrente: Integer; 
                                const NumImovelCorrente: WideString; 
                                CodLocalizacaoCorrente: Integer; 
                                const NumCPFCNPJCorrente: WideString; 
                                const IndCadastroEfetivado: WideString; 
                                const CodOrdenacao: WideString; CodEvento: Integer; 
                                const IndEventoAplicado: WideString; 
                                const IndAnimaisEvento: WideString; CodReprodutorMultiplo: Integer; 
                                const IndTrazerComposicaoRacial: WideString; 
                                const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                QtdCompRacialIncio1: Double; QtdCompRacialFim1: Double; 
                                const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                QtdCompRacialInicio2: Double; QtdCompRacialFim2: Double; 
                                const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                QtdCompRacialInicio3: Double; QtdCompRacialFim3: Double; 
                                const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                QtdCompRacialInicio4: Double; QtdCompRacialFim4: Double; 
                                const IndAptoCobertura: WideString; 
                                const IndAutenticacao: WideString; CodEstacaoMonta: Integer; 
                                const IndAnimalSemTecnico: WideString; CodPessoaTecnico: Integer): Integer; safecall;
    function AlterarTecnico(CodTecnico: Integer; const CodAnimais: WideString): Integer; safecall;
    function AlterarTecnicoAnimaisPesquisados(CodTecnico: Integer): Integer; safecall;
    function InserirNaoEspecificado(CodFazendaManejo: Integer; const CodAnimalManejo: WideString; 
                                    const CodAnimalCertificadora: WideString; 
                                    CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                                    CodMicroRegiaoSISBOV: Integer; CodAnimalSisbov: Integer; 
                                    NumDVSisbov: Integer; const CodSituacaoSisBov: WideString; 
                                    DtaIdentificacaoSisbov: TDateTime; 
                                    const NumImovelIdentificacao: WideString; 
                                    CodPropriedadeIdentificacao: Integer; 
                                    CodFazendaIdentificacao: Integer; DtaNascimento: TDateTime; 
                                    CodTipoIdentificador1: Integer; 
                                    CodPosicaoIdentificador1: Integer; 
                                    CodTipoIdentificador2: Integer; 
                                    CodPosicaoIdentificador2: Integer; 
                                    CodTipoIdentificador3: Integer; 
                                    CodPosicaoIdentificador3: Integer; 
                                    CodTipoIdentificador4: Integer; 
                                    CodPosicaoIdentificador4: Integer; CodEspecie: Integer; 
                                    CodAptidao: Integer; CodRaca: Integer; CodPelagem: Integer; 
                                    const IndSexo: WideString; CodFazendaManejoPai: Integer; 
                                    const CodAnimalPai: WideString; CodFazendaManejoMae: Integer; 
                                    const CodAnimalMae: WideString; CodRegimeAlimentar: Integer; 
                                    CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                                    CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                                    CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                                    const NumCNPJCPFCorrente: WideString; 
                                    CodPessoaCorrente: Integer; const TxtObservacao: WideString; 
                                    CodPessoaTecnico: Integer; const numCNPJCPFTecnico: WideString): Integer; safecall;
    function AlterarNaoEspecificado(CodAnimal: Integer; CodFazendaManejo: Integer; 
                                    const CodAnimalManejo: WideString; 
                                    const CodAnimalCertificadora: WideString; 
                                    CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                                    CodMicroRegiaoSISBOV: Integer; CodAnimalSisbov: Integer; 
                                    NumDVSisbov: Integer; DtaIdentificacaoSisbov: TDateTime; 
                                    const NumImovelIdentificacao: WideString; 
                                    CodPropriedadeIdentificacao: Integer; 
                                    CodFazendaIdentificacao: Integer; DtaNascimento: TDateTime; 
                                    CodFazendaNascimento: Integer; CodTipoIdentificador1: Integer; 
                                    CodPosicaoIdentificador1: Integer; 
                                    CodTipoIdentificador2: Integer; 
                                    CodPosicaoIdentificador2: Integer; 
                                    CodTipoIdentificador3: Integer; 
                                    CodPosicaoIdentificador3: Integer; 
                                    CodTipoIdentificador4: Integer; 
                                    CodPosicaoIdentificador4: Integer; CodRaca: Integer; 
                                    CodPelagem: Integer; CodRegimeAlimentar: Integer; 
                                    CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                                    CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                                    CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                                    const NumCNPJCPFCorrente: WideString; 
                                    CodPessoaCorrente: Integer; const TxtObservacao: WideString; 
                                    CodPessoaTecnico: Integer; const IndSexo: WideString): Integer; safecall;
    function InserirNaoEspecificados(QtdAnimais: Integer; CodFazendaManejo: Integer; 
                                     const CodInicialAnimalManejo: WideString; 
                                     const CodInicialAnimalCertificadora: WideString; 
                                     CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                                     CodMicroRegiaoSISBOV: Integer; 
                                     CodInicialAnimalSisbov: Integer; 
                                     const CodSituacaoSisBov: WideString; 
                                     DtaIdentificacaoSisbov: TDateTime; 
                                     const NumImovelIdentificacao: WideString; 
                                     CodPropriedadeIdentificacao: Integer; 
                                     CodFazendaIdentificacao: Integer; DtaNascimento: TDateTime; 
                                     CodTipoIdentificador1: Integer; 
                                     CodPosicaoIdentificador1: Integer; 
                                     CodTipoIdentificador2: Integer; 
                                     CodPosicaoIdentificador2: Integer; 
                                     CodTipoIdentificador3: Integer; 
                                     CodPosicaoIdentificador3: Integer; 
                                     CodTipoIdentificador4: Integer; 
                                     CodPosicaoIdentificador4: Integer; CodEspecie: Integer; 
                                     CodAptidao: Integer; CodRaca: Integer; CodPelagem: Integer; 
                                     const IndSexo: WideString; CodRegimeAlimentar: Integer; 
                                     CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                                     CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                                     CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                                     const NumCNPJCPFCorrente: WideString; 
                                     CodPessoaCorrente: Integer; const TxtObservacao: WideString; 
                                     CodPessoaTecnico: Integer; const numCNPJCPFTecnico: WideString): Integer; safecall;
    function BuscarCaracteristicaAvaliacao(const CodAnimalManejo: WideString; 
                                           const SglCaracteristicaAvaliacao: WideString): Double; safecall;
    function BuscarPosicaoAnimalAvaliacaoCaracteristica(NumTela: Integer): Integer; safecall;
    function GerarRelatorioConsolidacaoCodigosSISBOV(const CodProdutor: WideString; 
                                                     const NumCNPJCPFProdutor: WideString; 
                                                     const NomProdutor: WideString; 
                                                     const NumImovelReceitaFederal: WideString; 
                                                     CodExportacao: Integer; 
                                                     const NomPropriedadeRural: WideString; 
                                                     const NomMunicipioPropriedade: WideString; 
                                                     CodEstadoPropriedade: Integer; 
                                                     DtaInicioIdentificacaoAnimal: TDateTime; 
                                                     DtaFimIdentificacaoAnimal: TDateTime; 
                                                     const NomPessoaTecnico: WideString; 
                                                     const numCNPJCPFTecnico: WideString; 
                                                     TipoRelatorio: Integer): WideString; safecall;
    function InventariarAnimaisPesquisados(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer): Integer; safecall;
    function ExcluirInventarioAnimaisPesquisados(CodPessoaProdutor: Integer; 
                                                 CodPropriedadeRural: Integer): Integer; safecall;
    function AtualizarDataAbate(CodPessoaProdutor: Integer; CodFazenda: Integer): Integer; safecall;
    function SolicitarAlteracaoPosse(CodPropriedadeRural: Integer; CodProdutorOrigem: Integer; 
                                     CodProdutorDestino: Integer; CodMotivoSolicitacao: Integer; 
                                     const Justificativa: WideString; 
                                     const NumeracaoEnvio: WideString): Integer; safecall;
    function ConsultarAnimaisAbatidos(CodFrigorifico: Integer; const Data: WideString): Integer; safecall;
    function BuscaNumDvSISBOV(CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                              CodMicroRegiaoSISBOV: Integer; CodAnimalSisbov: Integer): Integer; safecall;
    property Animal: IAnimal read Get_Animal;
    property AnimalResumido: IAnimalResumido read Get_AnimalResumido;
    property Filiacao: IFiliacao read Get_Filiacao;
    property Registro: IRegistro read Get_Registro;
  end;

// *********************************************************************//
// DispIntf:  IAnimaisDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BA7B9AA4-9F49-11D6-A34A-BFB2F9F3A223}
// *********************************************************************//
  IAnimaisDisp = dispinterface
    ['{BA7B9AA4-9F49-11D6-A34A-BFB2F9F3A223}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    procedure FecharPesquisa; dispid 11;
    property Animal: IAnimal readonly dispid 12;
    function InserirNascido(CodFazendaManejo: Integer; const CodAnimalManejo: WideString; 
                            const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                            CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                            CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                            const CodSituacaoSisBov: WideString; DtaIdentificacaoSisbov: TDateTime; 
                            const NumImovelIdentificacao: WideString; 
                            CodPropriedadeIdentificacao: Integer; CodFazendaIdentificacao: Integer; 
                            DtaNascimento: TDateTime; CodFazendaNascimento: Integer; 
                            const NomAnimal: WideString; const DesApelido: WideString; 
                            CodAssociacaoRaca: Integer; CodGrauSangue: Integer; 
                            const NumRGD: WideString; const NumTransponder: WideString; 
                            CodTipoIdentificador1: Integer; CodPosicaoIdentificador1: Integer; 
                            CodTipoIdentificador2: Integer; CodPosicaoIdentificador2: Integer; 
                            CodTipoIdentificador3: Integer; CodPosicaoIdentificador3: Integer; 
                            CodTipoIdentificador4: Integer; CodPosicaoIdentificador4: Integer; 
                            CodEspecie: Integer; CodAptidao: Integer; CodRaca: Integer; 
                            CodPelagem: Integer; const IndSexo: WideString; 
                            CodFazendaManejoPai: Integer; const CodAnimalPai: WideString; 
                            CodFazendaManejoMae: Integer; const CodAnimalMae: WideString; 
                            CodFazendaManejoReceptor: Integer; const CodAnimalReceptor: WideString; 
                            const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                            CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                            CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                            CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                            const NumCNPJCPFCorrente: WideString; CodPessoaCorrente: Integer; 
                            const TxtObservacao: WideString; 
                            const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                            const numCNPJCPFTecnico: WideString): Integer; dispid 13;
    property AnimalResumido: IAnimalResumido readonly dispid 14;
    property Filiacao: IFiliacao readonly dispid 15;
    property Registro: IRegistro readonly dispid 16;
    function Buscar(CodAnimal: Integer; const CodAnimalSisbov: WideString; 
                    const IndAnimalDoProprioProdutor: WideString; const IndAnimalVendido: WideString): Integer; dispid 17;
    function InserirComprado(CodFazendaManejo: Integer; const CodAnimalManejo: WideString; 
                             const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                             CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                             CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                             const CodSituacaoSisBov: WideString; 
                             DtaIdentificacaoSisbov: TDateTime; 
                             const NumImovelIdentificacao: WideString; 
                             CodPropriedadeIdentificacao: Integer; 
                             CodFazendaIdentificacao: Integer; DtaNascimento: TDateTime; 
                             const NumImovelNascimento: WideString; 
                             CodPropriedadeNascimento: Integer; DtaCompra: TDateTime; 
                             CodPessoaSecundariaCriador: Integer; const NomAnimal: WideString; 
                             const DesApelido: WideString; CodAssociacaoRaca: Integer; 
                             CodGrauSangue: Integer; const NumRGD: WideString; 
                             const NumTransponder: WideString; CodTipoIdentificador1: Integer; 
                             CodPosicaoIdentificador1: Integer; CodTipoIdentificador2: Integer; 
                             CodPosicaoIdentificador2: Integer; CodTipoIdentificador3: Integer; 
                             CodPosicaoIdentificador3: Integer; CodTipoIdentificador4: Integer; 
                             CodPosicaoIdentificador4: Integer; CodEspecie: Integer; 
                             CodAptidao: Integer; CodRaca: Integer; CodPelagem: Integer; 
                             const IndSexo: WideString; CodFazendaManejoPai: Integer; 
                             const CodAnimalPai: WideString; CodFazendaManejoMae: Integer; 
                             const CodAnimalMae: WideString; CodFazendaManejoReceptor: Integer; 
                             const CodAnimalReceptor: WideString; 
                             const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                             CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                             CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                             CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                             const NumCNPJCPFCorrente: WideString; CodPessoaCorrente: Integer; 
                             const TxtObservacao: WideString; const NumGta: WideString; 
                             DtaEmissaoGta: TDateTime; NumNotaFiscal: Integer; 
                             const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                             const numCNPJCPFTecnico: WideString): Integer; dispid 19;
    function InserirImportado(CodFazendaManejo: Integer; const CodAnimalManejo: WideString; 
                              const CodAnimalCertificadora: WideString; 
                              const CodSituacaoSisBov: WideString; DtaNascimento: TDateTime; 
                              DtaCompra: TDateTime; CodPessoaSecundariaCriador: Integer; 
                              const NomAnimal: WideString; const DesApelido: WideString; 
                              CodAssociacaoRaca: Integer; CodGrauSangue: Integer; 
                              const NumRGD: WideString; const NumTransponder: WideString; 
                              CodTipoIdentificador1: Integer; CodPosicaoIdentificador1: Integer; 
                              CodTipoIdentificador2: Integer; CodPosicaoIdentificador2: Integer; 
                              CodTipoIdentificador3: Integer; CodPosicaoIdentificador3: Integer; 
                              CodTipoIdentificador4: Integer; CodPosicaoIdentificador4: Integer; 
                              CodEspecie: Integer; CodAptidao: Integer; CodRaca: Integer; 
                              CodPelagem: Integer; const IndSexo: WideString; 
                              CodFazendaManejoPai: Integer; const CodAnimalPai: WideString; 
                              CodFazendaManejoMae: Integer; const CodAnimalMae: WideString; 
                              CodFazendaManejoReceptor: Integer; 
                              const CodAnimalReceptor: WideString; 
                              const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                              CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                              CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                              CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                              const NumCNPJCPFCorrente: WideString; CodPessoaCorrente: Integer; 
                              CodPaisOrigem: Integer; const DesPropriedadeOrigem: WideString; 
                              DtaAutorizacaoImportacao: TDateTime; DtaEntradaPais: TDateTime; 
                              const NumGuiaImportacao: WideString; 
                              const NumLicencaImportacao: WideString; 
                              const TxtObservacao: WideString; 
                              const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                              const numCNPJCPFTecnico: WideString): Integer; dispid 20;
    function InserirExterno(const CodAnimalManejo: WideString; 
                            const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                            CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                            CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                            const CodSituacaoSisBov: WideString; DtaNascimento: TDateTime; 
                            const NomAnimal: WideString; const DesApelido: WideString; 
                            CodAssociacaoRaca: Integer; CodGrauSangue: Integer; 
                            const NumRGD: WideString; CodEspecie: Integer; CodAptidao: Integer; 
                            CodRaca: Integer; CodPelagem: Integer; const IndSexo: WideString; 
                            CodFazendaManejoPai: Integer; const CodAnimalPai: WideString; 
                            CodFazendaManejoMae: Integer; const CodAnimalMae: WideString; 
                            CodFazendaManejoReceptor: Integer; const CodAnimalReceptor: WideString; 
                            const TxtObservacao: WideString; 
                            const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                            const numCNPJCPFTecnico: WideString): Integer; dispid 21;
    function BuscarResumido(CodAnimal: Integer; const CodAnimalSisbov: WideString): Integer; dispid 18;
    function Pesquisar(CodFazendaManejo: Integer; const CodManejoInicio: WideString; 
                       const CodManejoFim: WideString; const CodAnimalCertificadora: WideString; 
                       CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                       CodMicroRegiaoSISBOV: Integer; CodSisBovInicio: Integer; 
                       CodSisBovFim: Integer; const CodSituacaoSisBov: WideString; 
                       DtaNascimentoInicio: TDateTime; DtaNascimentoFim: TDateTime; 
                       CodFazendaNascimento: Integer; DtaCompraInicio: TDateTime; 
                       DtaCompraFim: TDateTime; CodPessoaSecundariaCriador: Integer; 
                       const NomAnimal: WideString; const DesApelido: WideString; 
                       CodAptidao: Integer; const CodRaca: WideString; const IndSexo: WideString; 
                       const CodOrigem: WideString; const SglFazendaPai: WideString; 
                       const CodAnimalPai: WideString; const DesApelidoPai: WideString; 
                       const SglFazendaMae: WideString; const CodAnimalMae: WideString; 
                       const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                       const CodCategoria: WideString; const IndConsiderarExterno: WideString; 
                       CodAssociacao: Integer; CodGrauSangue: Integer; const NumRGD: WideString; 
                       CodTipoLugar: Integer; const CodLocal: WideString; 
                       const CodLote: WideString; CodFazendaCorrente: Integer; 
                       const NumImovelCorrente: WideString; CodLocalizacaoCorrente: Integer; 
                       const NumCPFCNPJCorrente: WideString; 
                       const IndCadastroEfetivado: WideString; const CodOrdenacao: WideString; 
                       CodEvento: Integer; const IndEventoAplicado: WideString; 
                       const IndAnimaisEvento: WideString; CodReprodutorMultiplo: Integer; 
                       const IndTrazerComposicaoRacial: WideString; 
                       const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                       QtdCompRacialIncio1: Double; QtdCompRacialFim1: Double; 
                       const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                       QtdCompRacialInicio2: Double; QtdCompRacialFim2: Double; 
                       const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                       QtdCompRacialInicio3: Double; QtdCompRacialFim3: Double; 
                       const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                       QtdCompRacialInicio4: Double; QtdCompRacialFim4: Double; 
                       const IndAptoCobertura: WideString; const IndAutenticacao: WideString; 
                       CodEstacaoMonta: Integer; const IndAnimalSemTecnico: WideString; 
                       CodPessoaTecnico: Integer): Integer; dispid 22;
    function AlterarNascido(CodAnimal: Integer; CodFazendaManejo: Integer; 
                            const CodAnimalManejo: WideString; 
                            const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                            CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                            CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                            DtaIdentificacaoSisbov: TDateTime; 
                            const NumImovelIdentificacao: WideString; 
                            CodPropriedadeIdentificacao: Integer; CodFazendaIdentificacao: Integer; 
                            DtaNascimento: TDateTime; CodFazendaNascimento: Integer; 
                            const NomAnimal: WideString; const DesApelido: WideString; 
                            const NumTransponder: WideString; CodTipoIdentificador1: Integer; 
                            CodPosicaoIdentificador1: Integer; CodTipoIdentificador2: Integer; 
                            CodPosicaoIdentificador2: Integer; CodTipoIdentificador3: Integer; 
                            CodPosicaoIdentificador3: Integer; CodTipoIdentificador4: Integer; 
                            CodPosicaoIdentificador4: Integer; CodRaca: Integer; 
                            CodPelagem: Integer; const IndAnimalCastrado: WideString; 
                            CodRegimeAlimentar: Integer; CodCategoriaAnimal: Integer; 
                            CodTipoLugar: Integer; CodLoteCorrente: Integer; 
                            CodLocalCorrente: Integer; CodFazendaCorrente: Integer; 
                            CodPropriedadeCorrente: Integer; const NumCNPJCPFCorrente: WideString; 
                            CodPessoaCorrente: Integer; const TxtObservacao: WideString; 
                            const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                            const IndSexo: WideString): Integer; dispid 23;
    function AlterarComprado(CodAnimal: Integer; CodFazendaManejo: Integer; 
                             const CodAnimalManejo: WideString; 
                             const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                             CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                             CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                             DtaIdentificacaoSisbov: TDateTime; 
                             const NumImovelIdentificacao: WideString; 
                             CodPropriedadeIdentificacao: Integer; 
                             CodFazendaIdentificacao: Integer; DtaNascimento: TDateTime; 
                             const NumImovelNascimento: WideString; 
                             CodPropriedadeNascimento: Integer; DtaCompra: TDateTime; 
                             CodPessoaSecundariaCriador: Integer; const NomAnimal: WideString; 
                             const DesApelido: WideString; const NumTransponder: WideString; 
                             CodTipoIdentificador1: Integer; CodPosicaoIdentificador1: Integer; 
                             CodTipoIdentificador2: Integer; CodPosicaoIdentificador2: Integer; 
                             CodTipoIdentificador3: Integer; CodPosicaoIdentificador3: Integer; 
                             CodTipoIdentificador4: Integer; CodPosicaoIdentificador4: Integer; 
                             CodRaca: Integer; CodPelagem: Integer; 
                             const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                             CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                             CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                             CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                             const NumCNPJCPFCorrente: WideString; CodPessoaCorrente: Integer; 
                             const TxtObservacao: WideString; const NumGta: WideString; 
                             DtaEmissaoGta: TDateTime; NumNotaFiscal: Integer; 
                             const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                             const IndSexo: WideString): Integer; dispid 24;
    function AlterarImportado(CodAnimal: Integer; CodFazendaManejo: Integer; 
                              const CodAnimalManejo: WideString; 
                              const CodAnimalCertificadora: WideString; DtaNascimento: TDateTime; 
                              DtaCompra: TDateTime; CodPessoaSecundariaCriador: Integer; 
                              const NomAnimal: WideString; const DesApelido: WideString; 
                              const NumTransponder: WideString; CodTipoIdentificador1: Integer; 
                              CodPosicaoIdentificador1: Integer; CodTipoIdentificador2: Integer; 
                              CodPosicaoIdentificador2: Integer; CodTipoIdentificador3: Integer; 
                              CodPosicaoIdentificador3: Integer; CodTipoIdentificador4: Integer; 
                              CodPosicaoIdentificador4: Integer; CodRaca: Integer; 
                              CodPelagem: Integer; const IndAnimalCastrado: WideString; 
                              CodRegimeAlimentar: Integer; CodCategoriaAnimal: Integer; 
                              CodTipoLugar: Integer; CodLoteCorrente: Integer; 
                              CodLocalCorrente: Integer; CodFazendaCorrente: Integer; 
                              CodPropriedadeCorrente: Integer; 
                              const NumCNPJCPFCorrente: WideString; CodPessoaCorrente: Integer; 
                              CodPaisOrigem: Integer; const DesPropriedadeOrigem: WideString; 
                              DtaAutorizacaoImportacao: TDateTime; DtaEntradaPais: TDateTime; 
                              const NumGuiaImportacao: WideString; 
                              const NumLicencaImportacao: WideString; 
                              const TxtObservacao: WideString; 
                              const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                              const IndSexo: WideString): Integer; dispid 25;
    function AlterarExterno(CodAnimal: Integer; const CodAnimalManejo: WideString; 
                            const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                            CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                            CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                            DtaNascimento: TDateTime; const NomAnimal: WideString; 
                            const DesApelido: WideString; CodRaca: Integer; CodPelagem: Integer; 
                            const TxtObservacao: WideString; 
                            const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                            const IndSexo: WideString): Integer; dispid 26;
    function BuscarFiliacao(CodAnimal: Integer): Integer; dispid 27;
    function BuscarRegistro(CodAnimal: Integer): Integer; dispid 28;
    function AlterarFiliacao(CodAnimalFilho: Integer; CodAnimal: Integer; 
                             CodFazendaManejo: Integer; const CodAnimalManejo: WideString; 
                             const CodAnimalCertificadora: WideString; 
                             const CodTipoFiliacao: WideString): Integer; dispid 29;
    function AlterarRegistro(CodAnimal: Integer; CodAssociacaoRaca: Integer; 
                             CodGrauSangue: Integer; const NumRGD: WideString): Integer; dispid 30;
    function EfetivarCadastro(CodAnimal: Integer): Integer; dispid 31;
    function CancelarEfetivacao(CodAnimal: Integer): Integer; dispid 32;
    function InserirNascidos(QtdAnimais: Integer; CodFazendaManejo: Integer; 
                             const TxtPrefixoAnimalManejo: WideString; 
                             const CodInicialAnimalManejo: WideString; 
                             const TxtSufixoAnimalManejo: WideString; 
                             const TxtPrefixoAnimalCertificadora: WideString; 
                             const CodInicialAnimalCertificadora: WideString; 
                             const TxtSufixoAnimalCertificadora: WideString; 
                             CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                             CodMicroRegiaoSISBOV: Integer; CodInicialAnimalSisbov: Integer; 
                             const CodSituacaoSisBov: WideString; 
                             DtaIdentificacaoSisbov: TDateTime; 
                             const NumImovelIdentificacao: WideString; 
                             CodPropriedadeIdentificacao: Integer; 
                             CodFazendaIdentificacao: Integer; DtaNascimento: TDateTime; 
                             CodFazendaNascimento: Integer; CodTipoIdentificador1: Integer; 
                             CodPosicaoIdentificador1: Integer; CodTipoIdentificador2: Integer; 
                             CodPosicaoIdentificador2: Integer; CodTipoIdentificador3: Integer; 
                             CodPosicaoIdentificador3: Integer; CodTipoIdentificador4: Integer; 
                             CodPosicaoIdentificador4: Integer; CodEspecie: Integer; 
                             CodAptidao: Integer; CodRaca: Integer; CodPelagem: Integer; 
                             const IndSexo: WideString; const IndAnimalCastrado: WideString; 
                             CodRegimeAlimentar: Integer; CodCategoriaAnimal: Integer; 
                             CodTipoLugar: Integer; CodLoteCorrente: Integer; 
                             CodLocalCorrente: Integer; CodFazendaCorrente: Integer; 
                             CodPropriedadeCorrente: Integer; const NumCNPJCPFCorrente: WideString; 
                             CodPessoaCorrente: Integer; const TxtObservacao: WideString; 
                             const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                             const numCNPJCPFTecnico: WideString): Integer; dispid 33;
    function InserirComprados(QtdAnimais: Integer; CodFazendaManejo: Integer; 
                              const TxtPrefixoAnimalManejo: WideString; 
                              const CodInicialAnimalManejo: WideString; 
                              const TxtSufixoAnimalManejo: WideString; 
                              const TxtPrefixoAnimalCertificadora: WideString; 
                              const CodInicialAnimalCertificadora: WideString; 
                              const TxtSufixoAnimalCertificadora: WideString; 
                              CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                              CodMicroRegiaoSISBOV: Integer; CodInicialAnimalSisbov: Integer; 
                              const CodSituacaoSisBov: WideString; 
                              DtaIdentificacaoSisbov: TDateTime; 
                              const NumImovelIdentificacao: WideString; 
                              CodPropriedadeIdentificacao: Integer; 
                              CodFazendaIdentificacao: Integer; DtaNascimento: TDateTime; 
                              const NumImovelNascimento: WideString; 
                              CodPropriedadeNascimento: Integer; DtaCompra: TDateTime; 
                              CodPessoaSecundariaCriador: Integer; CodTipoIdentificador1: Integer; 
                              CodPosicaoIdentificador1: Integer; CodTipoIdentificador2: Integer; 
                              CodPosicaoIdentificador2: Integer; CodTipoIdentificador3: Integer; 
                              CodPosicaoIdentificador3: Integer; CodTipoIdentificador4: Integer; 
                              CodPosicaoIdentificador4: Integer; CodEspecie: Integer; 
                              CodAptidao: Integer; CodRaca: Integer; CodPelagem: Integer; 
                              const IndSexo: WideString; const IndAnimalCastrado: WideString; 
                              CodRegimeAlimentar: Integer; CodCategoriaAnimal: Integer; 
                              CodTipoLugar: Integer; CodLoteCorrente: Integer; 
                              CodLocalCorrente: Integer; CodFazendaCorrente: Integer; 
                              CodPropriedadeCorrente: Integer; 
                              const NumCNPJCPFCorrente: WideString; CodPessoaCorrente: Integer; 
                              const TxtObservacao: WideString; const NumGta: WideString; 
                              DtaEmissaoGta: TDateTime; NumNotaFiscal: Integer; 
                              const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                              const numCNPJCPFTecnico: WideString): Integer; dispid 34;
    function InserirImportados(QtdAnimais: Integer; CodFazendaManejo: Integer; 
                               const TxtPrefixoAnimalManejo: WideString; 
                               const CodInicialAnimalManejo: WideString; 
                               const TxtSufixoAnimalManejo: WideString; 
                               const TxtPrefixoAnimalCertificadora: WideString; 
                               const CodInicialAnimalCertificadora: WideString; 
                               const TxtSufixoAnimalCertificadora: WideString; 
                               const CodSituacaoSisBov: WideString; DtaNascimento: TDateTime; 
                               DtaCompra: TDateTime; CodPessoaSecundariaCriador: Integer; 
                               CodTipoIdentificador1: Integer; CodPosicaoIdentificador1: Integer; 
                               CodTipoIdentificador2: Integer; CodPosicaoIdentificador2: Integer; 
                               CodTipoIdentificador3: Integer; CodPosicaoIdentificador3: Integer; 
                               CodTipoIdentificador4: Integer; CodPosicaoIdentificador4: Integer; 
                               CodEspecie: Integer; CodAptidao: Integer; CodRaca: Integer; 
                               CodPelagem: Integer; const IndSexo: WideString; 
                               const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                               CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                               CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                               CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                               const NumCNPJCPFCorrente: WideString; CodPessoaCorrente: Integer; 
                               CodPaisOrigem: Integer; const DesPropriedadeOrigem: WideString; 
                               DtaAutorizacaoImportacao: TDateTime; DtaEntradaPais: TDateTime; 
                               const NumGuiaImportacao: WideString; 
                               const NumLicencaImportacao: WideString; 
                               const TxtObservacao: WideString; 
                               const IndCodSisBovReservado: WideString; CodPessoaTecnico: Integer; 
                               const numCNPJCPFTecnico: WideString): Integer; dispid 35;
    function PesquisarConsolidado(CodFazenda: Integer; CodAgrupamento: Integer): Integer; dispid 36;
    function AlterarSisbovParaN(CodAnimal: Integer): Integer; dispid 37;
    function AlterarSisbovParaP(CodAnimal: Integer; CodPaisSisBov: Integer; 
                                CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                                DtaIdentificacaoSisbov: TDateTime; 
                                const NumImovelIdentificacao: WideString; 
                                CodPropriedadeIdentificacao: Integer; 
                                CodFazendaIdentificacao: Integer; 
                                const NumImovelNascimento: WideString; 
                                CodPropriedadeNascimento: Integer): Integer; dispid 38;
    function EfetivarCadastros(CodFazendaManejo: Integer; const CodInicialAnimalManejo: WideString; 
                               const CodFinalAnimalManejo: WideString; const CodAnimais: WideString): Integer; dispid 39;
    function CancelarEfetivacoes(CodFazendaManejo: Integer; 
                                 const CodInicialAnimalManejo: WideString; 
                                 const CodFinalAnimalManejo: WideString; 
                                 const CodAnimais: WideString): Integer; dispid 40;
    function Excluir(CodFazendaManejo: Integer; const CodInicialAnimalManejo: WideString; 
                     const CodFinalAnimalManejo: WideString; const CodAnimais: WideString): Integer; dispid 41;
    function AlterarSisbov(CodAnimal: Integer; CodFazendaManejo: Integer; 
                           const CodAnimalManejo: WideString; CodPaisSisBov: Integer; 
                           CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                           CodAnimalSisbov: Integer; NumDVSisbov: Integer; 
                           DtaIdentificacaoSisbov: TDateTime; 
                           const NumImovelIdentificacao: WideString; 
                           CodPropriedadeIdentificacao: Integer; CodFazendaIdentificacao: Integer): Integer; dispid 42;
    function AplicarEvento(const CodAnimais: WideString; CodFazenda: Integer; 
                           const CodAnimaisManejo: WideString; CodLote: Integer; CodLocal: Integer; 
                           CodEvento: Integer; const IndLimparMensagens: WideString): Integer; dispid 43;
    function AplicarEventoAnimaisPesquisados(CodEvento: Integer; 
                                             const IndLimparMensagens: WideString): Integer; dispid 44;
    function PesquisarMensagensAplicacaoEvento(CodEvento: Integer; 
                                               const IndOperacaoRemocao: WideString): Integer; dispid 45;
    function RemoverEvento(const CodAnimais: WideString; CodFazenda: Integer; 
                           const CodAnimaisManejo: WideString; CodLote: Integer; CodLocal: Integer; 
                           CodEvento: Integer; const IndLimparMensagens: WideString): Integer; dispid 46;
    function RemoverEventoAnimaisPesquisados(CodEvento: Integer; 
                                             const IndLimparMensagens: WideString): Integer; dispid 47;
    function PesquisarMensagensOperacaoCadastro(CodOperacao: Integer): Integer; dispid 48;
    function LimparErrosOperacao(CodAnimal: Integer; CodOperacaoCadastro: Integer): Integer; dispid 49;
    function GerarRelatorio(CodFazendaManejo: Integer; const CodManejoInicio: WideString; 
                            const CodManejoFim: WideString; 
                            const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                            CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                            CodSisBovInicio: Integer; CodSisBovFim: Integer; 
                            const CodSituacaoSisBov: WideString; DtaNascimentoInicio: TDateTime; 
                            DtaNascimentoFim: TDateTime; CodFazendaNascimento: Integer; 
                            DtaCompraInicio: TDateTime; DtaCompraFim: TDateTime; 
                            CodPessoaSecundariaCriador: Integer; const NomAnimal: WideString; 
                            const DesApelido: WideString; CodAptidao: Integer; 
                            const CodRaca: WideString; const IndSexo: WideString; 
                            const CodOrigem: WideString; const SglFazendaPai: WideString; 
                            const CodAnimalPai: WideString; const DesApelidoPai: WideString; 
                            const SglFazendaMae: WideString; const CodAnimalMae: WideString; 
                            const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                            const CodCategoria: WideString; const IndConsiderarExterno: WideString; 
                            CodAssociacao: Integer; CodGrauSangue: Integer; 
                            const NumRGD: WideString; CodTipoLugar: Integer; 
                            const CodLocal: WideString; const CodLote: WideString; 
                            CodFazendaCorrente: Integer; const NumImovelCorrente: WideString; 
                            CodLocalizacaoCorrente: Integer; const NumCPFCNPJCorrente: WideString; 
                            const IndCadastroEfetivado: WideString; const CodOrdenacao: WideString; 
                            CodEvento: Integer; const IndEventoAplicado: WideString; 
                            const IndAnimaisEvento: WideString; const IndAgrupRaca1: WideString; 
                            CodRaca1: Integer; QtdCompRacialInicio1: Double; 
                            QtdCompRacialFim1: Double; const IndAgrupRaca2: WideString; 
                            CodRaca2: Integer; QtdCompRacialInicio2: Double; 
                            QtdCompRacialFim2: Double; const IndAgrupRaca3: WideString; 
                            CodRaca3: Integer; QtdCompRacialInicio3: Double; 
                            QtdCompRacialFim3: Double; const IndAgrupRaca4: WideString; 
                            CodRaca4: Integer; QtdCompRacialInicio4: Double; 
                            QtdCompRacialFim4: Double; const IndAptoCobertura: WideString; 
                            const IndAutenticacao: WideString; Tipo: Integer; 
                            QtdQuebraRelatorio: Integer; const IndAnimalSemTecnico: WideString; 
                            CodPessoaTecnico: Integer): WideString; dispid 50;
    function PesquisarEventos(CodAnimal: Integer; CodGrupoEvento: Integer): Integer; dispid 51;
    function GerarRelatorioConsolidado(const SglProdutor: WideString; 
                                       const NomPessoaProdutor: WideString; 
                                       const CodSituacaoSisBov: WideString; 
                                       DtaNascimentoInicio: TDateTime; DtaNascimentoFim: TDateTime; 
                                       DtaIdentificacaoInicio: TDateTime; 
                                       DtaIdentifcacaoFim: TDateTime; 
                                       CodMicroRegiaoSisbovNascimento: Integer; 
                                       const NomMicroRegiaoNascimento: WideString; 
                                       CodEstadoNascimento: Integer; 
                                       const NumImovelNascimento: WideString; 
                                       CodLocalizacaoNascimento: Integer; 
                                       CodMicroRegiaoSisbovIdentificacao: Integer; 
                                       const NomMicroRegiaoIdentificacao: WideString; 
                                       CodEstadoIdentificacao: Integer; 
                                       const NumImovelIdentificacao: WideString; 
                                       CodLocalizacaoIdentificacao: Integer; 
                                       DtaCompraInicio: TDateTime; DtaCompraFim: TDateTime; 
                                       const CodRaca: WideString; const IndSexo: WideString; 
                                       const CodOrigem: WideString; 
                                       const IndAnimalCastrado: WideString; 
                                       CodRegimeAlimentar: Integer; const CodCategoria: WideString; 
                                       CodAssociacaoRaca: Integer; CodGrauSangue: Integer; 
                                       CodTipoLugar: Integer; const NumImovelCorrente: WideString; 
                                       CodLocalizacaoCorrente: Integer; 
                                       const NumCNPJCPFCorrente: WideString; 
                                       const NomPaisOrigem: WideString; 
                                       const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                       QtdCompRacialInicio1: Double; QtdCompRacialFim1: Double; 
                                       const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                       QtdCompRacialInicio2: Double; QtdCompRacialFim2: Double; 
                                       const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                       QtdCompRacialInicio3: Double; QtdCompRacialFim3: Double; 
                                       const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                       QtdCompRacialInicio4: Double; QtdCompRacialFim4: Double; 
                                       const IndAptoCobertura: WideString; 
                                       DtaInicioCertificado: TDateTime; 
                                       DtaFimCertificado: TDateTime; 
                                       DtaInicioCadastramento: TDateTime; 
                                       DtaFimCadastramento: TDateTime; Tipo: Integer; 
                                       QtdQuebraRelatorio: Integer; 
                                       const numCNPJCPFTecnico: WideString; 
                                       const IndAnimalSemTecnico: WideString; 
                                       const IndAnimalCompradoComEvento: WideString; 
                                       DtaInicioCadastramentoHerdom: TDateTime; 
                                       DtaFimCadastramentoHerdom: TDateTime): WideString; dispid 52;
    function GerarRelatorioEventos(CodAnimal: Integer; CodGrupoEvento: Integer; Tipo: Integer; 
                                   QtdQuebraRelatorio: Integer): WideString; dispid 53;
    function DefinirPesoAnimal(CodEvento: Integer; CodFazendaManejo: Integer; 
                               const CodAnimais: WideString; const CodAnimaisManejo: WideString; 
                               const QtdPesosAnimais: WideString; 
                               const IndLimparMensagens: WideString): Integer; dispid 54;
    function AlterarPesoAnimal(CodEvento: Integer; const CodAnimais: WideString; 
                               const QtdPesosAnimais: WideString): Integer; dispid 55;
    function GerarRelatorioPesoAjustado(Origem: Integer; const Sexo: WideString; Aptidao: Integer; 
                                        CodFazendaManejo: Integer; 
                                        const CodManejoInicial: WideString; 
                                        const CodManejoFinal: WideString; const Raca: WideString; 
                                        const SglFazendaPai: WideString; 
                                        const CodAnimalPai: WideString; 
                                        const DesApelidoPai: WideString; 
                                        const SglFazendaMae: WideString; 
                                        const CodAnimalMae: WideString; 
                                        DtaNascimentoInicio: TDateTime; 
                                        DtaNascimentoFim: TDateTime; DtaCompraInicio: TDateTime; 
                                        DtaCompraFim: TDateTime; CodPessoaSecundaria: Integer; 
                                        const CodCategoria: WideString; 
                                        const IndAnimalCastrado: WideString; 
                                        CodRegimeAlimentar: Integer; const CodLocal: WideString; 
                                        const CodLote: WideString; CodTipoLugar: Integer; 
                                        NumIdadePadrao: Integer; QtdPesoMinimo: Double; 
                                        QtdPesoMaximo: Double; QtdGPDMinimo: Double; 
                                        QtdGPDMaximo: Double; QtdGPMMinimo: Double; 
                                        QtdGPMMaximo: Double; const IndAgrupRaca1: WideString; 
                                        CodRaca1: Integer; QtdCompRacialInicio1: Double; 
                                        QtdCompRacialFim1: Double; const IndAgrupRaca2: WideString; 
                                        CodRaca2: Integer; QtdCompRacialInicio2: Double; 
                                        QtdCompRacialFim2: Double; const IndAgrupRaca3: WideString; 
                                        CodRaca3: Integer; QtdCompRacialInicio3: Double; 
                                        QtdCompRacialFim3: Double; const IndAgrupRaca4: WideString; 
                                        CodRaca4: Integer; QtdCompRacialInicio4: Double; 
                                        QtdCompRacialFim4: Double; Tipo: Integer; 
                                        QtdQuebraRelatorio: Integer): WideString; dispid 56;
    function GerarRelatorioPesagem(CodOrigem: Integer; const IndSexoAnimal: WideString; 
                                   CodAptidao: Integer; CodFazendaManejo: Integer; 
                                   const CodAnimalManejoInicio: WideString; 
                                   const CodAnimalManejoFim: WideString; const CodRaca: WideString; 
                                   const SglFazendaPai: WideString; 
                                   const CodAnimalManejoPai: WideString; 
                                   const DesApelidoPai: WideString; 
                                   const SglFazendaMae: WideString; 
                                   const CodAnimalManejoMae: WideString; 
                                   DtaNascimentoInicio: TDateTime; DtaNascimentoFim: TDateTime; 
                                   DtaCompraInicio: TDateTime; DtaCompraFim: TDateTime; 
                                   CodPessoaSecundaria: Integer; const CodCategoria: WideString; 
                                   const IndAnimalCastrado: WideString; 
                                   CodRegimeAlimentar: Integer; const CodLote: WideString; 
                                   const CodLocal: WideString; CodTipoLugar: Integer; 
                                   DtaPesagemInicio: TDateTime; DtaPesagemFim: TDateTime; 
                                   QtdPesoMinimo: Double; QtdPesoMaximo: Double; 
                                   QtdGPDMinimo: Double; QtdGPDMaximo: Double; 
                                   QtdGPMMinimo: Double; QtdGPMMaximo: Double; 
                                   QtdUltimasPesagens: Integer; const IndAgrupRaca1: WideString; 
                                   CodRaca1: Integer; QtdCompRacialInicio1: Double; 
                                   QtdCompRacialFim1: Double; const IndAgrupRaca2: WideString; 
                                   CodRaca2: Integer; QtdCompRacialInicio2: Double; 
                                   QtdCompRacialFim2: Double; const IndAgrupRaca3: WideString; 
                                   CodRaca3: Integer; QtdCompRacialInicio3: Double; 
                                   QtdCompRacialFim3: Double; const IndAgrupRaca4: WideString; 
                                   CodRaca4: Integer; QtdCompRacialInicio4: Double; 
                                   QtdCompRacialFim4: Double; Tipo: Integer; 
                                   QtdQuebraRelatorio: Integer): WideString; dispid 57;
    function DefinirComposicaoRacial(CodAnimal: Integer; CodRaca: Integer; 
                                     QtdComposicaoRacial: Double): Integer; dispid 58;
    function PesquisarComposicaoRacial(CodAnimal: Integer; const CodOrdenacao: WideString): Integer; dispid 59;
    function AlterarAtributo(CodAnimal: Integer; CodAtributo: Integer; Valor1: OleVariant; 
                             Valor2: OleVariant): Integer; dispid 60;
    function CalcularCompRacial(CodAnimal: Integer): Integer; dispid 61;
    function CalcularCompRacialDescendentes(CodAnimal: Integer; CodAnimalRM: Integer): Integer; dispid 62;
    function RecalcularTodasCompRacial: Integer; dispid 63;
    function LimparComposicaoRacial(CodAnimal: Integer): Integer; dispid 64;
    function PesquisarGenealogia(const CodAnimais: WideString; CodFazendaManejo: Integer; 
                                 const CodAnimaisManejo: WideString): Integer; dispid 65;
    function DefinirDiagnosticoPrenhez(CodEvento: Integer; const CodAnimais: WideString; 
                                       CodFazendaManejo: Integer; 
                                       const CodAnimaisManejo: WideString; 
                                       const IndVacasPrenhas: WideString): Integer; dispid 66;
    function DefinirExameAndrologico(CodEvento: Integer; const CodAnimais: WideString; 
                                     CodFazendaManejo: Integer; const CodAnimaisManejo: WideString; 
                                     const IndTourosAptos: WideString): Integer; dispid 67;
    function GerarRelatorioGenealogia(const CodAnimais: WideString; CodFazendaManejo: Integer; 
                                      const CodAnimaisManejo: WideString): WideString; dispid 68;
    function GerarRelatorioAscendentes(const CodAnimais: WideString; CodFazendaManejo: Integer; 
                                       const CodAnimaisManejo: WideString): WideString; dispid 69;
    function GerarRelAscendentesPesquisados: WideString; dispid 70;
    function DefinirAvaliacao(CodEvento: Integer; CodAnimal: Integer; CodFazendaManejo: Integer; 
                              const CodAnimalManejo: WideString; 
                              CodCaracteristicaAvaliacao: Integer; QtdAvalicao: Double): Integer; dispid 71;
    function RemoverAvaliacao(CodEvento: Integer; CodAnimal: Integer; CodFazendaManejo: Integer; 
                              const CodAnimalManejo: WideString): Integer; dispid 72;
    function PesquisarAvaliacao(CodEvento: Integer): Integer; dispid 73;
    function InserirNascidoParto(CodAnimalMae: Integer; CodAnimalPai: Integer; 
                                 CodReprodutorMultiplo: Integer; CodFazendaManejo: Integer; 
                                 const CodAnimalManejoCria: WideString; const IndSexo: WideString; 
                                 CodPelagem: Integer; DtaNascimento: TDateTime; 
                                 const CodSituacaoSisBov: WideString; CodEspecie: Integer; 
                                 CodAptidao: Integer; CodRaca: Integer; 
                                 CodRegimeAlimentar: Integer; CodCategoriaAnimal: Integer; 
                                 CodTipoLugar: Integer; CodLoteCorrente: Integer; 
                                 CodLocalCorrente: Integer; CodFazendaCorrente: Integer; 
                                 const IndCodSisBovReservado: WideString; 
                                 CodPessoaTecnico: Integer; const numCNPJCPFTecnico: WideString): Integer; dispid 74;
    function PesquisarPossivelPai(CodEstacaoMonta: Integer; CodAnimalFemea: Integer; 
                                  CodFazendaManejoFemea: Integer; 
                                  const CodAnimalManejoFemea: WideString; DtaEventoParto: TDateTime): Integer; dispid 75;
    function EfetivarCadastroAnimaisPesquisados: Integer; dispid 76;
    function CancelarEfetivacaoAnimaisPesquisados: Integer; dispid 77;
    function GerarRelatorioAutenticacao(const SglProdutor: WideString; 
                                        const NomPessoaProdutor: WideString; 
                                        const CodOrigens: WideString; const IndSexo: WideString; 
                                        CodAptidao: Integer; CodPaisSisBov: Integer; 
                                        CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                        CodSisBovInicio: Integer; CodSisBovFim: Integer; 
                                        const CodRacas: WideString; 
                                        const CodCategorias: WideString; 
                                        DtaInicioNascimento: TDateTime; 
                                        DtaFimNascimento: TDateTime; CodRegimeAlimentar: Integer; 
                                        CodTipoLugar: Integer; DtaInicioAutenticacao: TDateTime; 
                                        DtaFimAutenticacao: TDateTime; 
                                        DtaInicioAutenticacaoPrevista: TDateTime; 
                                        DtaFimAutenticacaoPrevista: TDateTime; 
                                        const IndCertificadoEmitido: WideString; Tipo: Integer; 
                                        QtdQuebraRelatorio: Integer): WideString; dispid 78;
    function MarcarAnimaisComoExportadosPesquisados: Integer; dispid 79;
    function DesmCancAnimaisComoExportadosPesquisados(CodProcessamento: Integer): Integer; dispid 80;
    function MarcarExportados(CodFazendaManejo: Integer; const CodInicialAnimalManejo: WideString; 
                              const CodFinalAnimalManejo: WideString; const CodAnimais: WideString): Integer; dispid 81;
    function DesmarcarExportados(CodFazendaManejo: Integer; 
                                 const CodInicialAnimalManejo: WideString; 
                                 const CodFinalAnimalManejo: WideString; 
                                 const CodAnimais: WideString; CodProcessamento: Integer): Integer; dispid 82;
    function PesquisarAnimalPai(CodFazendaManejo: Integer; const CodManejoInicio: WideString; 
                                const CodManejoFim: WideString; 
                                const CodAnimalCertificadora: WideString; CodPaisSisBov: Integer; 
                                CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                CodSisBovInicio: Integer; CodSisBovFim: Integer; 
                                const CodSituacaoSisBov: WideString; 
                                DtaNascimentoInicio: TDateTime; DtaNascimentoFim: TDateTime; 
                                CodFazendaNascimento: Integer; DtaCompraInicio: TDateTime; 
                                DtaCompraFim: TDateTime; CodPessoaSecundariaCriador: Integer; 
                                const NomAnimal: WideString; const DesApelido: WideString; 
                                CodAptidao: Integer; const CodRaca: WideString; 
                                const IndSexo: WideString; const CodOrigem: WideString; 
                                const SglFazendaPai: WideString; const CodAnimalPai: WideString; 
                                const DesApelidoPai: WideString; const SglFazendaMae: WideString; 
                                const CodAnimalMae: WideString; 
                                const IndAnimalCastrado: WideString; CodRegimeAlimentar: Integer; 
                                const CodCategoria: WideString; 
                                const IndConsiderarExterno: WideString; CodAssociacao: Integer; 
                                CodGrauSangue: Integer; const NumRGD: WideString; 
                                CodTipoLugar: Integer; const CodLocal: WideString; 
                                const CodLote: WideString; CodFazendaCorrente: Integer; 
                                const NumImovelCorrente: WideString; 
                                CodLocalizacaoCorrente: Integer; 
                                const NumCPFCNPJCorrente: WideString; 
                                const IndCadastroEfetivado: WideString; 
                                const CodOrdenacao: WideString; CodEvento: Integer; 
                                const IndEventoAplicado: WideString; 
                                const IndAnimaisEvento: WideString; CodReprodutorMultiplo: Integer; 
                                const IndTrazerComposicaoRacial: WideString; 
                                const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                QtdCompRacialIncio1: Double; QtdCompRacialFim1: Double; 
                                const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                QtdCompRacialInicio2: Double; QtdCompRacialFim2: Double; 
                                const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                QtdCompRacialInicio3: Double; QtdCompRacialFim3: Double; 
                                const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                QtdCompRacialInicio4: Double; QtdCompRacialFim4: Double; 
                                const IndAptoCobertura: WideString; 
                                const IndAutenticacao: WideString; CodEstacaoMonta: Integer; 
                                const IndAnimalSemTecnico: WideString; CodPessoaTecnico: Integer): Integer; dispid 202;
    function AlterarTecnico(CodTecnico: Integer; const CodAnimais: WideString): Integer; dispid 201;
    function AlterarTecnicoAnimaisPesquisados(CodTecnico: Integer): Integer; dispid 203;
    function InserirNaoEspecificado(CodFazendaManejo: Integer; const CodAnimalManejo: WideString; 
                                    const CodAnimalCertificadora: WideString; 
                                    CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                                    CodMicroRegiaoSISBOV: Integer; CodAnimalSisbov: Integer; 
                                    NumDVSisbov: Integer; const CodSituacaoSisBov: WideString; 
                                    DtaIdentificacaoSisbov: TDateTime; 
                                    const NumImovelIdentificacao: WideString; 
                                    CodPropriedadeIdentificacao: Integer; 
                                    CodFazendaIdentificacao: Integer; DtaNascimento: TDateTime; 
                                    CodTipoIdentificador1: Integer; 
                                    CodPosicaoIdentificador1: Integer; 
                                    CodTipoIdentificador2: Integer; 
                                    CodPosicaoIdentificador2: Integer; 
                                    CodTipoIdentificador3: Integer; 
                                    CodPosicaoIdentificador3: Integer; 
                                    CodTipoIdentificador4: Integer; 
                                    CodPosicaoIdentificador4: Integer; CodEspecie: Integer; 
                                    CodAptidao: Integer; CodRaca: Integer; CodPelagem: Integer; 
                                    const IndSexo: WideString; CodFazendaManejoPai: Integer; 
                                    const CodAnimalPai: WideString; CodFazendaManejoMae: Integer; 
                                    const CodAnimalMae: WideString; CodRegimeAlimentar: Integer; 
                                    CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                                    CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                                    CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                                    const NumCNPJCPFCorrente: WideString; 
                                    CodPessoaCorrente: Integer; const TxtObservacao: WideString; 
                                    CodPessoaTecnico: Integer; const numCNPJCPFTecnico: WideString): Integer; dispid 204;
    function AlterarNaoEspecificado(CodAnimal: Integer; CodFazendaManejo: Integer; 
                                    const CodAnimalManejo: WideString; 
                                    const CodAnimalCertificadora: WideString; 
                                    CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                                    CodMicroRegiaoSISBOV: Integer; CodAnimalSisbov: Integer; 
                                    NumDVSisbov: Integer; DtaIdentificacaoSisbov: TDateTime; 
                                    const NumImovelIdentificacao: WideString; 
                                    CodPropriedadeIdentificacao: Integer; 
                                    CodFazendaIdentificacao: Integer; DtaNascimento: TDateTime; 
                                    CodFazendaNascimento: Integer; CodTipoIdentificador1: Integer; 
                                    CodPosicaoIdentificador1: Integer; 
                                    CodTipoIdentificador2: Integer; 
                                    CodPosicaoIdentificador2: Integer; 
                                    CodTipoIdentificador3: Integer; 
                                    CodPosicaoIdentificador3: Integer; 
                                    CodTipoIdentificador4: Integer; 
                                    CodPosicaoIdentificador4: Integer; CodRaca: Integer; 
                                    CodPelagem: Integer; CodRegimeAlimentar: Integer; 
                                    CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                                    CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                                    CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                                    const NumCNPJCPFCorrente: WideString; 
                                    CodPessoaCorrente: Integer; const TxtObservacao: WideString; 
                                    CodPessoaTecnico: Integer; const IndSexo: WideString): Integer; dispid 205;
    function InserirNaoEspecificados(QtdAnimais: Integer; CodFazendaManejo: Integer; 
                                     const CodInicialAnimalManejo: WideString; 
                                     const CodInicialAnimalCertificadora: WideString; 
                                     CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                                     CodMicroRegiaoSISBOV: Integer; 
                                     CodInicialAnimalSisbov: Integer; 
                                     const CodSituacaoSisBov: WideString; 
                                     DtaIdentificacaoSisbov: TDateTime; 
                                     const NumImovelIdentificacao: WideString; 
                                     CodPropriedadeIdentificacao: Integer; 
                                     CodFazendaIdentificacao: Integer; DtaNascimento: TDateTime; 
                                     CodTipoIdentificador1: Integer; 
                                     CodPosicaoIdentificador1: Integer; 
                                     CodTipoIdentificador2: Integer; 
                                     CodPosicaoIdentificador2: Integer; 
                                     CodTipoIdentificador3: Integer; 
                                     CodPosicaoIdentificador3: Integer; 
                                     CodTipoIdentificador4: Integer; 
                                     CodPosicaoIdentificador4: Integer; CodEspecie: Integer; 
                                     CodAptidao: Integer; CodRaca: Integer; CodPelagem: Integer; 
                                     const IndSexo: WideString; CodRegimeAlimentar: Integer; 
                                     CodCategoriaAnimal: Integer; CodTipoLugar: Integer; 
                                     CodLoteCorrente: Integer; CodLocalCorrente: Integer; 
                                     CodFazendaCorrente: Integer; CodPropriedadeCorrente: Integer; 
                                     const NumCNPJCPFCorrente: WideString; 
                                     CodPessoaCorrente: Integer; const TxtObservacao: WideString; 
                                     CodPessoaTecnico: Integer; const numCNPJCPFTecnico: WideString): Integer; dispid 206;
    function BuscarCaracteristicaAvaliacao(const CodAnimalManejo: WideString; 
                                           const SglCaracteristicaAvaliacao: WideString): Double; dispid 207;
    function BuscarPosicaoAnimalAvaliacaoCaracteristica(NumTela: Integer): Integer; dispid 208;
    function GerarRelatorioConsolidacaoCodigosSISBOV(const CodProdutor: WideString; 
                                                     const NumCNPJCPFProdutor: WideString; 
                                                     const NomProdutor: WideString; 
                                                     const NumImovelReceitaFederal: WideString; 
                                                     CodExportacao: Integer; 
                                                     const NomPropriedadeRural: WideString; 
                                                     const NomMunicipioPropriedade: WideString; 
                                                     CodEstadoPropriedade: Integer; 
                                                     DtaInicioIdentificacaoAnimal: TDateTime; 
                                                     DtaFimIdentificacaoAnimal: TDateTime; 
                                                     const NomPessoaTecnico: WideString; 
                                                     const numCNPJCPFTecnico: WideString; 
                                                     TipoRelatorio: Integer): WideString; dispid 209;
    function InventariarAnimaisPesquisados(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer): Integer; dispid 210;
    function ExcluirInventarioAnimaisPesquisados(CodPessoaProdutor: Integer; 
                                                 CodPropriedadeRural: Integer): Integer; dispid 211;
    function AtualizarDataAbate(CodPessoaProdutor: Integer; CodFazenda: Integer): Integer; dispid 212;
    function SolicitarAlteracaoPosse(CodPropriedadeRural: Integer; CodProdutorOrigem: Integer; 
                                     CodProdutorDestino: Integer; CodMotivoSolicitacao: Integer; 
                                     const Justificativa: WideString; 
                                     const NumeracaoEnvio: WideString): Integer; dispid 213;
    function ConsultarAnimaisAbatidos(CodFrigorifico: Integer; const Data: WideString): Integer; dispid 214;
    function BuscaNumDvSISBOV(CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                              CodMicroRegiaoSISBOV: Integer; CodAnimalSisbov: Integer): Integer; dispid 215;
  end;

// *********************************************************************//
// Interface: ILote
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F9D2300-9FBD-11D6-B075-00E07DAEF481}
// *********************************************************************//
  ILote = interface(IDispatch)
    ['{0F9D2300-9FBD-11D6-B075-00E07DAEF481}']
    function Get_CodPessoaProdutor: Integer; safecall;
    procedure Set_CodPessoaProdutor(Value: Integer); safecall;
    function Get_CodFazenda: Integer; safecall;
    procedure Set_CodFazenda(Value: Integer); safecall;
    function Get_CodLote: Integer; safecall;
    procedure Set_CodLote(Value: Integer); safecall;
    function Get_SglLote: WideString; safecall;
    procedure Set_SglLote(const Value: WideString); safecall;
    function Get_DesLote: WideString; safecall;
    procedure Set_DesLote(const Value: WideString); safecall;
    function Get_SglFazenda: WideString; safecall;
    procedure Set_SglFazenda(const Value: WideString); safecall;
    function Get_NomFazenda: WideString; safecall;
    procedure Set_NomFazenda(const Value: WideString); safecall;
    function Get_DtaCadastramento: TDateTime; safecall;
    procedure Set_DtaCadastramento(Value: TDateTime); safecall;
    property CodPessoaProdutor: Integer read Get_CodPessoaProdutor write Set_CodPessoaProdutor;
    property CodFazenda: Integer read Get_CodFazenda write Set_CodFazenda;
    property CodLote: Integer read Get_CodLote write Set_CodLote;
    property SglLote: WideString read Get_SglLote write Set_SglLote;
    property DesLote: WideString read Get_DesLote write Set_DesLote;
    property SglFazenda: WideString read Get_SglFazenda write Set_SglFazenda;
    property NomFazenda: WideString read Get_NomFazenda write Set_NomFazenda;
    property DtaCadastramento: TDateTime read Get_DtaCadastramento write Set_DtaCadastramento;
  end;

// *********************************************************************//
// DispIntf:  ILoteDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0F9D2300-9FBD-11D6-B075-00E07DAEF481}
// *********************************************************************//
  ILoteDisp = dispinterface
    ['{0F9D2300-9FBD-11D6-B075-00E07DAEF481}']
    property CodPessoaProdutor: Integer dispid 2;
    property CodFazenda: Integer dispid 3;
    property CodLote: Integer dispid 4;
    property SglLote: WideString dispid 5;
    property DesLote: WideString dispid 6;
    property SglFazenda: WideString dispid 7;
    property NomFazenda: WideString dispid 8;
    property DtaCadastramento: TDateTime dispid 1;
  end;

// *********************************************************************//
// Interface: ILotes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49BDB801-9FDC-11D6-B075-00E07DAEF481}
// *********************************************************************//
  ILotes = interface(IDispatch)
    ['{49BDB801-9FDC-11D6-B075-00E07DAEF481}']
    function Pesquisar(CodFazenda: Integer; const CodOrdenacao: WideString): Integer; safecall;
    function Inserir(CodFazenda: Integer; const SglLote: WideString; const DesLote: WideString): Integer; safecall;
    function Alterar(CodFazenda: Integer; CodLote: Integer; const SglLote: WideString; 
                     const DesLote: WideString): Integer; safecall;
    function Excluir(CodFazenda: Integer; CodLote: Integer): Integer; safecall;
    function Buscar(CodFazenda: Integer; CodLote: Integer): Integer; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    procedure Deslocar(NumDeslocamento: Integer); safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Get_Lote: ILote; safecall;
    property Lote: ILote read Get_Lote;
  end;

// *********************************************************************//
// DispIntf:  ILotesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49BDB801-9FDC-11D6-B075-00E07DAEF481}
// *********************************************************************//
  ILotesDisp = dispinterface
    ['{49BDB801-9FDC-11D6-B075-00E07DAEF481}']
    function Pesquisar(CodFazenda: Integer; const CodOrdenacao: WideString): Integer; dispid 1;
    function Inserir(CodFazenda: Integer; const SglLote: WideString; const DesLote: WideString): Integer; dispid 2;
    function Alterar(CodFazenda: Integer; CodLote: Integer; const SglLote: WideString; 
                     const DesLote: WideString): Integer; dispid 3;
    function Excluir(CodFazenda: Integer; CodLote: Integer): Integer; dispid 4;
    function Buscar(CodFazenda: Integer; CodLote: Integer): Integer; dispid 5;
    function BOF: WordBool; dispid 6;
    function EOF: WordBool; dispid 7;
    function NumeroRegistros: Integer; dispid 8;
    procedure IrAoPrimeiro; dispid 9;
    procedure IrAoUltimo; dispid 10;
    procedure IrAoProximo; dispid 11;
    procedure IrAoAnterior; dispid 12;
    procedure Posicionar(NumPosicao: Integer); dispid 13;
    procedure Deslocar(NumDeslocamento: Integer); dispid 14;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 15;
    procedure FecharPesquisa; dispid 16;
    property Lote: ILote readonly dispid 23;
  end;

// *********************************************************************//
// Interface: IRaca
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {25AFEE80-A2DC-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IRaca = interface(IDispatch)
    ['{25AFEE80-A2DC-11D6-B075-00E07DAEF481}']
    function Get_CodRaca: Integer; safecall;
    procedure Set_CodRaca(Value: Integer); safecall;
    function Get_SglRaca: WideString; safecall;
    procedure Set_SglRaca(const Value: WideString); safecall;
    function Get_DesRaca: WideString; safecall;
    procedure Set_DesRaca(const Value: WideString); safecall;
    function Get_IndRacaPura: WideString; safecall;
    procedure Set_IndRacaPura(const Value: WideString); safecall;
    function Get_CodRacaSisBov: WideString; safecall;
    procedure Set_CodRacaSisBov(const Value: WideString); safecall;
    function Get_SglEspecie: WideString; safecall;
    procedure Set_SglEspecie(const Value: WideString); safecall;
    function Get_DesEspecie: WideString; safecall;
    procedure Set_DesEspecie(const Value: WideString); safecall;
    function Get_CodEspecie: Integer; safecall;
    procedure Set_CodEspecie(Value: Integer); safecall;
    function Get_IndDefaultProdutor: WideString; safecall;
    procedure Set_IndDefaultProdutor(const Value: WideString); safecall;
    function Get_QtdPesoPadraoNascimento: Double; safecall;
    procedure Set_QtdPesoPadraoNascimento(Value: Double); safecall;
    function Get_QtdMinDiasGestacao: Integer; safecall;
    procedure Set_QtdMinDiasGestacao(Value: Integer); safecall;
    function Get_QtdMaxDiasGestacao: Integer; safecall;
    procedure Set_QtdMaxDiasGestacao(Value: Integer); safecall;
    function Get_CodRacaAbcz: WideString; safecall;
    procedure Set_CodRacaAbcz(const Value: WideString); safecall;
    property CodRaca: Integer read Get_CodRaca write Set_CodRaca;
    property SglRaca: WideString read Get_SglRaca write Set_SglRaca;
    property DesRaca: WideString read Get_DesRaca write Set_DesRaca;
    property IndRacaPura: WideString read Get_IndRacaPura write Set_IndRacaPura;
    property CodRacaSisBov: WideString read Get_CodRacaSisBov write Set_CodRacaSisBov;
    property SglEspecie: WideString read Get_SglEspecie write Set_SglEspecie;
    property DesEspecie: WideString read Get_DesEspecie write Set_DesEspecie;
    property CodEspecie: Integer read Get_CodEspecie write Set_CodEspecie;
    property IndDefaultProdutor: WideString read Get_IndDefaultProdutor write Set_IndDefaultProdutor;
    property QtdPesoPadraoNascimento: Double read Get_QtdPesoPadraoNascimento write Set_QtdPesoPadraoNascimento;
    property QtdMinDiasGestacao: Integer read Get_QtdMinDiasGestacao write Set_QtdMinDiasGestacao;
    property QtdMaxDiasGestacao: Integer read Get_QtdMaxDiasGestacao write Set_QtdMaxDiasGestacao;
    property CodRacaAbcz: WideString read Get_CodRacaAbcz write Set_CodRacaAbcz;
  end;

// *********************************************************************//
// DispIntf:  IRacaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {25AFEE80-A2DC-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IRacaDisp = dispinterface
    ['{25AFEE80-A2DC-11D6-B075-00E07DAEF481}']
    property CodRaca: Integer dispid 1;
    property SglRaca: WideString dispid 2;
    property DesRaca: WideString dispid 3;
    property IndRacaPura: WideString dispid 4;
    property CodRacaSisBov: WideString dispid 5;
    property SglEspecie: WideString dispid 8;
    property DesEspecie: WideString dispid 9;
    property CodEspecie: Integer dispid 10;
    property IndDefaultProdutor: WideString dispid 6;
    property QtdPesoPadraoNascimento: Double dispid 7;
    property QtdMinDiasGestacao: Integer dispid 11;
    property QtdMaxDiasGestacao: Integer dispid 12;
    property CodRacaAbcz: WideString dispid 201;
  end;

// *********************************************************************//
// Interface: ILocalidade
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D976AA57-2F58-476B-8114-09960BAC8142}
// *********************************************************************//
  ILocalidade = interface(IDispatch)
    ['{D976AA57-2F58-476B-8114-09960BAC8142}']
    function Get_CodLocalidade: Integer; safecall;
    procedure Set_CodLocalidade(Value: Integer); safecall;
    function Get_NomLocalidade: WideString; safecall;
    procedure Set_NomLocalidade(const Value: WideString); safecall;
    function Get_CodEstado: Integer; safecall;
    procedure Set_CodEstado(Value: Integer); safecall;
    function Get_SglEstado: WideString; safecall;
    procedure Set_SglEstado(const Value: WideString); safecall;
    function Get_NumLatitude: Integer; safecall;
    procedure Set_NumLatitude(Value: Integer); safecall;
    function Get_NumLongitude: Integer; safecall;
    procedure Set_NumLongitude(Value: Integer); safecall;
    function Get_CodMunicipio: Integer; safecall;
    procedure Set_CodMunicipio(Value: Integer); safecall;
    function Get_NomMunicipio: WideString; safecall;
    procedure Set_NomMunicipio(const Value: WideString); safecall;
    function Get_DesTipoLocalidade: WideString; safecall;
    procedure Set_DesTipoLocalidade(const Value: WideString); safecall;
    function Get_CodPais: Integer; safecall;
    procedure Set_CodPais(Value: Integer); safecall;
    function Get_NomPais: WideString; safecall;
    procedure Set_NomPais(const Value: WideString); safecall;
    function Get_CodEstadoSISBOV: Integer; safecall;
    procedure Set_CodEstadoSISBOV(Value: Integer); safecall;
    function Get_CodMicroRegiao: Integer; safecall;
    procedure Set_CodMicroRegiao(Value: Integer); safecall;
    function Get_NomMicroRegiao: WideString; safecall;
    procedure Set_NomMicroRegiao(const Value: WideString); safecall;
    function Get_CodMicroRegiaoSISBOV: Integer; safecall;
    procedure Set_CodMicroRegiaoSISBOV(Value: Integer); safecall;
    function Get_CodPaisSisBov: Integer; safecall;
    procedure Set_CodPaisSisBov(Value: Integer); safecall;
    function Get_NumMunicipioIBGE: WideString; safecall;
    procedure Set_NumMunicipioIBGE(const Value: WideString); safecall;
    function Get_DtaEfetivacaoCadastro: TDateTime; safecall;
    procedure Set_DtaEfetivacaoCadastro(Value: TDateTime); safecall;
    property CodLocalidade: Integer read Get_CodLocalidade write Set_CodLocalidade;
    property NomLocalidade: WideString read Get_NomLocalidade write Set_NomLocalidade;
    property CodEstado: Integer read Get_CodEstado write Set_CodEstado;
    property SglEstado: WideString read Get_SglEstado write Set_SglEstado;
    property NumLatitude: Integer read Get_NumLatitude write Set_NumLatitude;
    property NumLongitude: Integer read Get_NumLongitude write Set_NumLongitude;
    property CodMunicipio: Integer read Get_CodMunicipio write Set_CodMunicipio;
    property NomMunicipio: WideString read Get_NomMunicipio write Set_NomMunicipio;
    property DesTipoLocalidade: WideString read Get_DesTipoLocalidade write Set_DesTipoLocalidade;
    property CodPais: Integer read Get_CodPais write Set_CodPais;
    property NomPais: WideString read Get_NomPais write Set_NomPais;
    property CodEstadoSISBOV: Integer read Get_CodEstadoSISBOV write Set_CodEstadoSISBOV;
    property CodMicroRegiao: Integer read Get_CodMicroRegiao write Set_CodMicroRegiao;
    property NomMicroRegiao: WideString read Get_NomMicroRegiao write Set_NomMicroRegiao;
    property CodMicroRegiaoSISBOV: Integer read Get_CodMicroRegiaoSISBOV write Set_CodMicroRegiaoSISBOV;
    property CodPaisSisBov: Integer read Get_CodPaisSisBov write Set_CodPaisSisBov;
    property NumMunicipioIBGE: WideString read Get_NumMunicipioIBGE write Set_NumMunicipioIBGE;
    property DtaEfetivacaoCadastro: TDateTime read Get_DtaEfetivacaoCadastro write Set_DtaEfetivacaoCadastro;
  end;

// *********************************************************************//
// DispIntf:  ILocalidadeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D976AA57-2F58-476B-8114-09960BAC8142}
// *********************************************************************//
  ILocalidadeDisp = dispinterface
    ['{D976AA57-2F58-476B-8114-09960BAC8142}']
    property CodLocalidade: Integer dispid 1;
    property NomLocalidade: WideString dispid 2;
    property CodEstado: Integer dispid 3;
    property SglEstado: WideString dispid 4;
    property NumLatitude: Integer dispid 5;
    property NumLongitude: Integer dispid 6;
    property CodMunicipio: Integer dispid 7;
    property NomMunicipio: WideString dispid 8;
    property DesTipoLocalidade: WideString dispid 9;
    property CodPais: Integer dispid 10;
    property NomPais: WideString dispid 11;
    property CodEstadoSISBOV: Integer dispid 12;
    property CodMicroRegiao: Integer dispid 13;
    property NomMicroRegiao: WideString dispid 14;
    property CodMicroRegiaoSISBOV: Integer dispid 15;
    property CodPaisSisBov: Integer dispid 16;
    property NumMunicipioIBGE: WideString dispid 17;
    property DtaEfetivacaoCadastro: TDateTime dispid 19;
  end;

// *********************************************************************//
// Interface: ILocalidades
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED2C6249-FED8-4307-8929-B4765C60996F}
// *********************************************************************//
  ILocalidades = interface(IDispatch)
    ['{ED2C6249-FED8-4307-8929-B4765C60996F}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Get_Localidade: ILocalidade; safecall;
    function Pesquisar(CodPais: Integer; CodEstado: Integer; const NomLocalidade: WideString; 
                       CodMicroRegiao: Integer; const NomMicroRegiao: WideString; 
                       const NumMunicipioIBGE: WideString; const IndCadastroEfetivado: WideString; 
                       const CodTipoLocalidade: WideString; const CodOrdenacao: WideString): Integer; safecall;
    function Buscar(CodLocalidade: Integer; const CodTipoLocalidade: WideString): Integer; safecall;
    function Inserir(const NomLocalidade: WideString; CodLocalidadePai: Integer; 
                     NumLatitude: Integer; NumLogitude: Integer; CodMicroRegiao: Integer; 
                     const NumMunicipioIBGE: WideString; const CodTipoLocalidade: WideString): Integer; safecall;
    function Alterar(CodLocalidade: Integer; const NomLocalidade: WideString; NumLatitude: Integer; 
                     NumLongitude: Integer; CodMicroRegiao: Integer; 
                     const NumMunicipioIBGE: WideString; const CodTipoLocalidade: WideString): Integer; safecall;
    function Excluir(CodLocalidade: Integer; const CodTipoLocalidade: WideString): Integer; safecall;
    function EfetivarCadastro(CodLocalidade: Integer): Integer; safecall;
    function CancelarEfetivacao(CodLocalidade: Integer): Integer; safecall;
    property Localidade: ILocalidade read Get_Localidade;
  end;

// *********************************************************************//
// DispIntf:  ILocalidadesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ED2C6249-FED8-4307-8929-B4765C60996F}
// *********************************************************************//
  ILocalidadesDisp = dispinterface
    ['{ED2C6249-FED8-4307-8929-B4765C60996F}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    procedure FecharPesquisa; dispid 11;
    property Localidade: ILocalidade readonly dispid 12;
    function Pesquisar(CodPais: Integer; CodEstado: Integer; const NomLocalidade: WideString; 
                       CodMicroRegiao: Integer; const NomMicroRegiao: WideString; 
                       const NumMunicipioIBGE: WideString; const IndCadastroEfetivado: WideString; 
                       const CodTipoLocalidade: WideString; const CodOrdenacao: WideString): Integer; dispid 13;
    function Buscar(CodLocalidade: Integer; const CodTipoLocalidade: WideString): Integer; dispid 14;
    function Inserir(const NomLocalidade: WideString; CodLocalidadePai: Integer; 
                     NumLatitude: Integer; NumLogitude: Integer; CodMicroRegiao: Integer; 
                     const NumMunicipioIBGE: WideString; const CodTipoLocalidade: WideString): Integer; dispid 15;
    function Alterar(CodLocalidade: Integer; const NomLocalidade: WideString; NumLatitude: Integer; 
                     NumLongitude: Integer; CodMicroRegiao: Integer; 
                     const NumMunicipioIBGE: WideString; const CodTipoLocalidade: WideString): Integer; dispid 17;
    function Excluir(CodLocalidade: Integer; const CodTipoLocalidade: WideString): Integer; dispid 18;
    function EfetivarCadastro(CodLocalidade: Integer): Integer; dispid 16;
    function CancelarEfetivacao(CodLocalidade: Integer): Integer; dispid 19;
  end;

// *********************************************************************//
// Interface: IPelagem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8B086E60-A313-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPelagem = interface(IDispatch)
    ['{8B086E60-A313-11D6-B075-00E07DAEF481}']
    function Get_CodPelagem: Integer; safecall;
    procedure Set_CodPelagem(Value: Integer); safecall;
    function Get_DesPelagem: WideString; safecall;
    procedure Set_DesPelagem(const Value: WideString); safecall;
    function Get_SglPelagem: WideString; safecall;
    procedure Set_SglPelagem(const Value: WideString); safecall;
    function Get_IndRestritoSistema: WideString; safecall;
    property CodPelagem: Integer read Get_CodPelagem write Set_CodPelagem;
    property DesPelagem: WideString read Get_DesPelagem write Set_DesPelagem;
    property SglPelagem: WideString read Get_SglPelagem write Set_SglPelagem;
    property IndRestritoSistema: WideString read Get_IndRestritoSistema;
  end;

// *********************************************************************//
// DispIntf:  IPelagemDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8B086E60-A313-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPelagemDisp = dispinterface
    ['{8B086E60-A313-11D6-B075-00E07DAEF481}']
    property CodPelagem: Integer dispid 1;
    property DesPelagem: WideString dispid 2;
    property SglPelagem: WideString dispid 3;
    property IndRestritoSistema: WideString readonly dispid 201;
  end;

// *********************************************************************//
// Interface: IPessoaSecundaria
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63BDEEA0-A3DD-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPessoaSecundaria = interface(IDispatch)
    ['{63BDEEA0-A3DD-11D6-B075-00E07DAEF481}']
    function Get_CodPessoaProdutor: Integer; safecall;
    procedure Set_CodPessoaProdutor(Value: Integer); safecall;
    function Get_CodPessoaSecundaria: Integer; safecall;
    procedure Set_CodPessoaSecundaria(Value: Integer); safecall;
    function Get_NomPessoaSecundaria: WideString; safecall;
    procedure Set_NomPessoaSecundaria(const Value: WideString); safecall;
    function Get_NomReduzidoPessoaSecundaria: WideString; safecall;
    procedure Set_NomReduzidoPessoaSecundaria(const Value: WideString); safecall;
    function Get_CodNaturezaPessoa: WideString; safecall;
    procedure Set_CodNaturezaPessoa(const Value: WideString); safecall;
    function Get_NumCNPJCPF: WideString; safecall;
    procedure Set_NumCNPJCPF(const Value: WideString); safecall;
    function Get_NumCNPJCPFFormatado: WideString; safecall;
    procedure Set_NumCNPJCPFFormatado(const Value: WideString); safecall;
    function Get_TxtObservacao: WideString; safecall;
    procedure Set_TxtObservacao(const Value: WideString); safecall;
    function Get_DtaCadastramento: TDateTime; safecall;
    procedure Set_DtaCadastramento(Value: TDateTime); safecall;
    function Get_CodTipoContato1: Integer; safecall;
    procedure Set_CodTipoContato1(Value: Integer); safecall;
    function Get_TxtContato1: WideString; safecall;
    procedure Set_TxtContato1(const Value: WideString); safecall;
    function Get_CodTipoContato2: Integer; safecall;
    procedure Set_CodTipoContato2(Value: Integer); safecall;
    function Get_TxtContato2: WideString; safecall;
    procedure Set_TxtContato2(const Value: WideString); safecall;
    function Get_CodTipoContato3: Integer; safecall;
    procedure Set_CodTipoContato3(Value: Integer); safecall;
    function Get_TxtContato3: WideString; safecall;
    procedure Set_TxtContato3(const Value: WideString); safecall;
    function Get_CodTipoEndereco: Integer; safecall;
    procedure Set_CodTipoEndereco(Value: Integer); safecall;
    function Get_NomLogradouro: WideString; safecall;
    procedure Set_NomLogradouro(const Value: WideString); safecall;
    function Get_NomBairro: WideString; safecall;
    procedure Set_NomBairro(const Value: WideString); safecall;
    function Get_NumCEP: WideString; safecall;
    procedure Set_NumCEP(const Value: WideString); safecall;
    function Get_NomPais: WideString; safecall;
    procedure Set_NomPais(const Value: WideString); safecall;
    function Get_SglEstado: WideString; safecall;
    procedure Set_SglEstado(const Value: WideString); safecall;
    function Get_NomMunicipio: WideString; safecall;
    procedure Set_NomMunicipio(const Value: WideString); safecall;
    function Get_NomDistrito: WideString; safecall;
    procedure Set_NomDistrito(const Value: WideString); safecall;
    function Get_NumMunicipioIBGE: WideString; safecall;
    procedure Set_NumMunicipioIBGE(const Value: WideString); safecall;
    function Get_DesTipoContato1: WideString; safecall;
    procedure Set_DesTipoContato1(const Value: WideString); safecall;
    function Get_DesTipoContato2: WideString; safecall;
    procedure Set_DesTipoContato2(const Value: WideString); safecall;
    function Get_DesTipoContato3: WideString; safecall;
    procedure Set_DesTipoContato3(const Value: WideString); safecall;
    property CodPessoaProdutor: Integer read Get_CodPessoaProdutor write Set_CodPessoaProdutor;
    property CodPessoaSecundaria: Integer read Get_CodPessoaSecundaria write Set_CodPessoaSecundaria;
    property NomPessoaSecundaria: WideString read Get_NomPessoaSecundaria write Set_NomPessoaSecundaria;
    property NomReduzidoPessoaSecundaria: WideString read Get_NomReduzidoPessoaSecundaria write Set_NomReduzidoPessoaSecundaria;
    property CodNaturezaPessoa: WideString read Get_CodNaturezaPessoa write Set_CodNaturezaPessoa;
    property NumCNPJCPF: WideString read Get_NumCNPJCPF write Set_NumCNPJCPF;
    property NumCNPJCPFFormatado: WideString read Get_NumCNPJCPFFormatado write Set_NumCNPJCPFFormatado;
    property TxtObservacao: WideString read Get_TxtObservacao write Set_TxtObservacao;
    property DtaCadastramento: TDateTime read Get_DtaCadastramento write Set_DtaCadastramento;
    property CodTipoContato1: Integer read Get_CodTipoContato1 write Set_CodTipoContato1;
    property TxtContato1: WideString read Get_TxtContato1 write Set_TxtContato1;
    property CodTipoContato2: Integer read Get_CodTipoContato2 write Set_CodTipoContato2;
    property TxtContato2: WideString read Get_TxtContato2 write Set_TxtContato2;
    property CodTipoContato3: Integer read Get_CodTipoContato3 write Set_CodTipoContato3;
    property TxtContato3: WideString read Get_TxtContato3 write Set_TxtContato3;
    property CodTipoEndereco: Integer read Get_CodTipoEndereco write Set_CodTipoEndereco;
    property NomLogradouro: WideString read Get_NomLogradouro write Set_NomLogradouro;
    property NomBairro: WideString read Get_NomBairro write Set_NomBairro;
    property NumCEP: WideString read Get_NumCEP write Set_NumCEP;
    property NomPais: WideString read Get_NomPais write Set_NomPais;
    property SglEstado: WideString read Get_SglEstado write Set_SglEstado;
    property NomMunicipio: WideString read Get_NomMunicipio write Set_NomMunicipio;
    property NomDistrito: WideString read Get_NomDistrito write Set_NomDistrito;
    property NumMunicipioIBGE: WideString read Get_NumMunicipioIBGE write Set_NumMunicipioIBGE;
    property DesTipoContato1: WideString read Get_DesTipoContato1 write Set_DesTipoContato1;
    property DesTipoContato2: WideString read Get_DesTipoContato2 write Set_DesTipoContato2;
    property DesTipoContato3: WideString read Get_DesTipoContato3 write Set_DesTipoContato3;
  end;

// *********************************************************************//
// DispIntf:  IPessoaSecundariaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63BDEEA0-A3DD-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPessoaSecundariaDisp = dispinterface
    ['{63BDEEA0-A3DD-11D6-B075-00E07DAEF481}']
    property CodPessoaProdutor: Integer dispid 1;
    property CodPessoaSecundaria: Integer dispid 2;
    property NomPessoaSecundaria: WideString dispid 3;
    property NomReduzidoPessoaSecundaria: WideString dispid 4;
    property CodNaturezaPessoa: WideString dispid 5;
    property NumCNPJCPF: WideString dispid 6;
    property NumCNPJCPFFormatado: WideString dispid 7;
    property TxtObservacao: WideString dispid 8;
    property DtaCadastramento: TDateTime dispid 9;
    property CodTipoContato1: Integer dispid 10;
    property TxtContato1: WideString dispid 11;
    property CodTipoContato2: Integer dispid 12;
    property TxtContato2: WideString dispid 13;
    property CodTipoContato3: Integer dispid 14;
    property TxtContato3: WideString dispid 15;
    property CodTipoEndereco: Integer dispid 17;
    property NomLogradouro: WideString dispid 18;
    property NomBairro: WideString dispid 21;
    property NumCEP: WideString dispid 22;
    property NomPais: WideString dispid 23;
    property SglEstado: WideString dispid 24;
    property NomMunicipio: WideString dispid 25;
    property NomDistrito: WideString dispid 26;
    property NumMunicipioIBGE: WideString dispid 16;
    property DesTipoContato1: WideString dispid 20;
    property DesTipoContato2: WideString dispid 27;
    property DesTipoContato3: WideString dispid 28;
  end;

// *********************************************************************//
// Interface: IPapeisSecundarios
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DE71D8E4-A46A-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPapeisSecundarios = interface(IDispatch)
    ['{DE71D8E4-A46A-11D6-B075-00E07DAEF481}']
    function Pesquisar: Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  IPapeisSecundariosDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DE71D8E4-A46A-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPapeisSecundariosDisp = dispinterface
    ['{DE71D8E4-A46A-11D6-B075-00E07DAEF481}']
    function Pesquisar: Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
  end;

// *********************************************************************//
// Interface: IPessoasSecundarias
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DE71D8E8-A46A-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPessoasSecundarias = interface(IDispatch)
    ['{DE71D8E8-A46A-11D6-B075-00E07DAEF481}']
    function Pesquisar(CodPapelSecundario: Integer; const CodOrdenacao: WideString): Integer; safecall;
    function Inserir(const NomPessoaSecundaria: WideString; 
                     const NomReduzidoPessoaSecundaria: WideString; 
                     const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                     CodTipoContato1: Integer; const TxtContato1: WideString; 
                     CodTipoContato2: Integer; const TxtContato2: WideString; 
                     CodTipoContato3: Integer; const TxtContato3: WideString; 
                     CodTipoEndereco: Integer; const NomLogradouro: WideString; 
                     const NomBairro: WideString; const NumCEP: WideString; 
                     const NomPais: WideString; const SglEstado: WideString; 
                     const NomMunicipio: WideString; const NumMunicipioIBGE: WideString; 
                     const NomDistrito: WideString; const TxtObservacao: WideString): Integer; safecall;
    function Alterar(CodPessoaSecundaria: Integer; const NomPessoaSecundaria: WideString; 
                     const NomReduzidoPessoaSecundaria: WideString; 
                     const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                     CodTipoContato1: Integer; const TxtContato1: WideString; 
                     CodTipoContato2: Integer; const TxtContato2: WideString; 
                     CodTipoContato3: Integer; const TxtContato3: WideString; 
                     CodTipoEndereco: Integer; const NomLogradouro: WideString; 
                     const NomBairro: WideString; const NumCEP: WideString; 
                     const NomPais: WideString; const SglEstado: WideString; 
                     const NomMunicipio: WideString; const NumMunicipioIBGE: WideString; 
                     const NomDistrito: WideString; const TxtObservacao: WideString): Integer; safecall;
    function Excluir(CodPessoaSecundaria: Integer): Integer; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    function AdicionarPapelSecundario(CodPessoaSecundaria: Integer; CodPapelSecundario: Integer): Integer; safecall;
    function RetirarPapelSecundario(CodPessoaSecundaria: Integer; CodPapelSecundario: Integer): Integer; safecall;
    function PossuiPapelSecundario(CodPessoaSecundaria: Integer; CodPapelSecundario: Integer): Integer; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    procedure Deslocar(NumDeslocamento: Integer); safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Buscar(CodPessoaSecundaria: Integer): Integer; safecall;
    function Get_PessoaSecundaria: IPessoaSecundaria; safecall;
    property PessoaSecundaria: IPessoaSecundaria read Get_PessoaSecundaria;
  end;

// *********************************************************************//
// DispIntf:  IPessoasSecundariasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DE71D8E8-A46A-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPessoasSecundariasDisp = dispinterface
    ['{DE71D8E8-A46A-11D6-B075-00E07DAEF481}']
    function Pesquisar(CodPapelSecundario: Integer; const CodOrdenacao: WideString): Integer; dispid 12;
    function Inserir(const NomPessoaSecundaria: WideString; 
                     const NomReduzidoPessoaSecundaria: WideString; 
                     const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                     CodTipoContato1: Integer; const TxtContato1: WideString; 
                     CodTipoContato2: Integer; const TxtContato2: WideString; 
                     CodTipoContato3: Integer; const TxtContato3: WideString; 
                     CodTipoEndereco: Integer; const NomLogradouro: WideString; 
                     const NomBairro: WideString; const NumCEP: WideString; 
                     const NomPais: WideString; const SglEstado: WideString; 
                     const NomMunicipio: WideString; const NumMunicipioIBGE: WideString; 
                     const NomDistrito: WideString; const TxtObservacao: WideString): Integer; dispid 13;
    function Alterar(CodPessoaSecundaria: Integer; const NomPessoaSecundaria: WideString; 
                     const NomReduzidoPessoaSecundaria: WideString; 
                     const CodNaturezaPessoa: WideString; const NumCNPJCPF: WideString; 
                     CodTipoContato1: Integer; const TxtContato1: WideString; 
                     CodTipoContato2: Integer; const TxtContato2: WideString; 
                     CodTipoContato3: Integer; const TxtContato3: WideString; 
                     CodTipoEndereco: Integer; const NomLogradouro: WideString; 
                     const NomBairro: WideString; const NumCEP: WideString; 
                     const NomPais: WideString; const SglEstado: WideString; 
                     const NomMunicipio: WideString; const NumMunicipioIBGE: WideString; 
                     const NomDistrito: WideString; const TxtObservacao: WideString): Integer; dispid 14;
    function Excluir(CodPessoaSecundaria: Integer): Integer; dispid 15;
    function BOF: WordBool; dispid 16;
    function EOF: WordBool; dispid 17;
    function NumeroRegistros: Integer; dispid 18;
    procedure IrAoPrimeiro; dispid 19;
    procedure IrAoUltimo; dispid 20;
    function AdicionarPapelSecundario(CodPessoaSecundaria: Integer; CodPapelSecundario: Integer): Integer; dispid 21;
    function RetirarPapelSecundario(CodPessoaSecundaria: Integer; CodPapelSecundario: Integer): Integer; dispid 22;
    function PossuiPapelSecundario(CodPessoaSecundaria: Integer; CodPapelSecundario: Integer): Integer; dispid 23;
    procedure IrAoProximo; dispid 24;
    procedure IrAoAnterior; dispid 25;
    procedure Posicionar(NumPosicao: Integer); dispid 26;
    procedure Deslocar(NumDeslocamento: Integer); dispid 27;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 28;
    procedure FecharPesquisa; dispid 29;
    function Buscar(CodPessoaSecundaria: Integer): Integer; dispid 30;
    property PessoaSecundaria: IPessoaSecundaria readonly dispid 31;
  end;

// *********************************************************************//
// Interface: IFazendaTrabalho
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E8BB58C0-A72C-11D6-A34A-8CE9E2916B5D}
// *********************************************************************//
  IFazendaTrabalho = interface(IDispatch)
    ['{E8BB58C0-A72C-11D6-A34A-8CE9E2916B5D}']
    function Get_CodFazenda: Integer; safecall;
    procedure Set_CodFazenda(Value: Integer); safecall;
    function Get_SglFazenda: WideString; safecall;
    procedure Set_SglFazenda(const Value: WideString); safecall;
    function Get_NomFazenda: WideString; safecall;
    procedure Set_NomFazenda(const Value: WideString); safecall;
    function Get_DataUltimaVistoria: WideString; safecall;
    procedure Set_DataUltimaVistoria(const Value: WideString); safecall;
    function Get_StatusVistoria: WideString; safecall;
    procedure Set_StatusVistoria(const Value: WideString); safecall;
    property CodFazenda: Integer read Get_CodFazenda write Set_CodFazenda;
    property SglFazenda: WideString read Get_SglFazenda write Set_SglFazenda;
    property NomFazenda: WideString read Get_NomFazenda write Set_NomFazenda;
    property DataUltimaVistoria: WideString read Get_DataUltimaVistoria write Set_DataUltimaVistoria;
    property StatusVistoria: WideString read Get_StatusVistoria write Set_StatusVistoria;
  end;

// *********************************************************************//
// DispIntf:  IFazendaTrabalhoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E8BB58C0-A72C-11D6-A34A-8CE9E2916B5D}
// *********************************************************************//
  IFazendaTrabalhoDisp = dispinterface
    ['{E8BB58C0-A72C-11D6-A34A-8CE9E2916B5D}']
    property CodFazenda: Integer dispid 1;
    property SglFazenda: WideString dispid 2;
    property NomFazenda: WideString dispid 3;
    property DataUltimaVistoria: WideString dispid 201;
    property StatusVistoria: WideString dispid 202;
  end;

// *********************************************************************//
// Interface: IOpcoesEnvioComunicado
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4D912AC0-A7CA-11D6-A34A-EE976AE0AA5D}
// *********************************************************************//
  IOpcoesEnvioComunicado = interface(IDispatch)
    ['{4D912AC0-A7CA-11D6-A34A-EE976AE0AA5D}']
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(CodPapel: Integer): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IOpcoesEnvioComunicadoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4D912AC0-A7CA-11D6-A34A-EE976AE0AA5D}
// *********************************************************************//
  IOpcoesEnvioComunicadoDisp = dispinterface
    ['{4D912AC0-A7CA-11D6-A34A-EE976AE0AA5D}']
    function EOF: WordBool; dispid 1;
    procedure IrAoProximo; dispid 2;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 3;
    procedure FecharPesquisa; dispid 4;
    function Pesquisar(CodPapel: Integer): Integer; dispid 5;
  end;

// *********************************************************************//
// Interface: IPessoa
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4D912AC4-A7CA-11D6-A34A-EE976AE0AA5D}
// *********************************************************************//
  IPessoa = interface(IDispatch)
    ['{4D912AC4-A7CA-11D6-A34A-EE976AE0AA5D}']
    function Get_CodPessoa: Integer; safecall;
    procedure Set_CodPessoa(Value: Integer); safecall;
    function Get_NomPessoa: WideString; safecall;
    procedure Set_NomPessoa(const Value: WideString); safecall;
    function Get_NomReduzidoPessoa: WideString; safecall;
    procedure Set_NomReduzidoPessoa(const Value: WideString); safecall;
    function Get_CodNaturezaPessoa: WideString; safecall;
    procedure Set_CodNaturezaPessoa(const Value: WideString); safecall;
    function Get_NumCNPJCPF: WideString; safecall;
    procedure Set_NumCNPJCPF(const Value: WideString); safecall;
    function Get_NumCNPJCPFFormatado: WideString; safecall;
    procedure Set_NumCNPJCPFFormatado(const Value: WideString); safecall;
    function Get_DtaNascimento: TDateTime; safecall;
    procedure Set_DtaNascimento(Value: TDateTime); safecall;
    function Get_CodTelefonePrincipal: Integer; safecall;
    procedure Set_CodTelefonePrincipal(Value: Integer); safecall;
    function Get_SglTelefonePrincipal: WideString; safecall;
    procedure Set_SglTelefonePrincipal(const Value: WideString); safecall;
    function Get_TxtTelefonePrincipal: WideString; safecall;
    procedure Set_TxtTelefonePrincipal(const Value: WideString); safecall;
    function Get_CodEMailPrincipal: Integer; safecall;
    procedure Set_CodEMailPrincipal(Value: Integer); safecall;
    function Get_SglEMailPrincipal: WideString; safecall;
    procedure Set_SglEMailPrincipal(const Value: WideString); safecall;
    function Get_TxtEMailPrincipal: WideString; safecall;
    procedure Set_TxtEMailPrincipal(const Value: WideString); safecall;
    function Get_CodTipoEndereco: Integer; safecall;
    procedure Set_CodTipoEndereco(Value: Integer); safecall;
    function Get_SglTipoEndereco: WideString; safecall;
    procedure Set_SglTipoEndereco(const Value: WideString); safecall;
    function Get_DesTipoEndereco: WideString; safecall;
    procedure Set_DesTipoEndereco(const Value: WideString); safecall;
    function Get_NomLogradouro: WideString; safecall;
    procedure Set_NomLogradouro(const Value: WideString); safecall;
    function Get_NomBairro: WideString; safecall;
    procedure Set_NomBairro(const Value: WideString); safecall;
    function Get_NumCEP: WideString; safecall;
    procedure Set_NumCEP(const Value: WideString); safecall;
    function Get_CodPais: Integer; safecall;
    procedure Set_CodPais(Value: Integer); safecall;
    function Get_NomPais: WideString; safecall;
    procedure Set_NomPais(const Value: WideString); safecall;
    function Get_CodEstado: Integer; safecall;
    procedure Set_CodEstado(Value: Integer); safecall;
    function Get_SglEstado: WideString; safecall;
    procedure Set_SglEstado(const Value: WideString); safecall;
    function Get_CodMunicipio: Integer; safecall;
    procedure Set_CodMunicipio(Value: Integer); safecall;
    function Get_NomMunicipio: WideString; safecall;
    procedure Set_NomMunicipio(const Value: WideString); safecall;
    function Get_NumMunicipioIBGE: WideString; safecall;
    procedure Set_NumMunicipioIBGE(const Value: WideString); safecall;
    function Get_CodDistrito: Integer; safecall;
    procedure Set_CodDistrito(Value: Integer); safecall;
    function Get_NomDistrito: WideString; safecall;
    procedure Set_NomDistrito(const Value: WideString); safecall;
    function Get_TxtObservacao: WideString; safecall;
    procedure Set_TxtObservacao(const Value: WideString); safecall;
    function Get_DtaCadastramento: TDateTime; safecall;
    procedure Set_DtaCadastramento(Value: TDateTime); safecall;
    function Get_IndProdutorBloqueado: WideString; safecall;
    procedure Set_IndProdutorBloqueado(const Value: WideString); safecall;
    function Get_DtaEfetivacaoCadastro: TDateTime; safecall;
    procedure Set_DtaEfetivacaoCadastro(Value: TDateTime); safecall;
    function Get_CodGrauInstrucao: Integer; safecall;
    procedure Set_CodGrauInstrucao(Value: Integer); safecall;
    function Get_DesGrauInstrucao: WideString; safecall;
    procedure Set_DesGrauInstrucao(const Value: WideString); safecall;
    function Get_DesCursoSuperior: WideString; safecall;
    procedure Set_DesCursoSuperior(const Value: WideString); safecall;
    function Get_SglConselhoRegional: WideString; safecall;
    procedure Set_SglConselhoRegional(const Value: WideString); safecall;
    function Get_NumConselhoRegional: WideString; safecall;
    procedure Set_NumConselhoRegional(const Value: WideString); safecall;
    function Get_SglProdutor: WideString; safecall;
    procedure Set_SglProdutor(const Value: WideString); safecall;
    function Get_IndEfetivadoUmaVez: WideString; safecall;
    procedure Set_IndEfetivadoUmaVez(const Value: WideString); safecall;
    function Get_CodPessoaGestor: Integer; safecall;
    procedure Set_CodPessoaGestor(Value: Integer); safecall;
    function Get_NomGestor: WideString; safecall;
    procedure Set_NomGestor(const Value: WideString); safecall;
    function Get_NomReduzidoGestor: WideString; safecall;
    procedure Set_NomReduzidoGestor(const Value: WideString); safecall;
    function Get_Sexo: WideString; safecall;
    procedure Set_Sexo(const Value: WideString); safecall;
    function Get_NumIE: WideString; safecall;
    procedure Set_NumIE(const Value: WideString); safecall;
    function Get_DtaEfetivacaoCadastroTecnico: TDateTime; safecall;
    procedure Set_DtaEfetivacaoCadastroTecnico(Value: TDateTime); safecall;
    function Get_IndEfetivadoUmaVezTecnico: WideString; safecall;
    procedure Set_IndEfetivadoUmaVezTecnico(const Value: WideString); safecall;
    function Get_OrgaoIE: WideString; safecall;
    procedure Set_OrgaoIE(const Value: WideString); safecall;
    function Get_UFIE: WideString; safecall;
    procedure Set_UFIE(const Value: WideString); safecall;
    function Get_DtaExp: TDateTime; safecall;
    procedure Set_DtaExp(Value: TDateTime); safecall;
    function Get_IndTecnicoAtivo: WideString; safecall;
    procedure Set_IndTecnicoAtivo(const Value: WideString); safecall;
    property CodPessoa: Integer read Get_CodPessoa write Set_CodPessoa;
    property NomPessoa: WideString read Get_NomPessoa write Set_NomPessoa;
    property NomReduzidoPessoa: WideString read Get_NomReduzidoPessoa write Set_NomReduzidoPessoa;
    property CodNaturezaPessoa: WideString read Get_CodNaturezaPessoa write Set_CodNaturezaPessoa;
    property NumCNPJCPF: WideString read Get_NumCNPJCPF write Set_NumCNPJCPF;
    property NumCNPJCPFFormatado: WideString read Get_NumCNPJCPFFormatado write Set_NumCNPJCPFFormatado;
    property DtaNascimento: TDateTime read Get_DtaNascimento write Set_DtaNascimento;
    property CodTelefonePrincipal: Integer read Get_CodTelefonePrincipal write Set_CodTelefonePrincipal;
    property SglTelefonePrincipal: WideString read Get_SglTelefonePrincipal write Set_SglTelefonePrincipal;
    property TxtTelefonePrincipal: WideString read Get_TxtTelefonePrincipal write Set_TxtTelefonePrincipal;
    property CodEMailPrincipal: Integer read Get_CodEMailPrincipal write Set_CodEMailPrincipal;
    property SglEMailPrincipal: WideString read Get_SglEMailPrincipal write Set_SglEMailPrincipal;
    property TxtEMailPrincipal: WideString read Get_TxtEMailPrincipal write Set_TxtEMailPrincipal;
    property CodTipoEndereco: Integer read Get_CodTipoEndereco write Set_CodTipoEndereco;
    property SglTipoEndereco: WideString read Get_SglTipoEndereco write Set_SglTipoEndereco;
    property DesTipoEndereco: WideString read Get_DesTipoEndereco write Set_DesTipoEndereco;
    property NomLogradouro: WideString read Get_NomLogradouro write Set_NomLogradouro;
    property NomBairro: WideString read Get_NomBairro write Set_NomBairro;
    property NumCEP: WideString read Get_NumCEP write Set_NumCEP;
    property CodPais: Integer read Get_CodPais write Set_CodPais;
    property NomPais: WideString read Get_NomPais write Set_NomPais;
    property CodEstado: Integer read Get_CodEstado write Set_CodEstado;
    property SglEstado: WideString read Get_SglEstado write Set_SglEstado;
    property CodMunicipio: Integer read Get_CodMunicipio write Set_CodMunicipio;
    property NomMunicipio: WideString read Get_NomMunicipio write Set_NomMunicipio;
    property NumMunicipioIBGE: WideString read Get_NumMunicipioIBGE write Set_NumMunicipioIBGE;
    property CodDistrito: Integer read Get_CodDistrito write Set_CodDistrito;
    property NomDistrito: WideString read Get_NomDistrito write Set_NomDistrito;
    property TxtObservacao: WideString read Get_TxtObservacao write Set_TxtObservacao;
    property DtaCadastramento: TDateTime read Get_DtaCadastramento write Set_DtaCadastramento;
    property IndProdutorBloqueado: WideString read Get_IndProdutorBloqueado write Set_IndProdutorBloqueado;
    property DtaEfetivacaoCadastro: TDateTime read Get_DtaEfetivacaoCadastro write Set_DtaEfetivacaoCadastro;
    property CodGrauInstrucao: Integer read Get_CodGrauInstrucao write Set_CodGrauInstrucao;
    property DesGrauInstrucao: WideString read Get_DesGrauInstrucao write Set_DesGrauInstrucao;
    property DesCursoSuperior: WideString read Get_DesCursoSuperior write Set_DesCursoSuperior;
    property SglConselhoRegional: WideString read Get_SglConselhoRegional write Set_SglConselhoRegional;
    property NumConselhoRegional: WideString read Get_NumConselhoRegional write Set_NumConselhoRegional;
    property SglProdutor: WideString read Get_SglProdutor write Set_SglProdutor;
    property IndEfetivadoUmaVez: WideString read Get_IndEfetivadoUmaVez write Set_IndEfetivadoUmaVez;
    property CodPessoaGestor: Integer read Get_CodPessoaGestor write Set_CodPessoaGestor;
    property NomGestor: WideString read Get_NomGestor write Set_NomGestor;
    property NomReduzidoGestor: WideString read Get_NomReduzidoGestor write Set_NomReduzidoGestor;
    property Sexo: WideString read Get_Sexo write Set_Sexo;
    property NumIE: WideString read Get_NumIE write Set_NumIE;
    property DtaEfetivacaoCadastroTecnico: TDateTime read Get_DtaEfetivacaoCadastroTecnico write Set_DtaEfetivacaoCadastroTecnico;
    property IndEfetivadoUmaVezTecnico: WideString read Get_IndEfetivadoUmaVezTecnico write Set_IndEfetivadoUmaVezTecnico;
    property OrgaoIE: WideString read Get_OrgaoIE write Set_OrgaoIE;
    property UFIE: WideString read Get_UFIE write Set_UFIE;
    property DtaExp: TDateTime read Get_DtaExp write Set_DtaExp;
    property IndTecnicoAtivo: WideString read Get_IndTecnicoAtivo write Set_IndTecnicoAtivo;
  end;

// *********************************************************************//
// DispIntf:  IPessoaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4D912AC4-A7CA-11D6-A34A-EE976AE0AA5D}
// *********************************************************************//
  IPessoaDisp = dispinterface
    ['{4D912AC4-A7CA-11D6-A34A-EE976AE0AA5D}']
    property CodPessoa: Integer dispid 1;
    property NomPessoa: WideString dispid 2;
    property NomReduzidoPessoa: WideString dispid 3;
    property CodNaturezaPessoa: WideString dispid 4;
    property NumCNPJCPF: WideString dispid 5;
    property NumCNPJCPFFormatado: WideString dispid 6;
    property DtaNascimento: TDateTime dispid 7;
    property CodTelefonePrincipal: Integer dispid 8;
    property SglTelefonePrincipal: WideString dispid 9;
    property TxtTelefonePrincipal: WideString dispid 10;
    property CodEMailPrincipal: Integer dispid 11;
    property SglEMailPrincipal: WideString dispid 12;
    property TxtEMailPrincipal: WideString dispid 13;
    property CodTipoEndereco: Integer dispid 14;
    property SglTipoEndereco: WideString dispid 15;
    property DesTipoEndereco: WideString dispid 16;
    property NomLogradouro: WideString dispid 17;
    property NomBairro: WideString dispid 18;
    property NumCEP: WideString dispid 19;
    property CodPais: Integer dispid 20;
    property NomPais: WideString dispid 21;
    property CodEstado: Integer dispid 22;
    property SglEstado: WideString dispid 23;
    property CodMunicipio: Integer dispid 24;
    property NomMunicipio: WideString dispid 25;
    property NumMunicipioIBGE: WideString dispid 26;
    property CodDistrito: Integer dispid 27;
    property NomDistrito: WideString dispid 28;
    property TxtObservacao: WideString dispid 29;
    property DtaCadastramento: TDateTime dispid 30;
    property IndProdutorBloqueado: WideString dispid 31;
    property DtaEfetivacaoCadastro: TDateTime dispid 32;
    property CodGrauInstrucao: Integer dispid 36;
    property DesGrauInstrucao: WideString dispid 37;
    property DesCursoSuperior: WideString dispid 38;
    property SglConselhoRegional: WideString dispid 39;
    property NumConselhoRegional: WideString dispid 40;
    property SglProdutor: WideString dispid 41;
    property IndEfetivadoUmaVez: WideString dispid 33;
    property CodPessoaGestor: Integer dispid 201;
    property NomGestor: WideString dispid 202;
    property NomReduzidoGestor: WideString dispid 203;
    property Sexo: WideString dispid 204;
    property NumIE: WideString dispid 205;
    property DtaEfetivacaoCadastroTecnico: TDateTime dispid 206;
    property IndEfetivadoUmaVezTecnico: WideString dispid 207;
    property OrgaoIE: WideString dispid 208;
    property UFIE: WideString dispid 209;
    property DtaExp: TDateTime dispid 210;
    property IndTecnicoAtivo: WideString dispid 211;
  end;

// *********************************************************************//
// Interface: IPais
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1420EA00-A85B-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPais = interface(IDispatch)
    ['{1420EA00-A85B-11D6-B075-00E07DAEF481}']
    function Get_CodPais: Integer; safecall;
    procedure Set_CodPais(Value: Integer); safecall;
    function Get_NomPais: WideString; safecall;
    procedure Set_NomPais(const Value: WideString); safecall;
    function Get_CodPaisSisBov: Integer; safecall;
    procedure Set_CodPaisSisBov(Value: Integer); safecall;
    property CodPais: Integer read Get_CodPais write Set_CodPais;
    property NomPais: WideString read Get_NomPais write Set_NomPais;
    property CodPaisSisBov: Integer read Get_CodPaisSisBov write Set_CodPaisSisBov;
  end;

// *********************************************************************//
// DispIntf:  IPaisDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1420EA00-A85B-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPaisDisp = dispinterface
    ['{1420EA00-A85B-11D6-B075-00E07DAEF481}']
    property CodPais: Integer dispid 1;
    property NomPais: WideString dispid 2;
    property CodPaisSisBov: Integer dispid 3;
  end;

// *********************************************************************//
// Interface: IEstado
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9FFAFEA0-A868-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IEstado = interface(IDispatch)
    ['{9FFAFEA0-A868-11D6-B075-00E07DAEF481}']
    function Get_CodEstado: Integer; safecall;
    procedure Set_CodEstado(Value: Integer); safecall;
    function Get_SglEstado: WideString; safecall;
    procedure Set_SglEstado(const Value: WideString); safecall;
    function Get_NomEstado: WideString; safecall;
    procedure Set_NomEstado(const Value: WideString); safecall;
    function Get_CodEstadoSISBOV: Integer; safecall;
    procedure Set_CodEstadoSISBOV(Value: Integer); safecall;
    function Get_CodPais: Integer; safecall;
    procedure Set_CodPais(Value: Integer); safecall;
    function Get_NomPais: WideString; safecall;
    procedure Set_NomPais(const Value: WideString); safecall;
    function Get_CodPaisSisBov: Integer; safecall;
    procedure Set_CodPaisSisBov(Value: Integer); safecall;
    property CodEstado: Integer read Get_CodEstado write Set_CodEstado;
    property SglEstado: WideString read Get_SglEstado write Set_SglEstado;
    property NomEstado: WideString read Get_NomEstado write Set_NomEstado;
    property CodEstadoSISBOV: Integer read Get_CodEstadoSISBOV write Set_CodEstadoSISBOV;
    property CodPais: Integer read Get_CodPais write Set_CodPais;
    property NomPais: WideString read Get_NomPais write Set_NomPais;
    property CodPaisSisBov: Integer read Get_CodPaisSisBov write Set_CodPaisSisBov;
  end;

// *********************************************************************//
// DispIntf:  IEstadoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9FFAFEA0-A868-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IEstadoDisp = dispinterface
    ['{9FFAFEA0-A868-11D6-B075-00E07DAEF481}']
    property CodEstado: Integer dispid 1;
    property SglEstado: WideString dispid 2;
    property NomEstado: WideString dispid 3;
    property CodEstadoSISBOV: Integer dispid 4;
    property CodPais: Integer dispid 5;
    property NomPais: WideString dispid 6;
    property CodPaisSisBov: Integer dispid 7;
  end;

// *********************************************************************//
// Interface: ITiposContato
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27BF4147-17CA-49FD-A0D3-E7D1B9E34BFD}
// *********************************************************************//
  ITiposContato = interface(IDispatch)
    ['{27BF4147-17CA-49FD-A0D3-E7D1B9E34BFD}']
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposContatoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {27BF4147-17CA-49FD-A0D3-E7D1B9E34BFD}
// *********************************************************************//
  ITiposContatoDisp = dispinterface
    ['{27BF4147-17CA-49FD-A0D3-E7D1B9E34BFD}']
    function EOF: WordBool; dispid 1;
    procedure IrAoProximo; dispid 2;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 3;
    procedure FecharPesquisa; dispid 4;
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 5;
  end;

// *********************************************************************//
// Interface: ITiposEndereco
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {035E9A38-AABE-4908-86BA-CC2315A258A7}
// *********************************************************************//
  ITiposEndereco = interface(IDispatch)
    ['{035E9A38-AABE-4908-86BA-CC2315A258A7}']
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposEnderecoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {035E9A38-AABE-4908-86BA-CC2315A258A7}
// *********************************************************************//
  ITiposEnderecoDisp = dispinterface
    ['{035E9A38-AABE-4908-86BA-CC2315A258A7}']
    function EOF: WordBool; dispid 1;
    procedure IrAoProximo; dispid 2;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 3;
    procedure FecharPesquisa; dispid 4;
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 5;
  end;

// *********************************************************************//
// Interface: IMicroRegiao
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E0D75E0-A91F-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IMicroRegiao = interface(IDispatch)
    ['{7E0D75E0-A91F-11D6-B075-00E07DAEF481}']
    function Get_CodPais: Integer; safecall;
    procedure Set_CodPais(Value: Integer); safecall;
    function Get_NomPais: WideString; safecall;
    procedure Set_NomPais(const Value: WideString); safecall;
    function Get_CodPaisSisBov: Integer; safecall;
    procedure Set_CodPaisSisBov(Value: Integer); safecall;
    function Get_CodEstado: Integer; safecall;
    procedure Set_CodEstado(Value: Integer); safecall;
    function Get_SglEstado: WideString; safecall;
    procedure Set_SglEstado(const Value: WideString); safecall;
    function Get_CodEstadoSISBOV: Integer; safecall;
    procedure Set_CodEstadoSISBOV(Value: Integer); safecall;
    function Get_CodMicroRegiao: Integer; safecall;
    procedure Set_CodMicroRegiao(Value: Integer); safecall;
    function Get_NomMicroRegiao: WideString; safecall;
    procedure Set_NomMicroRegiao(const Value: WideString); safecall;
    function Get_CodMicroRegiaoSISBOV: Integer; safecall;
    procedure Set_CodMicroRegiaoSISBOV(Value: Integer); safecall;
    property CodPais: Integer read Get_CodPais write Set_CodPais;
    property NomPais: WideString read Get_NomPais write Set_NomPais;
    property CodPaisSisBov: Integer read Get_CodPaisSisBov write Set_CodPaisSisBov;
    property CodEstado: Integer read Get_CodEstado write Set_CodEstado;
    property SglEstado: WideString read Get_SglEstado write Set_SglEstado;
    property CodEstadoSISBOV: Integer read Get_CodEstadoSISBOV write Set_CodEstadoSISBOV;
    property CodMicroRegiao: Integer read Get_CodMicroRegiao write Set_CodMicroRegiao;
    property NomMicroRegiao: WideString read Get_NomMicroRegiao write Set_NomMicroRegiao;
    property CodMicroRegiaoSISBOV: Integer read Get_CodMicroRegiaoSISBOV write Set_CodMicroRegiaoSISBOV;
  end;

// *********************************************************************//
// DispIntf:  IMicroRegiaoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E0D75E0-A91F-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IMicroRegiaoDisp = dispinterface
    ['{7E0D75E0-A91F-11D6-B075-00E07DAEF481}']
    property CodPais: Integer dispid 1;
    property NomPais: WideString dispid 2;
    property CodPaisSisBov: Integer dispid 3;
    property CodEstado: Integer dispid 4;
    property SglEstado: WideString dispid 5;
    property CodEstadoSISBOV: Integer dispid 6;
    property CodMicroRegiao: Integer dispid 7;
    property NomMicroRegiao: WideString dispid 8;
    property CodMicroRegiaoSISBOV: Integer dispid 9;
  end;

// *********************************************************************//
// Interface: IPropriedadeRural
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {201FF6E0-AC82-11D6-A34A-D3BEB0108A5D}
// *********************************************************************//
  IPropriedadeRural = interface(IDispatch)
    ['{201FF6E0-AC82-11D6-A34A-D3BEB0108A5D}']
    function Get_CodPropriedadeRural: Integer; safecall;
    procedure Set_CodPropriedadeRural(Value: Integer); safecall;
    function Get_NomPropriedadeRural: WideString; safecall;
    procedure Set_NomPropriedadeRural(const Value: WideString); safecall;
    function Get_NumImovelReceitaFederal: WideString; safecall;
    procedure Set_NumImovelReceitaFederal(const Value: WideString); safecall;
    function Get_NumLatitude: Integer; safecall;
    procedure Set_NumLatitude(Value: Integer); safecall;
    function Get_NumLongitude: Integer; safecall;
    procedure Set_NumLongitude(Value: Integer); safecall;
    function Get_QtdArea: Double; safecall;
    procedure Set_QtdArea(Value: Double); safecall;
    function Get_NomLogradouro: WideString; safecall;
    procedure Set_NomLogradouro(const Value: WideString); safecall;
    function Get_NomBairro: WideString; safecall;
    procedure Set_NomBairro(const Value: WideString); safecall;
    function Get_NumCEP: WideString; safecall;
    procedure Set_NumCEP(const Value: WideString); safecall;
    function Get_CodPais: Integer; safecall;
    procedure Set_CodPais(Value: Integer); safecall;
    function Get_NomPais: WideString; safecall;
    procedure Set_NomPais(const Value: WideString); safecall;
    function Get_CodPaisSisBov: Integer; safecall;
    procedure Set_CodPaisSisBov(Value: Integer); safecall;
    function Get_CodEstado: Integer; safecall;
    procedure Set_CodEstado(Value: Integer); safecall;
    function Get_SglEstado: WideString; safecall;
    procedure Set_SglEstado(const Value: WideString); safecall;
    function Get_CodEstadoSISBOV: Integer; safecall;
    procedure Set_CodEstadoSISBOV(Value: Integer); safecall;
    function Get_CodMicroRegiao: Integer; safecall;
    procedure Set_CodMicroRegiao(Value: Integer); safecall;
    function Get_NomMicroRegiao: WideString; safecall;
    procedure Set_NomMicroRegiao(const Value: WideString); safecall;
    function Get_CodMicroRegiaoSISBOV: Integer; safecall;
    procedure Set_CodMicroRegiaoSISBOV(Value: Integer); safecall;
    function Get_CodMunicipio: Integer; safecall;
    procedure Set_CodMunicipio(Value: Integer); safecall;
    function Get_NomMunicipio: WideString; safecall;
    procedure Set_NomMunicipio(const Value: WideString); safecall;
    function Get_CodDistrito: Integer; safecall;
    procedure Set_CodDistrito(Value: Integer); safecall;
    function Get_NomDistrito: WideString; safecall;
    procedure Set_NomDistrito(const Value: WideString); safecall;
    function Get_NomPessoaContato: WideString; safecall;
    procedure Set_NomPessoaContato(const Value: WideString); safecall;
    function Get_NumTelefone: WideString; safecall;
    procedure Set_NumTelefone(const Value: WideString); safecall;
    function Get_NumFax: WideString; safecall;
    procedure Set_NumFax(const Value: WideString); safecall;
    function Get_NomLogradouroCorrespondencia: WideString; safecall;
    procedure Set_NomLogradouroCorrespondencia(const Value: WideString); safecall;
    function Get_NomBairroCorrespondencia: WideString; safecall;
    procedure Set_NomBairroCorrespondencia(const Value: WideString); safecall;
    function Get_NumCEPCorrespondencia: WideString; safecall;
    procedure Set_NumCEPCorrespondencia(const Value: WideString); safecall;
    function Get_CodPaisCorrespondencia: Integer; safecall;
    procedure Set_CodPaisCorrespondencia(Value: Integer); safecall;
    function Get_NomPaisCorrespondencia: WideString; safecall;
    procedure Set_NomPaisCorrespondencia(const Value: WideString); safecall;
    function Get_CodPaisSisbovCorrespondencia: Integer; safecall;
    procedure Set_CodPaisSisbovCorrespondencia(Value: Integer); safecall;
    function Get_CodEstadoCorrespondencia: Integer; safecall;
    procedure Set_CodEstadoCorrespondencia(Value: Integer); safecall;
    function Get_SglEstadoCorrespondencia: WideString; safecall;
    procedure Set_SglEstadoCorrespondencia(const Value: WideString); safecall;
    function Get_CodEstadoSisbovCorrespondencia: Integer; safecall;
    procedure Set_CodEstadoSisbovCorrespondencia(Value: Integer); safecall;
    function Get_CodMunicipioCorrespondencia: Integer; safecall;
    procedure Set_CodMunicipioCorrespondencia(Value: Integer); safecall;
    function Get_NomMunicipioCorrespondencia: WideString; safecall;
    procedure Set_NomMunicipioCorrespondencia(const Value: WideString); safecall;
    function Get_CodDistritoCorrespondencia: Integer; safecall;
    procedure Set_CodDistritoCorrespondencia(Value: Integer); safecall;
    function Get_NomDistritoCorrespondencia: WideString; safecall;
    procedure Set_NomDistritoCorrespondencia(const Value: WideString); safecall;
    function Get_DtaInicioCertificacao: TDateTime; safecall;
    procedure Set_DtaInicioCertificacao(Value: TDateTime); safecall;
    function Get_DtaCadastramento: TDateTime; safecall;
    procedure Set_DtaCadastramento(Value: TDateTime); safecall;
    function Get_DtaEfetivacaoCadastro: TDateTime; safecall;
    procedure Set_DtaEfetivacaoCadastro(Value: TDateTime); safecall;
    function Get_TxtObservacao: WideString; safecall;
    procedure Set_TxtObservacao(const Value: WideString); safecall;
    function Get_IndEfetivadoUmaVez: WideString; safecall;
    procedure Set_IndEfetivadoUmaVez(const Value: WideString); safecall;
    function Get_CodTipoInscricao: Integer; safecall;
    procedure Set_CodTipoInscricao(Value: Integer); safecall;
    function Get_OrientacaoLat: WideString; safecall;
    procedure Set_OrientacaoLat(const Value: WideString); safecall;
    function Get_OrientacaoLon: WideString; safecall;
    procedure Set_OrientacaoLon(const Value: WideString); safecall;
    function Get_CodPessoaProprietario: Integer; safecall;
    procedure Set_CodPessoaProprietario(Value: Integer); safecall;
    function Get_NomPessoaProprietario: WideString; safecall;
    procedure Set_NomPessoaProprietario(const Value: WideString); safecall;
    function Get_CodNaturezaPessoaProp: WideString; safecall;
    procedure Set_CodNaturezaPessoaProp(const Value: WideString); safecall;
    function Get_NumCNPJCPFFormatadoProp: WideString; safecall;
    procedure Set_NumCNPJCPFFormatadoProp(const Value: WideString); safecall;
    function Get_CodTipoPropriedadeRural: Integer; safecall;
    procedure Set_CodTipoPropriedadeRural(Value: Integer); safecall;
    function Get_DesTipoPropriedadeRural: WideString; safecall;
    procedure Set_DesTipoPropriedadeRural(const Value: WideString); safecall;
    function Get_CodIdPropriedadeSisbov: Integer; safecall;
    procedure Set_CodIdPropriedadeSisbov(Value: Integer); safecall;
    function Get_DtaInicioConfinamento: TDateTime; safecall;
    procedure Set_DtaInicioConfinamento(Value: TDateTime); safecall;
    function Get_DtaFimConfinamento: TDateTime; safecall;
    procedure Set_DtaFimConfinamento(Value: TDateTime); safecall;
    function Get_DtaInicioPeriodoAjusteRebanho: TDateTime; safecall;
    procedure Set_DtaInicioPeriodoAjusteRebanho(Value: TDateTime); safecall;
    property CodPropriedadeRural: Integer read Get_CodPropriedadeRural write Set_CodPropriedadeRural;
    property NomPropriedadeRural: WideString read Get_NomPropriedadeRural write Set_NomPropriedadeRural;
    property NumImovelReceitaFederal: WideString read Get_NumImovelReceitaFederal write Set_NumImovelReceitaFederal;
    property NumLatitude: Integer read Get_NumLatitude write Set_NumLatitude;
    property NumLongitude: Integer read Get_NumLongitude write Set_NumLongitude;
    property QtdArea: Double read Get_QtdArea write Set_QtdArea;
    property NomLogradouro: WideString read Get_NomLogradouro write Set_NomLogradouro;
    property NomBairro: WideString read Get_NomBairro write Set_NomBairro;
    property NumCEP: WideString read Get_NumCEP write Set_NumCEP;
    property CodPais: Integer read Get_CodPais write Set_CodPais;
    property NomPais: WideString read Get_NomPais write Set_NomPais;
    property CodPaisSisBov: Integer read Get_CodPaisSisBov write Set_CodPaisSisBov;
    property CodEstado: Integer read Get_CodEstado write Set_CodEstado;
    property SglEstado: WideString read Get_SglEstado write Set_SglEstado;
    property CodEstadoSISBOV: Integer read Get_CodEstadoSISBOV write Set_CodEstadoSISBOV;
    property CodMicroRegiao: Integer read Get_CodMicroRegiao write Set_CodMicroRegiao;
    property NomMicroRegiao: WideString read Get_NomMicroRegiao write Set_NomMicroRegiao;
    property CodMicroRegiaoSISBOV: Integer read Get_CodMicroRegiaoSISBOV write Set_CodMicroRegiaoSISBOV;
    property CodMunicipio: Integer read Get_CodMunicipio write Set_CodMunicipio;
    property NomMunicipio: WideString read Get_NomMunicipio write Set_NomMunicipio;
    property CodDistrito: Integer read Get_CodDistrito write Set_CodDistrito;
    property NomDistrito: WideString read Get_NomDistrito write Set_NomDistrito;
    property NomPessoaContato: WideString read Get_NomPessoaContato write Set_NomPessoaContato;
    property NumTelefone: WideString read Get_NumTelefone write Set_NumTelefone;
    property NumFax: WideString read Get_NumFax write Set_NumFax;
    property NomLogradouroCorrespondencia: WideString read Get_NomLogradouroCorrespondencia write Set_NomLogradouroCorrespondencia;
    property NomBairroCorrespondencia: WideString read Get_NomBairroCorrespondencia write Set_NomBairroCorrespondencia;
    property NumCEPCorrespondencia: WideString read Get_NumCEPCorrespondencia write Set_NumCEPCorrespondencia;
    property CodPaisCorrespondencia: Integer read Get_CodPaisCorrespondencia write Set_CodPaisCorrespondencia;
    property NomPaisCorrespondencia: WideString read Get_NomPaisCorrespondencia write Set_NomPaisCorrespondencia;
    property CodPaisSisbovCorrespondencia: Integer read Get_CodPaisSisbovCorrespondencia write Set_CodPaisSisbovCorrespondencia;
    property CodEstadoCorrespondencia: Integer read Get_CodEstadoCorrespondencia write Set_CodEstadoCorrespondencia;
    property SglEstadoCorrespondencia: WideString read Get_SglEstadoCorrespondencia write Set_SglEstadoCorrespondencia;
    property CodEstadoSisbovCorrespondencia: Integer read Get_CodEstadoSisbovCorrespondencia write Set_CodEstadoSisbovCorrespondencia;
    property CodMunicipioCorrespondencia: Integer read Get_CodMunicipioCorrespondencia write Set_CodMunicipioCorrespondencia;
    property NomMunicipioCorrespondencia: WideString read Get_NomMunicipioCorrespondencia write Set_NomMunicipioCorrespondencia;
    property CodDistritoCorrespondencia: Integer read Get_CodDistritoCorrespondencia write Set_CodDistritoCorrespondencia;
    property NomDistritoCorrespondencia: WideString read Get_NomDistritoCorrespondencia write Set_NomDistritoCorrespondencia;
    property DtaInicioCertificacao: TDateTime read Get_DtaInicioCertificacao write Set_DtaInicioCertificacao;
    property DtaCadastramento: TDateTime read Get_DtaCadastramento write Set_DtaCadastramento;
    property DtaEfetivacaoCadastro: TDateTime read Get_DtaEfetivacaoCadastro write Set_DtaEfetivacaoCadastro;
    property TxtObservacao: WideString read Get_TxtObservacao write Set_TxtObservacao;
    property IndEfetivadoUmaVez: WideString read Get_IndEfetivadoUmaVez write Set_IndEfetivadoUmaVez;
    property CodTipoInscricao: Integer read Get_CodTipoInscricao write Set_CodTipoInscricao;
    property OrientacaoLat: WideString read Get_OrientacaoLat write Set_OrientacaoLat;
    property OrientacaoLon: WideString read Get_OrientacaoLon write Set_OrientacaoLon;
    property CodPessoaProprietario: Integer read Get_CodPessoaProprietario write Set_CodPessoaProprietario;
    property NomPessoaProprietario: WideString read Get_NomPessoaProprietario write Set_NomPessoaProprietario;
    property CodNaturezaPessoaProp: WideString read Get_CodNaturezaPessoaProp write Set_CodNaturezaPessoaProp;
    property NumCNPJCPFFormatadoProp: WideString read Get_NumCNPJCPFFormatadoProp write Set_NumCNPJCPFFormatadoProp;
    property CodTipoPropriedadeRural: Integer read Get_CodTipoPropriedadeRural write Set_CodTipoPropriedadeRural;
    property DesTipoPropriedadeRural: WideString read Get_DesTipoPropriedadeRural write Set_DesTipoPropriedadeRural;
    property CodIdPropriedadeSisbov: Integer read Get_CodIdPropriedadeSisbov write Set_CodIdPropriedadeSisbov;
    property DtaInicioConfinamento: TDateTime read Get_DtaInicioConfinamento write Set_DtaInicioConfinamento;
    property DtaFimConfinamento: TDateTime read Get_DtaFimConfinamento write Set_DtaFimConfinamento;
    property DtaInicioPeriodoAjusteRebanho: TDateTime read Get_DtaInicioPeriodoAjusteRebanho write Set_DtaInicioPeriodoAjusteRebanho;
  end;

// *********************************************************************//
// DispIntf:  IPropriedadeRuralDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {201FF6E0-AC82-11D6-A34A-D3BEB0108A5D}
// *********************************************************************//
  IPropriedadeRuralDisp = dispinterface
    ['{201FF6E0-AC82-11D6-A34A-D3BEB0108A5D}']
    property CodPropriedadeRural: Integer dispid 1;
    property NomPropriedadeRural: WideString dispid 2;
    property NumImovelReceitaFederal: WideString dispid 3;
    property NumLatitude: Integer dispid 5;
    property NumLongitude: Integer dispid 6;
    property QtdArea: Double dispid 7;
    property NomLogradouro: WideString dispid 9;
    property NomBairro: WideString dispid 10;
    property NumCEP: WideString dispid 11;
    property CodPais: Integer dispid 12;
    property NomPais: WideString dispid 13;
    property CodPaisSisBov: Integer dispid 14;
    property CodEstado: Integer dispid 15;
    property SglEstado: WideString dispid 16;
    property CodEstadoSISBOV: Integer dispid 17;
    property CodMicroRegiao: Integer dispid 18;
    property NomMicroRegiao: WideString dispid 19;
    property CodMicroRegiaoSISBOV: Integer dispid 20;
    property CodMunicipio: Integer dispid 21;
    property NomMunicipio: WideString dispid 22;
    property CodDistrito: Integer dispid 23;
    property NomDistrito: WideString dispid 24;
    property NomPessoaContato: WideString dispid 25;
    property NumTelefone: WideString dispid 26;
    property NumFax: WideString dispid 27;
    property NomLogradouroCorrespondencia: WideString dispid 28;
    property NomBairroCorrespondencia: WideString dispid 29;
    property NumCEPCorrespondencia: WideString dispid 30;
    property CodPaisCorrespondencia: Integer dispid 31;
    property NomPaisCorrespondencia: WideString dispid 32;
    property CodPaisSisbovCorrespondencia: Integer dispid 33;
    property CodEstadoCorrespondencia: Integer dispid 34;
    property SglEstadoCorrespondencia: WideString dispid 35;
    property CodEstadoSisbovCorrespondencia: Integer dispid 36;
    property CodMunicipioCorrespondencia: Integer dispid 37;
    property NomMunicipioCorrespondencia: WideString dispid 38;
    property CodDistritoCorrespondencia: Integer dispid 39;
    property NomDistritoCorrespondencia: WideString dispid 40;
    property DtaInicioCertificacao: TDateTime dispid 41;
    property DtaCadastramento: TDateTime dispid 42;
    property DtaEfetivacaoCadastro: TDateTime dispid 43;
    property TxtObservacao: WideString dispid 44;
    property IndEfetivadoUmaVez: WideString dispid 45;
    property CodTipoInscricao: Integer dispid 4;
    property OrientacaoLat: WideString dispid 201;
    property OrientacaoLon: WideString dispid 202;
    property CodPessoaProprietario: Integer dispid 204;
    property NomPessoaProprietario: WideString dispid 205;
    property CodNaturezaPessoaProp: WideString dispid 206;
    property NumCNPJCPFFormatadoProp: WideString dispid 207;
    property CodTipoPropriedadeRural: Integer dispid 203;
    property DesTipoPropriedadeRural: WideString dispid 208;
    property CodIdPropriedadeSisbov: Integer dispid 209;
    property DtaInicioConfinamento: TDateTime dispid 210;
    property DtaFimConfinamento: TDateTime dispid 211;
    property DtaInicioPeriodoAjusteRebanho: TDateTime dispid 212;
  end;

// *********************************************************************//
// Interface: IPropriedadesRurais
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {201FF6E4-AC82-11D6-A34A-D3BEB0108A5D}
// *********************************************************************//
  IPropriedadesRurais = interface(IDispatch)
    ['{201FF6E4-AC82-11D6-A34A-D3BEB0108A5D}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Get_PropriedadeRural: IPropriedadeRural; safecall;
    function Pesquisar(CodPropriedadeRural: Integer; const NomPropriedadeRural: WideString; 
                       const NumImovelReceitaFederal: WideString; CodLocalizacaoSisbov: Integer; 
                       QtdAreaMinima: Double; QtdAreaMaxima: Double; 
                       const NomMunicipio: WideString; const NumMunicipioIBGE: WideString; 
                       const NomMicroRegiao: WideString; CodMicroRegiaoSISBOV: Integer; 
                       CodEstado: Integer; const SglEstado: WideString; CodPais: Integer; 
                       const IndCadastroEfetivado: WideString; const IndExportadoSisbov: WideString): Integer; safecall;
    function Inserir(const NomPropriedadeRural: WideString; 
                     const NumImovelReceitaFederal: WideString; CodTipoInscricao: Integer; 
                     NumLatitude: Integer; NumLongitude: Integer; QtdArea: Double; 
                     const NomPessoaContato: WideString; const NumTelefone: WideString; 
                     const NumFax: WideString; DtaInicioCertificacao: TDateTime; 
                     const TxtObservacao: WideString; const OrientLa: WideString; 
                     const OrientLo: WideString; TipoPro: Integer): Integer; safecall;
    function Alterar(CodPropriedadeRural: Integer; const NomPropriedadeRural: WideString; 
                     const NumImovelReceitaFederal: WideString; CodTipoInscricao: Integer; 
                     NumLatitude: Integer; NumLongitude: Integer; const QtdArea: WideString; 
                     const NomPessoaContato: WideString; const NumTelefone: WideString; 
                     const NumFax: WideString; DtaInicioCertificacao: TDateTime; 
                     const TxtObservacao: WideString; const OrientLa: WideString; 
                     const OrientLo: WideString; TipoPro: Integer): Integer; safecall;
    function Excluir(CodPropriedadeRural: Integer): Integer; safecall;
    function Buscar(CodPropriedadeRural: Integer): Integer; safecall;
    function EfetivarCadastro(CodPropriedadeRural: Integer): Integer; safecall;
    function CancelarEfetivacao(CodPropriedadeRural: Integer): Integer; safecall;
    function DefinirEndereco(CodPropriedadeRural: Integer; const NomLogradouro: WideString; 
                             const NomBairro: WideString; const NumCEP: WideString; 
                             CodPais: Integer; CodEstado: Integer; CodMunicipio: Integer; 
                             CodDistrito: Integer): Integer; safecall;
    function DefinirEnderecoCorrespondencia(CodPropriedadeRural: Integer; 
                                            const NomLogradouro: WideString; 
                                            const NomBairro: WideString; const NumCEP: WideString; 
                                            CodPais: Integer; CodEstado: Integer; 
                                            CodMunicipio: Integer; CodDistrito: Integer): Integer; safecall;
    function LimparEndereco(CodPropriedadeRural: Integer): Integer; safecall;
    function LimparEnderecoCorrespondencia(CodPropriedadeRural: Integer): Integer; safecall;
    function PesquisarPropriedade(CodPessoaProdutor: Integer; CodEstado: Integer; 
                                  CodPropriedadeRural: Integer; 
                                  const NumImovelReceitaFederal: WideString; 
                                  CodLocalizacaoSisbov: Integer; CodFazenda: Integer): Integer; safecall;
    function PesquisarPorProdutor(CodPessoaProdutor: Integer): Integer; safecall;
    function DefinirProprietario(CodPropriedadeRural: Integer; CodProdutor: Integer): Integer; safecall;
    function InserirVistoria(CodPropriedadeRural: Integer; CodTecnico: Integer; 
                             DtaVistoria: TDateTime): Integer; safecall;
    function ExcluirVistoria(CodVistoria: Integer): Integer; safecall;
    function PesquisarVistoria(CodPropriedadeRural: Integer; CodTecnico: Integer; 
                               DtaVistoria: TDateTime): Integer; safecall;
    function ImprimirCertificado(CodPropriedadeRural: Integer): WideString; safecall;
    function ConsultarSuspensao(CodPropriedadeRural: Integer): Integer; safecall;
    function SuspenderPropriedade(IdPropriedadeSisbov: Integer; IdMotivo: Integer; 
                                  const Obs: WideString): Integer; safecall;
    function IniciarVistoria(CodPropriedadeRural: Integer; const DataAgendamento: WideString; 
                             CodTecnico: Integer): Integer; safecall;
    function ReagendarVistoria(CodPropriedadeRural: Integer; const DataReAgendamento: WideString; 
                               CodTecnico: Integer; const Justificativa: WideString): Integer; safecall;
    function LancarVistoria(CodPropriedadeRural: Integer; const DataAgendamento: WideString): Integer; safecall;
    function FinalizarVistoria(Cod_propriedade_rural: Integer; cancelar: WordBool): Integer; safecall;
    function ConsultarVistorias(CodPropriedadeRural: Integer; const DataVistoria: WideString): Integer; safecall;
    function ProximaVistoria: Integer; safecall;
    function VistoriaEof: WordBool; safecall;
    function ValorCampoVistoria(const NomeCampo: WideString): WideString; safecall;
    function IrAPrimeiraVistoria: Integer; safecall;
    function ProximoQuestionarioVistoria: Integer; safecall;
    function IrAoPrimeiroQuestionarioVistoria: Integer; safecall;
    function QuestionarioVistoriaEOF: WordBool; safecall;
    function ValorCampoQuestionarioVistoria(const NomeCampo: WideString): WideString; safecall;
    function ConsultarQuestionarioVistoria(CodPropriedadeRural: Integer; 
                                           const DataVistoria: WideString): Integer; safecall;
    function EmitirParecerVistoria(CodPropriedadeRural: Integer; const Parecer: WideString): Integer; safecall;
    function GravarRespostaQuestionario(CodPropriedadeRural: Integer; 
                                        const DataVistoria: WideString; CodItemSisbov: Integer; 
                                        const Resposta: WideString; const Conformidade: WideString): Integer; safecall;
    function InformarPeriodoConfinamento2(CodPropriedadeRural: Integer; 
                                          const DataInicioConfinamento: WideString; 
                                          const DataFimConfinamento: WideString; cancelar: WordBool): Integer; safecall;
    function RecuperarCheckList(CodPropriedadeRural: Integer; const DataAgendamento: WideString): Integer; safecall;
    function InformarAjusteRebanho(CodPropriedadeRural: Integer): Integer; safecall;
    property PropriedadeRural: IPropriedadeRural read Get_PropriedadeRural;
  end;

// *********************************************************************//
// DispIntf:  IPropriedadesRuraisDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {201FF6E4-AC82-11D6-A34A-D3BEB0108A5D}
// *********************************************************************//
  IPropriedadesRuraisDisp = dispinterface
    ['{201FF6E4-AC82-11D6-A34A-D3BEB0108A5D}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    procedure FecharPesquisa; dispid 11;
    property PropriedadeRural: IPropriedadeRural readonly dispid 12;
    function Pesquisar(CodPropriedadeRural: Integer; const NomPropriedadeRural: WideString; 
                       const NumImovelReceitaFederal: WideString; CodLocalizacaoSisbov: Integer; 
                       QtdAreaMinima: Double; QtdAreaMaxima: Double; 
                       const NomMunicipio: WideString; const NumMunicipioIBGE: WideString; 
                       const NomMicroRegiao: WideString; CodMicroRegiaoSISBOV: Integer; 
                       CodEstado: Integer; const SglEstado: WideString; CodPais: Integer; 
                       const IndCadastroEfetivado: WideString; const IndExportadoSisbov: WideString): Integer; dispid 13;
    function Inserir(const NomPropriedadeRural: WideString; 
                     const NumImovelReceitaFederal: WideString; CodTipoInscricao: Integer; 
                     NumLatitude: Integer; NumLongitude: Integer; QtdArea: Double; 
                     const NomPessoaContato: WideString; const NumTelefone: WideString; 
                     const NumFax: WideString; DtaInicioCertificacao: TDateTime; 
                     const TxtObservacao: WideString; const OrientLa: WideString; 
                     const OrientLo: WideString; TipoPro: Integer): Integer; dispid 14;
    function Alterar(CodPropriedadeRural: Integer; const NomPropriedadeRural: WideString; 
                     const NumImovelReceitaFederal: WideString; CodTipoInscricao: Integer; 
                     NumLatitude: Integer; NumLongitude: Integer; const QtdArea: WideString; 
                     const NomPessoaContato: WideString; const NumTelefone: WideString; 
                     const NumFax: WideString; DtaInicioCertificacao: TDateTime; 
                     const TxtObservacao: WideString; const OrientLa: WideString; 
                     const OrientLo: WideString; TipoPro: Integer): Integer; dispid 15;
    function Excluir(CodPropriedadeRural: Integer): Integer; dispid 16;
    function Buscar(CodPropriedadeRural: Integer): Integer; dispid 17;
    function EfetivarCadastro(CodPropriedadeRural: Integer): Integer; dispid 18;
    function CancelarEfetivacao(CodPropriedadeRural: Integer): Integer; dispid 19;
    function DefinirEndereco(CodPropriedadeRural: Integer; const NomLogradouro: WideString; 
                             const NomBairro: WideString; const NumCEP: WideString; 
                             CodPais: Integer; CodEstado: Integer; CodMunicipio: Integer; 
                             CodDistrito: Integer): Integer; dispid 22;
    function DefinirEnderecoCorrespondencia(CodPropriedadeRural: Integer; 
                                            const NomLogradouro: WideString; 
                                            const NomBairro: WideString; const NumCEP: WideString; 
                                            CodPais: Integer; CodEstado: Integer; 
                                            CodMunicipio: Integer; CodDistrito: Integer): Integer; dispid 23;
    function LimparEndereco(CodPropriedadeRural: Integer): Integer; dispid 25;
    function LimparEnderecoCorrespondencia(CodPropriedadeRural: Integer): Integer; dispid 26;
    function PesquisarPropriedade(CodPessoaProdutor: Integer; CodEstado: Integer; 
                                  CodPropriedadeRural: Integer; 
                                  const NumImovelReceitaFederal: WideString; 
                                  CodLocalizacaoSisbov: Integer; CodFazenda: Integer): Integer; dispid 27;
    function PesquisarPorProdutor(CodPessoaProdutor: Integer): Integer; dispid 201;
    function DefinirProprietario(CodPropriedadeRural: Integer; CodProdutor: Integer): Integer; dispid 202;
    function InserirVistoria(CodPropriedadeRural: Integer; CodTecnico: Integer; 
                             DtaVistoria: TDateTime): Integer; dispid 203;
    function ExcluirVistoria(CodVistoria: Integer): Integer; dispid 204;
    function PesquisarVistoria(CodPropriedadeRural: Integer; CodTecnico: Integer; 
                               DtaVistoria: TDateTime): Integer; dispid 205;
    function ImprimirCertificado(CodPropriedadeRural: Integer): WideString; dispid 206;
    function ConsultarSuspensao(CodPropriedadeRural: Integer): Integer; dispid 207;
    function SuspenderPropriedade(IdPropriedadeSisbov: Integer; IdMotivo: Integer; 
                                  const Obs: WideString): Integer; dispid 208;
    function IniciarVistoria(CodPropriedadeRural: Integer; const DataAgendamento: WideString; 
                             CodTecnico: Integer): Integer; dispid 209;
    function ReagendarVistoria(CodPropriedadeRural: Integer; const DataReAgendamento: WideString; 
                               CodTecnico: Integer; const Justificativa: WideString): Integer; dispid 210;
    function LancarVistoria(CodPropriedadeRural: Integer; const DataAgendamento: WideString): Integer; dispid 211;
    function FinalizarVistoria(Cod_propriedade_rural: Integer; cancelar: WordBool): Integer; dispid 212;
    function ConsultarVistorias(CodPropriedadeRural: Integer; const DataVistoria: WideString): Integer; dispid 213;
    function ProximaVistoria: Integer; dispid 214;
    function VistoriaEof: WordBool; dispid 215;
    function ValorCampoVistoria(const NomeCampo: WideString): WideString; dispid 216;
    function IrAPrimeiraVistoria: Integer; dispid 217;
    function ProximoQuestionarioVistoria: Integer; dispid 218;
    function IrAoPrimeiroQuestionarioVistoria: Integer; dispid 219;
    function QuestionarioVistoriaEOF: WordBool; dispid 220;
    function ValorCampoQuestionarioVistoria(const NomeCampo: WideString): WideString; dispid 221;
    function ConsultarQuestionarioVistoria(CodPropriedadeRural: Integer; 
                                           const DataVistoria: WideString): Integer; dispid 222;
    function EmitirParecerVistoria(CodPropriedadeRural: Integer; const Parecer: WideString): Integer; dispid 223;
    function GravarRespostaQuestionario(CodPropriedadeRural: Integer; 
                                        const DataVistoria: WideString; CodItemSisbov: Integer; 
                                        const Resposta: WideString; const Conformidade: WideString): Integer; dispid 224;
    function InformarPeriodoConfinamento2(CodPropriedadeRural: Integer; 
                                          const DataInicioConfinamento: WideString; 
                                          const DataFimConfinamento: WideString; cancelar: WordBool): Integer; dispid 226;
    function RecuperarCheckList(CodPropriedadeRural: Integer; const DataAgendamento: WideString): Integer; dispid 225;
    function InformarAjusteRebanho(CodPropriedadeRural: Integer): Integer; dispid 227;
  end;

// *********************************************************************//
// Interface: IAptidoes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5A818B00-ADEA-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IAptidoes = interface(IDispatch)
    ['{5A818B00-ADEA-11D6-B075-00E07DAEF481}']
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure IrAoProximo; safecall;
    function EOF: WordBool; safecall;
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  IAptidoesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5A818B00-ADEA-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IAptidoesDisp = dispinterface
    ['{5A818B00-ADEA-11D6-B075-00E07DAEF481}']
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 5;
    procedure IrAoProximo; dispid 6;
    function EOF: WordBool; dispid 7;
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 8;
    procedure FecharPesquisa; dispid 9;
  end;

// *********************************************************************//
// Interface: IEspecies
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51F83240-AE08-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IEspecies = interface(IDispatch)
    ['{51F83240-AE08-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  IEspeciesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51F83240-AE08-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IEspeciesDisp = dispinterface
    ['{51F83240-AE08-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
  end;

// *********************************************************************//
// Interface: ITiposMorte
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51F83244-AE08-11D6-B075-00E07DAEF481}
// *********************************************************************//
  ITiposMorte = interface(IDispatch)
    ['{51F83244-AE08-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CorOrdenacao: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function PesquisarRelacionamento: Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposMorteDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51F83244-AE08-11D6-B075-00E07DAEF481}
// *********************************************************************//
  ITiposMorteDisp = dispinterface
    ['{51F83244-AE08-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CorOrdenacao: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    function PesquisarRelacionamento: Integer; dispid 6;
  end;

// *********************************************************************//
// Interface: ICausasMorte
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51F83248-AE08-11D6-B075-00E07DAEF481}
// *********************************************************************//
  ICausasMorte = interface(IDispatch)
    ['{51F83248-AE08-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CorOrdenacao: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  ICausasMorteDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51F83248-AE08-11D6-B075-00E07DAEF481}
// *********************************************************************//
  ICausasMorteDisp = dispinterface
    ['{51F83248-AE08-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CorOrdenacao: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
  end;

// *********************************************************************//
// Interface: IGrausInstrucao
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {089CD620-B040-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IGrausInstrucao = interface(IDispatch)
    ['{089CD620-B040-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  IGrausInstrucaoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {089CD620-B040-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IGrausInstrucaoDisp = dispinterface
    ['{089CD620-B040-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
  end;

// *********************************************************************//
// Interface: IPosicoesIdentificador
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {04ECF840-B066-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPosicoesIdentificador = interface(IDispatch)
    ['{04ECF840-B066-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodGrupoIdentificador: WideString; const CodOrdenacao: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoPrimeiro; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function PesquisarRelacionamentos: Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IPosicoesIdentificadorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {04ECF840-B066-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IPosicoesIdentificadorDisp = dispinterface
    ['{04ECF840-B066-11D6-B075-00E07DAEF481}']
    function Pesquisar(const CodGrupoIdentificador: WideString; const CodOrdenacao: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    procedure IrAoPrimeiro; dispid 4;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 5;
    procedure FecharPesquisa; dispid 6;
    function PesquisarRelacionamentos: Integer; dispid 7;
  end;

// *********************************************************************//
// Interface: IAnimalResumido
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51B69860-B2C9-11D6-A34A-956B3BD2F055}
// *********************************************************************//
  IAnimalResumido = interface(IDispatch)
    ['{51B69860-B2C9-11D6-A34A-956B3BD2F055}']
    function Get_CodPessoaProdutor: Integer; safecall;
    procedure Set_CodPessoaProdutor(Value: Integer); safecall;
    function Get_CodAnimal: Integer; safecall;
    procedure Set_CodAnimal(Value: Integer); safecall;
    function Get_CodFazendaManejo: Integer; safecall;
    procedure Set_CodFazendaManejo(Value: Integer); safecall;
    function Get_SglFazendaManejo: WideString; safecall;
    procedure Set_SglFazendaManejo(const Value: WideString); safecall;
    function Get_CodAnimalManejo: WideString; safecall;
    procedure Set_CodAnimalManejo(const Value: WideString); safecall;
    function Get_CodAnimalCertificadora: WideString; safecall;
    procedure Set_CodAnimalCertificadora(const Value: WideString); safecall;
    function Get_CodPaisSisBov: Integer; safecall;
    procedure Set_CodPaisSisBov(Value: Integer); safecall;
    function Get_CodEstadoSISBOV: Integer; safecall;
    procedure Set_CodEstadoSISBOV(Value: Integer); safecall;
    function Get_CodMicroRegiaoSISBOV: Integer; safecall;
    procedure Set_CodMicroRegiaoSISBOV(Value: Integer); safecall;
    function Get_CodAnimalSisbov: Integer; safecall;
    procedure Set_CodAnimalSisbov(Value: Integer); safecall;
    function Get_NumDVSisbov: Integer; safecall;
    procedure Set_NumDVSisbov(Value: Integer); safecall;
    function Get_NomAnimal: WideString; safecall;
    procedure Set_NomAnimal(const Value: WideString); safecall;
    function Get_CodEspecie: Integer; safecall;
    procedure Set_CodEspecie(Value: Integer); safecall;
    function Get_SglEspecie: WideString; safecall;
    procedure Set_SglEspecie(const Value: WideString); safecall;
    function Get_CodAptidao: Integer; safecall;
    procedure Set_CodAptidao(Value: Integer); safecall;
    function Get_SglAptidao: WideString; safecall;
    procedure Set_SglAptidao(const Value: WideString); safecall;
    function Get_IndSexo: WideString; safecall;
    procedure Set_IndSexo(const Value: WideString); safecall;
    function Get_CodTipoOrigem: Integer; safecall;
    procedure Set_CodTipoOrigem(Value: Integer); safecall;
    function Get_SglTipoOrigem: WideString; safecall;
    procedure Set_SglTipoOrigem(const Value: WideString); safecall;
    function Get_DesTipoOrigem: WideString; safecall;
    procedure Set_DesTipoOrigem(const Value: WideString); safecall;
    function Get_DesAptidao: WideString; safecall;
    procedure Set_DesAptidao(const Value: WideString); safecall;
    function Get_DesEspecie: WideString; safecall;
    procedure Set_DesEspecie(const Value: WideString); safecall;
    function Get_NomPessoaVendedor: WideString; safecall;
    procedure Set_NomPessoaVendedor(const Value: WideString); safecall;
    function Get_NomPessoaProdutor: WideString; safecall;
    procedure Set_NomPessoaProdutor(const Value: WideString); safecall;
    property CodPessoaProdutor: Integer read Get_CodPessoaProdutor write Set_CodPessoaProdutor;
    property CodAnimal: Integer read Get_CodAnimal write Set_CodAnimal;
    property CodFazendaManejo: Integer read Get_CodFazendaManejo write Set_CodFazendaManejo;
    property SglFazendaManejo: WideString read Get_SglFazendaManejo write Set_SglFazendaManejo;
    property CodAnimalManejo: WideString read Get_CodAnimalManejo write Set_CodAnimalManejo;
    property CodAnimalCertificadora: WideString read Get_CodAnimalCertificadora write Set_CodAnimalCertificadora;
    property CodPaisSisBov: Integer read Get_CodPaisSisBov write Set_CodPaisSisBov;
    property CodEstadoSISBOV: Integer read Get_CodEstadoSISBOV write Set_CodEstadoSISBOV;
    property CodMicroRegiaoSISBOV: Integer read Get_CodMicroRegiaoSISBOV write Set_CodMicroRegiaoSISBOV;
    property CodAnimalSisbov: Integer read Get_CodAnimalSisbov write Set_CodAnimalSisbov;
    property NumDVSisbov: Integer read Get_NumDVSisbov write Set_NumDVSisbov;
    property NomAnimal: WideString read Get_NomAnimal write Set_NomAnimal;
    property CodEspecie: Integer read Get_CodEspecie write Set_CodEspecie;
    property SglEspecie: WideString read Get_SglEspecie write Set_SglEspecie;
    property CodAptidao: Integer read Get_CodAptidao write Set_CodAptidao;
    property SglAptidao: WideString read Get_SglAptidao write Set_SglAptidao;
    property IndSexo: WideString read Get_IndSexo write Set_IndSexo;
    property CodTipoOrigem: Integer read Get_CodTipoOrigem write Set_CodTipoOrigem;
    property SglTipoOrigem: WideString read Get_SglTipoOrigem write Set_SglTipoOrigem;
    property DesTipoOrigem: WideString read Get_DesTipoOrigem write Set_DesTipoOrigem;
    property DesAptidao: WideString read Get_DesAptidao write Set_DesAptidao;
    property DesEspecie: WideString read Get_DesEspecie write Set_DesEspecie;
    property NomPessoaVendedor: WideString read Get_NomPessoaVendedor write Set_NomPessoaVendedor;
    property NomPessoaProdutor: WideString read Get_NomPessoaProdutor write Set_NomPessoaProdutor;
  end;

// *********************************************************************//
// DispIntf:  IAnimalResumidoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51B69860-B2C9-11D6-A34A-956B3BD2F055}
// *********************************************************************//
  IAnimalResumidoDisp = dispinterface
    ['{51B69860-B2C9-11D6-A34A-956B3BD2F055}']
    property CodPessoaProdutor: Integer dispid 1;
    property CodAnimal: Integer dispid 2;
    property CodFazendaManejo: Integer dispid 3;
    property SglFazendaManejo: WideString dispid 4;
    property CodAnimalManejo: WideString dispid 5;
    property CodAnimalCertificadora: WideString dispid 6;
    property CodPaisSisBov: Integer dispid 7;
    property CodEstadoSISBOV: Integer dispid 8;
    property CodMicroRegiaoSISBOV: Integer dispid 9;
    property CodAnimalSisbov: Integer dispid 10;
    property NumDVSisbov: Integer dispid 11;
    property NomAnimal: WideString dispid 12;
    property CodEspecie: Integer dispid 13;
    property SglEspecie: WideString dispid 14;
    property CodAptidao: Integer dispid 15;
    property SglAptidao: WideString dispid 16;
    property IndSexo: WideString dispid 17;
    property CodTipoOrigem: Integer dispid 18;
    property SglTipoOrigem: WideString dispid 19;
    property DesTipoOrigem: WideString dispid 20;
    property DesAptidao: WideString dispid 21;
    property DesEspecie: WideString dispid 22;
    property NomPessoaVendedor: WideString dispid 201;
    property NomPessoaProdutor: WideString dispid 202;
  end;

// *********************************************************************//
// Interface: IFiliacao
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51B69864-B2C9-11D6-A34A-956B3BD2F055}
// *********************************************************************//
  IFiliacao = interface(IDispatch)
    ['{51B69864-B2C9-11D6-A34A-956B3BD2F055}']
    function Get_CodPessoaProdutor: Integer; safecall;
    procedure Set_CodPessoaProdutor(Value: Integer); safecall;
    function Get_CodAnimal: Integer; safecall;
    procedure Set_CodAnimal(Value: Integer); safecall;
    function Get_AnimalPai: IAnimalResumido; safecall;
    procedure Set_AnimalPai(const Value: IAnimalResumido); safecall;
    function Get_AnimalMae: IAnimalResumido; safecall;
    procedure Set_AnimalMae(const Value: IAnimalResumido); safecall;
    function Get_AnimalReceptor: IAnimalResumido; safecall;
    procedure Set_AnimalReceptor(const Value: IAnimalResumido); safecall;
    property CodPessoaProdutor: Integer read Get_CodPessoaProdutor write Set_CodPessoaProdutor;
    property CodAnimal: Integer read Get_CodAnimal write Set_CodAnimal;
    property AnimalPai: IAnimalResumido read Get_AnimalPai write Set_AnimalPai;
    property AnimalMae: IAnimalResumido read Get_AnimalMae write Set_AnimalMae;
    property AnimalReceptor: IAnimalResumido read Get_AnimalReceptor write Set_AnimalReceptor;
  end;

// *********************************************************************//
// DispIntf:  IFiliacaoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51B69864-B2C9-11D6-A34A-956B3BD2F055}
// *********************************************************************//
  IFiliacaoDisp = dispinterface
    ['{51B69864-B2C9-11D6-A34A-956B3BD2F055}']
    property CodPessoaProdutor: Integer dispid 1;
    property CodAnimal: Integer dispid 2;
    property AnimalPai: IAnimalResumido dispid 3;
    property AnimalMae: IAnimalResumido dispid 4;
    property AnimalReceptor: IAnimalResumido dispid 5;
  end;

// *********************************************************************//
// Interface: IRegistro
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51B69868-B2C9-11D6-A34A-956B3BD2F055}
// *********************************************************************//
  IRegistro = interface(IDispatch)
    ['{51B69868-B2C9-11D6-A34A-956B3BD2F055}']
    function Get_CodPessoaProdutor: Integer; safecall;
    procedure Set_CodPessoaProdutor(Value: Integer); safecall;
    function Get_CodAnimal: Integer; safecall;
    procedure Set_CodAnimal(Value: Integer); safecall;
    function Get_CodAssociacaoRaca: Integer; safecall;
    procedure Set_CodAssociacaoRaca(Value: Integer); safecall;
    function Get_SglAssociacaoRaca: WideString; safecall;
    procedure Set_SglAssociacaoRaca(const Value: WideString); safecall;
    function Get_NomAssociacaoRaca: WideString; safecall;
    procedure Set_NomAssociacaoRaca(const Value: WideString); safecall;
    function Get_CodGrauSangue: Integer; safecall;
    procedure Set_CodGrauSangue(Value: Integer); safecall;
    function Get_SglGrauSangue: WideString; safecall;
    procedure Set_SglGrauSangue(const Value: WideString); safecall;
    function Get_DesGrauSangue: WideString; safecall;
    procedure Set_DesGrauSangue(const Value: WideString); safecall;
    function Get_NumRGD: WideString; safecall;
    procedure Set_NumRGD(const Value: WideString); safecall;
    property CodPessoaProdutor: Integer read Get_CodPessoaProdutor write Set_CodPessoaProdutor;
    property CodAnimal: Integer read Get_CodAnimal write Set_CodAnimal;
    property CodAssociacaoRaca: Integer read Get_CodAssociacaoRaca write Set_CodAssociacaoRaca;
    property SglAssociacaoRaca: WideString read Get_SglAssociacaoRaca write Set_SglAssociacaoRaca;
    property NomAssociacaoRaca: WideString read Get_NomAssociacaoRaca write Set_NomAssociacaoRaca;
    property CodGrauSangue: Integer read Get_CodGrauSangue write Set_CodGrauSangue;
    property SglGrauSangue: WideString read Get_SglGrauSangue write Set_SglGrauSangue;
    property DesGrauSangue: WideString read Get_DesGrauSangue write Set_DesGrauSangue;
    property NumRGD: WideString read Get_NumRGD write Set_NumRGD;
  end;

// *********************************************************************//
// DispIntf:  IRegistroDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51B69868-B2C9-11D6-A34A-956B3BD2F055}
// *********************************************************************//
  IRegistroDisp = dispinterface
    ['{51B69868-B2C9-11D6-A34A-956B3BD2F055}']
    property CodPessoaProdutor: Integer dispid 1;
    property CodAnimal: Integer dispid 2;
    property CodAssociacaoRaca: Integer dispid 3;
    property SglAssociacaoRaca: WideString dispid 4;
    property NomAssociacaoRaca: WideString dispid 5;
    property CodGrauSangue: Integer dispid 6;
    property SglGrauSangue: WideString dispid 7;
    property DesGrauSangue: WideString dispid 8;
    property NumRGD: WideString dispid 10;
  end;

// *********************************************************************//
// Interface: IAssociacaoRaca
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E6A252E0-B358-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IAssociacaoRaca = interface(IDispatch)
    ['{E6A252E0-B358-11D6-B075-00E07DAEF481}']
    function Get_CodAssociacaoRaca: Integer; safecall;
    procedure Set_CodAssociacaoRaca(Value: Integer); safecall;
    function Get_SglAssociacaoRaca: WideString; safecall;
    procedure Set_SglAssociacaoRaca(const Value: WideString); safecall;
    function Get_NomAssociacaoRaca: WideString; safecall;
    procedure Set_NomAssociacaoRaca(const Value: WideString); safecall;
    property CodAssociacaoRaca: Integer read Get_CodAssociacaoRaca write Set_CodAssociacaoRaca;
    property SglAssociacaoRaca: WideString read Get_SglAssociacaoRaca write Set_SglAssociacaoRaca;
    property NomAssociacaoRaca: WideString read Get_NomAssociacaoRaca write Set_NomAssociacaoRaca;
  end;

// *********************************************************************//
// DispIntf:  IAssociacaoRacaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E6A252E0-B358-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IAssociacaoRacaDisp = dispinterface
    ['{E6A252E0-B358-11D6-B075-00E07DAEF481}']
    property CodAssociacaoRaca: Integer dispid 2;
    property SglAssociacaoRaca: WideString dispid 3;
    property NomAssociacaoRaca: WideString dispid 4;
  end;

// *********************************************************************//
// Interface: IGrauSangue
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DD5613C0-B380-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IGrauSangue = interface(IDispatch)
    ['{DD5613C0-B380-11D6-B075-00E07DAEF481}']
    function Get_SglGrauSangue: WideString; safecall;
    procedure Set_SglGrauSangue(const Value: WideString); safecall;
    function Get_DesGrauSangue: WideString; safecall;
    procedure Set_DesGrauSangue(const Value: WideString); safecall;
    function Get_CodGrauSangue: Integer; safecall;
    procedure Set_CodGrauSangue(Value: Integer); safecall;
    property SglGrauSangue: WideString read Get_SglGrauSangue write Set_SglGrauSangue;
    property DesGrauSangue: WideString read Get_DesGrauSangue write Set_DesGrauSangue;
    property CodGrauSangue: Integer read Get_CodGrauSangue write Set_CodGrauSangue;
  end;

// *********************************************************************//
// DispIntf:  IGrauSangueDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DD5613C0-B380-11D6-B075-00E07DAEF481}
// *********************************************************************//
  IGrauSangueDisp = dispinterface
    ['{DD5613C0-B380-11D6-B075-00E07DAEF481}']
    property SglGrauSangue: WideString dispid 2;
    property DesGrauSangue: WideString dispid 3;
    property CodGrauSangue: Integer dispid 4;
  end;

// *********************************************************************//
// Interface: ITiposLugar
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {810F91D4-9E70-4FEA-82F2-F54BB041D84B}
// *********************************************************************//
  ITiposLugar = interface(IDispatch)
    ['{810F91D4-9E70-4FEA-82F2-F54BB041D84B}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposLugarDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {810F91D4-9E70-4FEA-82F2-F54BB041D84B}
// *********************************************************************//
  ITiposLugarDisp = dispinterface
    ['{810F91D4-9E70-4FEA-82F2-F54BB041D84B}']
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
  end;

// *********************************************************************//
// Interface: ISituacoesSisBov
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {857DEBA2-51C1-4FCE-8389-2A2DE27AD50D}
// *********************************************************************//
  ISituacoesSisBov = interface(IDispatch)
    ['{857DEBA2-51C1-4FCE-8389-2A2DE27AD50D}']
    function Pesquisar: Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    procedure IrAoPrimeiro; safecall;
  end;

// *********************************************************************//
// DispIntf:  ISituacoesSisBovDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {857DEBA2-51C1-4FCE-8389-2A2DE27AD50D}
// *********************************************************************//
  ISituacoesSisBovDisp = dispinterface
    ['{857DEBA2-51C1-4FCE-8389-2A2DE27AD50D}']
    function Pesquisar: Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    procedure IrAoPrimeiro; dispid 6;
  end;

// *********************************************************************//
// Interface: IPessoasContatos
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {20597B0E-5756-418F-835E-68DCBBDEEF3F}
// *********************************************************************//
  IPessoasContatos = interface(IDispatch)
    ['{20597B0E-5756-418F-835E-68DCBBDEEF3F}']
    function Pesquisar(CodPessoa: Integer; const CodGrupoContato: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Inserir(CodPessoa: Integer; CodTipoContato: Integer; const TxtContato: WideString): Integer; safecall;
    function Alterar(CodPessoa: Integer; CodContato: Integer; CodTipoContato: Integer; 
                     const TxtContato: WideString): Integer; safecall;
    function Excluir(CodPessoa: Integer; CodContato: Integer): Integer; safecall;
    function DefinirPrincipal(CodPessoa: Integer; CodContato: Integer): Integer; safecall;
    function BOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IPessoasContatosDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {20597B0E-5756-418F-835E-68DCBBDEEF3F}
// *********************************************************************//
  IPessoasContatosDisp = dispinterface
    ['{20597B0E-5756-418F-835E-68DCBBDEEF3F}']
    function Pesquisar(CodPessoa: Integer; const CodGrupoContato: WideString): Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
    function Inserir(CodPessoa: Integer; CodTipoContato: Integer; const TxtContato: WideString): Integer; dispid 6;
    function Alterar(CodPessoa: Integer; CodContato: Integer; CodTipoContato: Integer; 
                     const TxtContato: WideString): Integer; dispid 7;
    function Excluir(CodPessoa: Integer; CodContato: Integer): Integer; dispid 8;
    function DefinirPrincipal(CodPessoa: Integer; CodContato: Integer): Integer; dispid 9;
    function BOF: WordBool; dispid 13;
    function NumeroRegistros: Integer; dispid 14;
    procedure IrAoPrimeiro; dispid 15;
    procedure IrAoUltimo; dispid 16;
    procedure IrAoAnterior; dispid 17;
    procedure Posicionar(NumPosicao: Integer); dispid 18;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 19;
  end;

// *********************************************************************//
// Interface: IIdentificadorDoProdutor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CE7C373C-25DB-46C1-95DB-0688FE3128E3}
// *********************************************************************//
  IIdentificadorDoProdutor = interface(IDispatch)
    ['{CE7C373C-25DB-46C1-95DB-0688FE3128E3}']
    function Get_CodTipoIdentificador: Integer; safecall;
    procedure Set_CodTipoIdentificador(Value: Integer); safecall;
    function Get_SglTipoIdentificador: WideString; safecall;
    procedure Set_SglTipoIdentificador(const Value: WideString); safecall;
    function Get_DesTipoIdentificador: WideString; safecall;
    procedure Set_DesTipoIdentificador(const Value: WideString); safecall;
    function Get_CodPosicaoIdentificador: Integer; safecall;
    procedure Set_CodPosicaoIdentificador(Value: Integer); safecall;
    function Get_SglPosicaoIdentificador: WideString; safecall;
    procedure Set_SglPosicaoIdentificador(const Value: WideString); safecall;
    function Get_DesPosicaoIdentificador: WideString; safecall;
    procedure Set_DesPosicaoIdentificador(const Value: WideString); safecall;
    function Get_CodGrupoIdentificador: WideString; safecall;
    procedure Set_CodGrupoIdentificador(const Value: WideString); safecall;
    property CodTipoIdentificador: Integer read Get_CodTipoIdentificador write Set_CodTipoIdentificador;
    property SglTipoIdentificador: WideString read Get_SglTipoIdentificador write Set_SglTipoIdentificador;
    property DesTipoIdentificador: WideString read Get_DesTipoIdentificador write Set_DesTipoIdentificador;
    property CodPosicaoIdentificador: Integer read Get_CodPosicaoIdentificador write Set_CodPosicaoIdentificador;
    property SglPosicaoIdentificador: WideString read Get_SglPosicaoIdentificador write Set_SglPosicaoIdentificador;
    property DesPosicaoIdentificador: WideString read Get_DesPosicaoIdentificador write Set_DesPosicaoIdentificador;
    property CodGrupoIdentificador: WideString read Get_CodGrupoIdentificador write Set_CodGrupoIdentificador;
  end;

// *********************************************************************//
// DispIntf:  IIdentificadorDoProdutorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CE7C373C-25DB-46C1-95DB-0688FE3128E3}
// *********************************************************************//
  IIdentificadorDoProdutorDisp = dispinterface
    ['{CE7C373C-25DB-46C1-95DB-0688FE3128E3}']
    property CodTipoIdentificador: Integer dispid 1;
    property SglTipoIdentificador: WideString dispid 2;
    property DesTipoIdentificador: WideString dispid 3;
    property CodPosicaoIdentificador: Integer dispid 4;
    property SglPosicaoIdentificador: WideString dispid 5;
    property DesPosicaoIdentificador: WideString dispid 6;
    property CodGrupoIdentificador: WideString dispid 7;
  end;

// *********************************************************************//
// Interface: IParametro
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0C3448D9-1628-4E6E-8105-B9F322804709}
// *********************************************************************//
  IParametro = interface(IDispatch)
    ['{0C3448D9-1628-4E6E-8105-B9F322804709}']
    function Get_CodPaisCertificadora: Integer; safecall;
    procedure Set_CodPaisCertificadora(Value: Integer); safecall;
    function Get_NomPaisCertificadora: WideString; safecall;
    procedure Set_NomPaisCertificadora(const Value: WideString); safecall;
    function Get_CodPaisSisBovCertificadora: Integer; safecall;
    procedure Set_CodPaisSisBovCertificadora(Value: Integer); safecall;
    function Get_IndCodCertificadoraAutomatico: WideString; safecall;
    procedure Set_IndCodCertificadoraAutomatico(const Value: WideString); safecall;
    property CodPaisCertificadora: Integer read Get_CodPaisCertificadora write Set_CodPaisCertificadora;
    property NomPaisCertificadora: WideString read Get_NomPaisCertificadora write Set_NomPaisCertificadora;
    property CodPaisSisBovCertificadora: Integer read Get_CodPaisSisBovCertificadora write Set_CodPaisSisBovCertificadora;
    property IndCodCertificadoraAutomatico: WideString read Get_IndCodCertificadoraAutomatico write Set_IndCodCertificadoraAutomatico;
  end;

// *********************************************************************//
// DispIntf:  IParametroDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0C3448D9-1628-4E6E-8105-B9F322804709}
// *********************************************************************//
  IParametroDisp = dispinterface
    ['{0C3448D9-1628-4E6E-8105-B9F322804709}']
    property CodPaisCertificadora: Integer dispid 1;
    property NomPaisCertificadora: WideString dispid 2;
    property CodPaisSisBovCertificadora: Integer dispid 3;
    property IndCodCertificadoraAutomatico: WideString dispid 4;
  end;

// *********************************************************************//
// Interface: IGrandezasResumo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD784F50-4222-4BD4-808A-E88B9C2F8827}
// *********************************************************************//
  IGrandezasResumo = interface(IDispatch)
    ['{BD784F50-4222-4BD4-808A-E88B9C2F8827}']
    function Pesquisar: Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  IGrandezasResumoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD784F50-4222-4BD4-808A-E88B9C2F8827}
// *********************************************************************//
  IGrandezasResumoDisp = dispinterface
    ['{BD784F50-4222-4BD4-808A-E88B9C2F8827}']
    function Pesquisar: Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure IrAoPrimeiro; dispid 5;
    procedure FecharPesquisa; dispid 6;
  end;

// *********************************************************************//
// Interface: IGruposEvento
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {20EE3BB2-CF27-4EF5-8D72-421808164A4E}
// *********************************************************************//
  IGruposEvento = interface(IDispatch)
    ['{20EE3BB2-CF27-4EF5-8D72-421808164A4E}']
    function Pesquisar: Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  IGruposEventoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {20EE3BB2-CF27-4EF5-8D72-421808164A4E}
// *********************************************************************//
  IGruposEventoDisp = dispinterface
    ['{20EE3BB2-CF27-4EF5-8D72-421808164A4E}']
    function Pesquisar: Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure IrAoPrimeiro; dispid 5;
    procedure FecharPesquisa; dispid 6;
  end;

// *********************************************************************//
// Interface: ITiposEvento
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {797CE152-30D0-4B03-9538-95190109206D}
// *********************************************************************//
  ITiposEvento = interface(IDispatch)
    ['{797CE152-30D0-4B03-9538-95190109206D}']
    function Pesquisar(CodGrupoEvento: Integer; const IndEventoSisBov: WideString; 
                       const IndRestritoSistema: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure FecharPesquisa; safecall;
    function PesquisarCoberturas(const IndEventoSisBov: WideString; 
                                 const IndRestritoSistema: WideString; 
                                 const CodOrdenacao: WideString): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposEventoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {797CE152-30D0-4B03-9538-95190109206D}
// *********************************************************************//
  ITiposEventoDisp = dispinterface
    ['{797CE152-30D0-4B03-9538-95190109206D}']
    function Pesquisar(CodGrupoEvento: Integer; const IndEventoSisBov: WideString; 
                       const IndRestritoSistema: WideString): Integer; dispid 6;
    function EOF: WordBool; dispid 7;
    procedure IrAoProximo; dispid 8;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 9;
    procedure IrAoPrimeiro; dispid 10;
    procedure FecharPesquisa; dispid 11;
    function PesquisarCoberturas(const IndEventoSisBov: WideString; 
                                 const IndRestritoSistema: WideString; 
                                 const CodOrdenacao: WideString): Integer; dispid 1;
  end;

// *********************************************************************//
// Interface: ITipoInsumo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {317011BA-4E58-4B60-BA0E-0DDBF8569061}
// *********************************************************************//
  ITipoInsumo = interface(IDispatch)
    ['{317011BA-4E58-4B60-BA0E-0DDBF8569061}']
    function Get_CodTipoInsumo: Integer; safecall;
    procedure Set_CodTipoInsumo(Value: Integer); safecall;
    function Get_SglTipoInsumo: WideString; safecall;
    procedure Set_SglTipoInsumo(const Value: WideString); safecall;
    function Get_DesTipoInsumo: WideString; safecall;
    procedure Set_DesTipoInsumo(const Value: WideString); safecall;
    function Get_IndSubTipoObrigatorio: WideString; safecall;
    procedure Set_IndSubTipoObrigatorio(const Value: WideString); safecall;
    function Get_IndAdmitePartidaLote: WideString; safecall;
    procedure Set_IndAdmitePartidaLote(const Value: WideString); safecall;
    function Get_IndRestritoSistema: WideString; safecall;
    procedure Set_IndRestritoSistema(const Value: WideString); safecall;
    function Get_CodSubEventoSanitario: Integer; safecall;
    procedure Set_CodSubEventoSanitario(Value: Integer); safecall;
    function Get_SglSubEventoSanitario: WideString; safecall;
    procedure Set_SglSubEventoSanitario(const Value: WideString); safecall;
    function Get_DesSubEventoSanitario: WideString; safecall;
    procedure Set_DesSubEventoSanitario(const Value: WideString); safecall;
    function Get_QtdIntervaloMinimoAplicacao: Integer; safecall;
    procedure Set_QtdIntervaloMinimoAplicacao(Value: Integer); safecall;
    function Get_NumOrdem: Integer; safecall;
    procedure Set_NumOrdem(Value: Integer); safecall;
    property CodTipoInsumo: Integer read Get_CodTipoInsumo write Set_CodTipoInsumo;
    property SglTipoInsumo: WideString read Get_SglTipoInsumo write Set_SglTipoInsumo;
    property DesTipoInsumo: WideString read Get_DesTipoInsumo write Set_DesTipoInsumo;
    property IndSubTipoObrigatorio: WideString read Get_IndSubTipoObrigatorio write Set_IndSubTipoObrigatorio;
    property IndAdmitePartidaLote: WideString read Get_IndAdmitePartidaLote write Set_IndAdmitePartidaLote;
    property IndRestritoSistema: WideString read Get_IndRestritoSistema write Set_IndRestritoSistema;
    property CodSubEventoSanitario: Integer read Get_CodSubEventoSanitario write Set_CodSubEventoSanitario;
    property SglSubEventoSanitario: WideString read Get_SglSubEventoSanitario write Set_SglSubEventoSanitario;
    property DesSubEventoSanitario: WideString read Get_DesSubEventoSanitario write Set_DesSubEventoSanitario;
    property QtdIntervaloMinimoAplicacao: Integer read Get_QtdIntervaloMinimoAplicacao write Set_QtdIntervaloMinimoAplicacao;
    property NumOrdem: Integer read Get_NumOrdem write Set_NumOrdem;
  end;

// *********************************************************************//
// DispIntf:  ITipoInsumoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {317011BA-4E58-4B60-BA0E-0DDBF8569061}
// *********************************************************************//
  ITipoInsumoDisp = dispinterface
    ['{317011BA-4E58-4B60-BA0E-0DDBF8569061}']
    property CodTipoInsumo: Integer dispid 1;
    property SglTipoInsumo: WideString dispid 2;
    property DesTipoInsumo: WideString dispid 3;
    property IndSubTipoObrigatorio: WideString dispid 4;
    property IndAdmitePartidaLote: WideString dispid 5;
    property IndRestritoSistema: WideString dispid 6;
    property CodSubEventoSanitario: Integer dispid 7;
    property SglSubEventoSanitario: WideString dispid 8;
    property DesSubEventoSanitario: WideString dispid 9;
    property QtdIntervaloMinimoAplicacao: Integer dispid 11;
    property NumOrdem: Integer dispid 12;
  end;

// *********************************************************************//
// Interface: ITiposInsumo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3F650F0F-09B1-4E84-9081-AA9728B8F76E}
// *********************************************************************//
  ITiposInsumo = interface(IDispatch)
    ['{3F650F0F-09B1-4E84-9081-AA9728B8F76E}']
    function Buscar(CodTipoInsumo: Integer): Integer; safecall;
    function Inserir(const SglTipoInsumo: WideString; const DesTipoInsumo: WideString; 
                     const IndSubTipoObrigatorio: WideString; 
                     const IndAdmitePartidaLote: WideString; NumOrdem: Integer): Integer; safecall;
    function Alterar(CodTipoInsumo: Integer; const SglTipoInsumo: WideString; 
                     const DesTipoInsumo: WideString; QtdIntervaloMinimoAplicacao: Integer; 
                     NumOrdem: Integer): Integer; safecall;
    function Excluir(CodTipoInsumo: Integer): Integer; safecall;
    function Pesquisar(CodSubEventoSanitario: Integer; const CodOrdenacao: WideString; 
                       const IndSubEventoSanitario: WideString): Integer; safecall;
    function AdicionarUnidadeMedida(CodTipoInsumo: Integer; CodUnidadeMedida: Integer): Integer; safecall;
    function RetirarUnidadeMedida(CodTipoInsumo: Integer; CodUnidadeMedida: Integer): Integer; safecall;
    function PesquisarUnidadesMedida(CodTipoInsumo: Integer; const CodOrdenacao: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoPrimeiro; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Get_TipoInsumo: ITipoInsumo; safecall;
    function NumeroRegistros: Integer; safecall;
    property TipoInsumo: ITipoInsumo read Get_TipoInsumo;
  end;

// *********************************************************************//
// DispIntf:  ITiposInsumoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3F650F0F-09B1-4E84-9081-AA9728B8F76E}
// *********************************************************************//
  ITiposInsumoDisp = dispinterface
    ['{3F650F0F-09B1-4E84-9081-AA9728B8F76E}']
    function Buscar(CodTipoInsumo: Integer): Integer; dispid 1;
    function Inserir(const SglTipoInsumo: WideString; const DesTipoInsumo: WideString; 
                     const IndSubTipoObrigatorio: WideString; 
                     const IndAdmitePartidaLote: WideString; NumOrdem: Integer): Integer; dispid 2;
    function Alterar(CodTipoInsumo: Integer; const SglTipoInsumo: WideString; 
                     const DesTipoInsumo: WideString; QtdIntervaloMinimoAplicacao: Integer; 
                     NumOrdem: Integer): Integer; dispid 3;
    function Excluir(CodTipoInsumo: Integer): Integer; dispid 4;
    function Pesquisar(CodSubEventoSanitario: Integer; const CodOrdenacao: WideString; 
                       const IndSubEventoSanitario: WideString): Integer; dispid 5;
    function AdicionarUnidadeMedida(CodTipoInsumo: Integer; CodUnidadeMedida: Integer): Integer; dispid 6;
    function RetirarUnidadeMedida(CodTipoInsumo: Integer; CodUnidadeMedida: Integer): Integer; dispid 7;
    function PesquisarUnidadesMedida(CodTipoInsumo: Integer; const CodOrdenacao: WideString): Integer; dispid 8;
    function EOF: WordBool; dispid 9;
    procedure IrAoProximo; dispid 10;
    procedure IrAoPrimeiro; dispid 11;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 12;
    procedure FecharPesquisa; dispid 13;
    property TipoInsumo: ITipoInsumo readonly dispid 14;
    function NumeroRegistros: Integer; dispid 15;
  end;

// *********************************************************************//
// Interface: ISubTipoInsumo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {415D3573-E3AB-4643-9582-C6AD67FB5773}
// *********************************************************************//
  ISubTipoInsumo = interface(IDispatch)
    ['{415D3573-E3AB-4643-9582-C6AD67FB5773}']
    function Get_CodSubTipoInsumo: Integer; safecall;
    procedure Set_CodSubTipoInsumo(Value: Integer); safecall;
    function Get_SglSubTipoInsumo: WideString; safecall;
    procedure Set_SglSubTipoInsumo(const Value: WideString); safecall;
    function Get_DesSubTipoInsumo: WideString; safecall;
    procedure Set_DesSubTipoInsumo(const Value: WideString); safecall;
    function Get_CodTipoInsumo: Integer; safecall;
    procedure Set_CodTipoInsumo(Value: Integer); safecall;
    function Get_SglTipoInsumo: WideString; safecall;
    procedure Set_SglTipoInsumo(const Value: WideString); safecall;
    function Get_DesTipoInsumo: WideString; safecall;
    procedure Set_DesTipoInsumo(const Value: WideString); safecall;
    function Get_QtdIntervaloMinimoAplicacao: Integer; safecall;
    procedure Set_QtdIntervaloMinimoAplicacao(Value: Integer); safecall;
    function Get_IndSexoAnimalAplicacao: WideString; safecall;
    procedure Set_IndSexoAnimalAplicacao(const Value: WideString); safecall;
    function Get_NumOrdem: Integer; safecall;
    procedure Set_NumOrdem(Value: Integer); safecall;
    property CodSubTipoInsumo: Integer read Get_CodSubTipoInsumo write Set_CodSubTipoInsumo;
    property SglSubTipoInsumo: WideString read Get_SglSubTipoInsumo write Set_SglSubTipoInsumo;
    property DesSubTipoInsumo: WideString read Get_DesSubTipoInsumo write Set_DesSubTipoInsumo;
    property CodTipoInsumo: Integer read Get_CodTipoInsumo write Set_CodTipoInsumo;
    property SglTipoInsumo: WideString read Get_SglTipoInsumo write Set_SglTipoInsumo;
    property DesTipoInsumo: WideString read Get_DesTipoInsumo write Set_DesTipoInsumo;
    property QtdIntervaloMinimoAplicacao: Integer read Get_QtdIntervaloMinimoAplicacao write Set_QtdIntervaloMinimoAplicacao;
    property IndSexoAnimalAplicacao: WideString read Get_IndSexoAnimalAplicacao write Set_IndSexoAnimalAplicacao;
    property NumOrdem: Integer read Get_NumOrdem write Set_NumOrdem;
  end;

// *********************************************************************//
// DispIntf:  ISubTipoInsumoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {415D3573-E3AB-4643-9582-C6AD67FB5773}
// *********************************************************************//
  ISubTipoInsumoDisp = dispinterface
    ['{415D3573-E3AB-4643-9582-C6AD67FB5773}']
    property CodSubTipoInsumo: Integer dispid 1;
    property SglSubTipoInsumo: WideString dispid 2;
    property DesSubTipoInsumo: WideString dispid 3;
    property CodTipoInsumo: Integer dispid 4;
    property SglTipoInsumo: WideString dispid 5;
    property DesTipoInsumo: WideString dispid 6;
    property QtdIntervaloMinimoAplicacao: Integer dispid 7;
    property IndSexoAnimalAplicacao: WideString dispid 8;
    property NumOrdem: Integer dispid 9;
  end;

// *********************************************************************//
// Interface: ISubTiposInsumo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {399B4B00-AE98-4A84-9C06-D6A92F94FB81}
// *********************************************************************//
  ISubTiposInsumo = interface(IDispatch)
    ['{399B4B00-AE98-4A84-9C06-D6A92F94FB81}']
    function Buscar(CodSubTipoInsumo: Integer): Integer; safecall;
    function Pesquisar(CodTipoInsumo: Integer; const CodOrdenacao: WideString): Integer; safecall;
    function Inserir(CodTipoInsumo: Integer; const SglSubTipoInsumo: WideString; 
                     const DesSubTipoInsumo: WideString; QtdeIntervaloMinimoAplicacao: Integer; 
                     const IndSexoAnimalAplicacao: WideString; NumOrdem: Integer): Integer; safecall;
    function Excluir(CodSubTipoInsumo: Integer): Integer; safecall;
    function Alterar(CodSubTipoInsumo: Integer; const SglSubTipoInsumo: WideString; 
                     const DesSubTipoString: WideString; QtdIntervaloMinimoAplicacao: Integer; 
                     const IndSexoAnimalAplicacao: WideString; NumOrdem: Integer): Integer; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoPrimeiro; safecall;
    function EOF: WordBool; safecall;
    procedure FecharPesquisa; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function Get_SubTipoInsumo: ISubTipoInsumo; safecall;
    function NumeroRegistros: Integer; safecall;
    property SubTipoInsumo: ISubTipoInsumo read Get_SubTipoInsumo;
  end;

// *********************************************************************//
// DispIntf:  ISubTiposInsumoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {399B4B00-AE98-4A84-9C06-D6A92F94FB81}
// *********************************************************************//
  ISubTiposInsumoDisp = dispinterface
    ['{399B4B00-AE98-4A84-9C06-D6A92F94FB81}']
    function Buscar(CodSubTipoInsumo: Integer): Integer; dispid 1;
    function Pesquisar(CodTipoInsumo: Integer; const CodOrdenacao: WideString): Integer; dispid 2;
    function Inserir(CodTipoInsumo: Integer; const SglSubTipoInsumo: WideString; 
                     const DesSubTipoInsumo: WideString; QtdeIntervaloMinimoAplicacao: Integer; 
                     const IndSexoAnimalAplicacao: WideString; NumOrdem: Integer): Integer; dispid 3;
    function Excluir(CodSubTipoInsumo: Integer): Integer; dispid 4;
    function Alterar(CodSubTipoInsumo: Integer; const SglSubTipoInsumo: WideString; 
                     const DesSubTipoString: WideString; QtdIntervaloMinimoAplicacao: Integer; 
                     const IndSexoAnimalAplicacao: WideString; NumOrdem: Integer): Integer; dispid 5;
    procedure IrAoProximo; dispid 6;
    procedure IrAoPrimeiro; dispid 7;
    function EOF: WordBool; dispid 8;
    procedure FecharPesquisa; dispid 9;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 10;
    property SubTipoInsumo: ISubTipoInsumo readonly dispid 11;
    function NumeroRegistros: Integer; dispid 12;
  end;

// *********************************************************************//
// Interface: IUnidadeMedida
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {95903909-0BA6-4862-A6B1-B459F6A14585}
// *********************************************************************//
  IUnidadeMedida = interface(IDispatch)
    ['{95903909-0BA6-4862-A6B1-B459F6A14585}']
    function Get_CodUnidadeMedida: Integer; safecall;
    procedure Set_CodUnidadeMedida(Value: Integer); safecall;
    function Get_SglUnidadeMedida: WideString; safecall;
    procedure Set_SglUnidadeMedida(const Value: WideString); safecall;
    function Get_DesUnidadeMedida: WideString; safecall;
    procedure Set_DesUnidadeMedida(const Value: WideString); safecall;
    property CodUnidadeMedida: Integer read Get_CodUnidadeMedida write Set_CodUnidadeMedida;
    property SglUnidadeMedida: WideString read Get_SglUnidadeMedida write Set_SglUnidadeMedida;
    property DesUnidadeMedida: WideString read Get_DesUnidadeMedida write Set_DesUnidadeMedida;
  end;

// *********************************************************************//
// DispIntf:  IUnidadeMedidaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {95903909-0BA6-4862-A6B1-B459F6A14585}
// *********************************************************************//
  IUnidadeMedidaDisp = dispinterface
    ['{95903909-0BA6-4862-A6B1-B459F6A14585}']
    property CodUnidadeMedida: Integer dispid 1;
    property SglUnidadeMedida: WideString dispid 2;
    property DesUnidadeMedida: WideString dispid 3;
  end;

// *********************************************************************//
// Interface: IUnidadesMedida
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8F0822F8-C001-489B-B9AF-E7306D3E9831}
// *********************************************************************//
  IUnidadesMedida = interface(IDispatch)
    ['{8F0822F8-C001-489B-B9AF-E7306D3E9831}']
    function EOF: WordBool; safecall;
    function BOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    function ValorCampo(const NomColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function Get_UnidadeMedida: UnidadeMedida; safecall;
    function Buscar(CodUnidadeMedida: Integer): Integer; safecall;
    function Inserir(const SglUnidadeMedida: WideString; const DesUnidadeMedida: WideString): Integer; safecall;
    function Alterar(CodUnidadeMedida: Integer; const SglUnidadeMedida: WideString; 
                     const DesUnidadeMedida: WideString): Integer; safecall;
    function Excluir(CodUnidadeMedida: Integer): Integer; safecall;
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
    property UnidadeMedida: UnidadeMedida read Get_UnidadeMedida;
  end;

// *********************************************************************//
// DispIntf:  IUnidadesMedidaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8F0822F8-C001-489B-B9AF-E7306D3E9831}
// *********************************************************************//
  IUnidadesMedidaDisp = dispinterface
    ['{8F0822F8-C001-489B-B9AF-E7306D3E9831}']
    function EOF: WordBool; dispid 1;
    function BOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoUltimo; dispid 4;
    procedure IrAoProximo; dispid 5;
    procedure IrAoAnterior; dispid 6;
    function ValorCampo(const NomColuna: WideString): OleVariant; dispid 7;
    procedure FecharPesquisa; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    procedure Posicionar(NumPosicao: Integer); dispid 10;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 11;
    property UnidadeMedida: UnidadeMedida readonly dispid 12;
    function Buscar(CodUnidadeMedida: Integer): Integer; dispid 13;
    function Inserir(const SglUnidadeMedida: WideString; const DesUnidadeMedida: WideString): Integer; dispid 14;
    function Alterar(CodUnidadeMedida: Integer; const SglUnidadeMedida: WideString; 
                     const DesUnidadeMedida: WideString): Integer; dispid 15;
    function Excluir(CodUnidadeMedida: Integer): Integer; dispid 16;
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 17;
  end;

// *********************************************************************//
// Interface: IFabricanteInsumo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {94B11EC8-03FE-4BD3-81E4-8E4B567260AD}
// *********************************************************************//
  IFabricanteInsumo = interface(IDispatch)
    ['{94B11EC8-03FE-4BD3-81E4-8E4B567260AD}']
    function Get_NomFabricanteInsumo: WideString; safecall;
    procedure Set_NomFabricanteInsumo(const Value: WideString); safecall;
    function Get_NomReduzidoFabricanteInsumo: WideString; safecall;
    procedure Set_NomReduzidoFabricanteInsumo(const Value: WideString); safecall;
    function Get_CodFabricanteInsumo: Integer; safecall;
    procedure Set_CodFabricanteInsumo(Value: Integer); safecall;
    function Get_NumRegistroFabricante: Integer; safecall;
    procedure Set_NumRegistroFabricante(Value: Integer); safecall;
    property NomFabricanteInsumo: WideString read Get_NomFabricanteInsumo write Set_NomFabricanteInsumo;
    property NomReduzidoFabricanteInsumo: WideString read Get_NomReduzidoFabricanteInsumo write Set_NomReduzidoFabricanteInsumo;
    property CodFabricanteInsumo: Integer read Get_CodFabricanteInsumo write Set_CodFabricanteInsumo;
    property NumRegistroFabricante: Integer read Get_NumRegistroFabricante write Set_NumRegistroFabricante;
  end;

// *********************************************************************//
// DispIntf:  IFabricanteInsumoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {94B11EC8-03FE-4BD3-81E4-8E4B567260AD}
// *********************************************************************//
  IFabricanteInsumoDisp = dispinterface
    ['{94B11EC8-03FE-4BD3-81E4-8E4B567260AD}']
    property NomFabricanteInsumo: WideString dispid 2;
    property NomReduzidoFabricanteInsumo: WideString dispid 3;
    property CodFabricanteInsumo: Integer dispid 4;
    property NumRegistroFabricante: Integer dispid 5;
  end;

// *********************************************************************//
// Interface: IFabricantesInsumo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B0F4C364-4A91-4CDF-99F3-0175E372B913}
// *********************************************************************//
  IFabricantesInsumo = interface(IDispatch)
    ['{B0F4C364-4A91-4CDF-99F3-0175E372B913}']
    function EOF: WordBool; safecall;
    function BOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    function ValorCampo(const NomColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function Buscar(CodFabricanteInsumo: Integer): Integer; safecall;
    function Inserir(const NomFabricanteInsumo: WideString; 
                     const NomReduzidoFabricanteInsumo: WideString; NumRegistroFabricante: Integer): Integer; safecall;
    function Alterar(CodFabricanteInsumo: Integer; const NomFabricanteInsumo: WideString; 
                     const NomReduzidoFabricanteInsumo: WideString; NumRegistroFabricante: Integer): Integer; safecall;
    function Excluir(CodFabricanteInsumo: Integer): Integer; safecall;
    function Pesquisar(CodTipoInsumo: Integer; const CodOrdenacao: WideString): Integer; safecall;
    function AdicionarTipoInsumo(CodFabricanteInsumo: Integer; CodTipoInsumo: Integer): Integer; safecall;
    function RetirarTipoInsumo(CodFabricanteInsumo: Integer; CodTipoInsumo: Integer): Integer; safecall;
    function PossuiTipoInsumo(CodFabricanteInsumo: Integer; CodTipoInsumo: Integer): Integer; safecall;
    function Get_FabricanteInsumo: IFabricanteInsumo; safecall;
    property FabricanteInsumo: IFabricanteInsumo read Get_FabricanteInsumo;
  end;

// *********************************************************************//
// DispIntf:  IFabricantesInsumoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B0F4C364-4A91-4CDF-99F3-0175E372B913}
// *********************************************************************//
  IFabricantesInsumoDisp = dispinterface
    ['{B0F4C364-4A91-4CDF-99F3-0175E372B913}']
    function EOF: WordBool; dispid 1;
    function BOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoUltimo; dispid 4;
    procedure IrAoProximo; dispid 5;
    procedure IrAoAnterior; dispid 6;
    function ValorCampo(const NomColuna: WideString): OleVariant; dispid 7;
    procedure FecharPesquisa; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    procedure Posicionar(NumPosicao: Integer); dispid 10;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 11;
    function Buscar(CodFabricanteInsumo: Integer): Integer; dispid 13;
    function Inserir(const NomFabricanteInsumo: WideString; 
                     const NomReduzidoFabricanteInsumo: WideString; NumRegistroFabricante: Integer): Integer; dispid 14;
    function Alterar(CodFabricanteInsumo: Integer; const NomFabricanteInsumo: WideString; 
                     const NomReduzidoFabricanteInsumo: WideString; NumRegistroFabricante: Integer): Integer; dispid 15;
    function Excluir(CodFabricanteInsumo: Integer): Integer; dispid 16;
    function Pesquisar(CodTipoInsumo: Integer; const CodOrdenacao: WideString): Integer; dispid 17;
    function AdicionarTipoInsumo(CodFabricanteInsumo: Integer; CodTipoInsumo: Integer): Integer; dispid 12;
    function RetirarTipoInsumo(CodFabricanteInsumo: Integer; CodTipoInsumo: Integer): Integer; dispid 18;
    function PossuiTipoInsumo(CodFabricanteInsumo: Integer; CodTipoInsumo: Integer): Integer; dispid 19;
    property FabricanteInsumo: IFabricanteInsumo readonly dispid 20;
  end;

// *********************************************************************//
// Interface: IEvento
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {50308EF8-6E96-4A31-BE47-6F1FCFBD5567}
// *********************************************************************//
  IEvento = interface(IDispatch)
    ['{50308EF8-6E96-4A31-BE47-6F1FCFBD5567}']
    function Get_CodPessoaProdutor: Integer; safecall;
    function Get_CodEvento: Integer; safecall;
    function Get_CodTipoEvento: Integer; safecall;
    function Get_SglTipoEvento: WideString; safecall;
    function Get_DesTipoEvento: WideString; safecall;
    function Get_CodGrupoEvento: Integer; safecall;
    function Get_SglGrupoEvento: WideString; safecall;
    function Get_DesGrupoEvento: WideString; safecall;
    function Get_DtaInicio: TDateTime; safecall;
    function Get_DtaFim: TDateTime; safecall;
    function Get_TxtDados: WideString; safecall;
    function Get_TxtObservacao: WideString; safecall;
    function Get_QtdAnimais: Integer; safecall;
    function Get_DtaCadastramento: TDateTime; safecall;
    function Get_DtaEfetivacaoCadastro: TDateTime; safecall;
    function Get_CodArquivoSisbov: Integer; safecall;
    function Get_NomArquivoSisbov: WideString; safecall;
    function Get_DtaGravacaoSisbov: TDateTime; safecall;
    function Get_CodSituacaoSisBov: WideString; safecall;
    function Get_CodAptidao: Integer; safecall;
    function Get_CodCategoria: Integer; safecall;
    function Get_CodFazenda: Integer; safecall;
    function Get_Nirf: WideString; safecall;
    function Get_CNPJAglomeracao: WideString; safecall;
    function Get_NomArquivoCertificado: WideString; safecall;
    function Get_CodPropriedadeRural: Integer; safecall;
    function Get_NomPropriedadeRural: WideString; safecall;
    function Get_NumCNPJCPFPessoa: WideString; safecall;
    function Get_CodPessoa: Integer; safecall;
    function Get_NomPessoa: WideString; safecall;
    function Get_NumCNPJCPFPessoaSecundaria: WideString; safecall;
    function Get_CodPessoaSecundaria: Integer; safecall;
    function Get_NomPessoaSecundaria: WideString; safecall;
    function Get_NumGta: WideString; safecall;
    function Get_DtaEmissaoGta: TDateTime; safecall;
    function Get_CodFazendaManejo: Integer; safecall;
    function Get_CodAnimalRMManejo: WideString; safecall;
    function Get_CodPessoaSecAvaliador: Integer; safecall;
    function Get_CodTipoAvaliacao: Integer; safecall;
    function Get_CodGrauDificuldade: Integer; safecall;
    function Get_CodEventoCobertura: Integer; safecall;
    function Get_DesSituacaoCria: WideString; safecall;
    function Get_DtaEventoCobertura: TDateTime; safecall;
    function Get_QtdDiasGestacao: Integer; safecall;
    function Get_NumOrdemParto: Integer; safecall;
    function Get_CodAnimalManejoCria: WideString; safecall;
    function Get_CodAnimalManejoGemeo: WideString; safecall;
    function Get_CodAnimalManejoTouro: WideString; safecall;
    function Get_CodAnimalManejoFemea: WideString; safecall;
    function Get_CodEstacaoMonta: Integer; safecall;
    function Get_CodAnimalTouro: Integer; safecall;
    function Get_CodAnimalFemea: Integer; safecall;
    function Get_CodLocalizacaoSisbov: Integer; safecall;
    function Get_CodPessoaOrigem: Integer; safecall;
    function Get_CodPessoaDestino: Integer; safecall;
    function Get_CodEventoAssociado: Integer; safecall;
    procedure Set_CodEventoAssociado(Value: Integer); safecall;
    function Get_IndVendaCertifTerceira: WideString; safecall;
    procedure Set_IndVendaCertifTerceira(const Value: WideString); safecall;
    function Get_CodExportacaoPropriedade: WideString; safecall;
    procedure Set_CodExportacaoPropriedade(const Value: WideString); safecall;
    function Get_CodSerieGTA: WideString; safecall;
    procedure Set_CodSerieGTA(const Value: WideString); safecall;
    function Get_CodEstadoGTA: Integer; safecall;
    procedure Set_CodEstadoGTA(Value: Integer); safecall;
    function Get_IndMovNErasEras: WideString; safecall;
    procedure Set_IndMovNErasEras(const Value: WideString); safecall;
    function Get_DtaValidadeGTA: TDateTime; safecall;
    procedure Set_DtaValidadeGTA(Value: TDateTime); safecall;
    function Get_IndMigrarAnimal: WideString; safecall;
    procedure Set_IndMigrarAnimal(const Value: WideString); safecall;
    property CodPessoaProdutor: Integer read Get_CodPessoaProdutor;
    property CodEvento: Integer read Get_CodEvento;
    property CodTipoEvento: Integer read Get_CodTipoEvento;
    property SglTipoEvento: WideString read Get_SglTipoEvento;
    property DesTipoEvento: WideString read Get_DesTipoEvento;
    property CodGrupoEvento: Integer read Get_CodGrupoEvento;
    property SglGrupoEvento: WideString read Get_SglGrupoEvento;
    property DesGrupoEvento: WideString read Get_DesGrupoEvento;
    property DtaInicio: TDateTime read Get_DtaInicio;
    property DtaFim: TDateTime read Get_DtaFim;
    property TxtDados: WideString read Get_TxtDados;
    property TxtObservacao: WideString read Get_TxtObservacao;
    property QtdAnimais: Integer read Get_QtdAnimais;
    property DtaCadastramento: TDateTime read Get_DtaCadastramento;
    property DtaEfetivacaoCadastro: TDateTime read Get_DtaEfetivacaoCadastro;
    property CodArquivoSisbov: Integer read Get_CodArquivoSisbov;
    property NomArquivoSisbov: WideString read Get_NomArquivoSisbov;
    property DtaGravacaoSisbov: TDateTime read Get_DtaGravacaoSisbov;
    property CodSituacaoSisBov: WideString read Get_CodSituacaoSisBov;
    property CodAptidao: Integer read Get_CodAptidao;
    property CodCategoria: Integer read Get_CodCategoria;
    property CodFazenda: Integer read Get_CodFazenda;
    property Nirf: WideString read Get_Nirf;
    property CNPJAglomeracao: WideString read Get_CNPJAglomeracao;
    property NomArquivoCertificado: WideString read Get_NomArquivoCertificado;
    property CodPropriedadeRural: Integer read Get_CodPropriedadeRural;
    property NomPropriedadeRural: WideString read Get_NomPropriedadeRural;
    property NumCNPJCPFPessoa: WideString read Get_NumCNPJCPFPessoa;
    property CodPessoa: Integer read Get_CodPessoa;
    property NomPessoa: WideString read Get_NomPessoa;
    property NumCNPJCPFPessoaSecundaria: WideString read Get_NumCNPJCPFPessoaSecundaria;
    property CodPessoaSecundaria: Integer read Get_CodPessoaSecundaria;
    property NomPessoaSecundaria: WideString read Get_NomPessoaSecundaria;
    property NumGta: WideString read Get_NumGta;
    property DtaEmissaoGta: TDateTime read Get_DtaEmissaoGta;
    property CodFazendaManejo: Integer read Get_CodFazendaManejo;
    property CodAnimalRMManejo: WideString read Get_CodAnimalRMManejo;
    property CodPessoaSecAvaliador: Integer read Get_CodPessoaSecAvaliador;
    property CodTipoAvaliacao: Integer read Get_CodTipoAvaliacao;
    property CodGrauDificuldade: Integer read Get_CodGrauDificuldade;
    property CodEventoCobertura: Integer read Get_CodEventoCobertura;
    property DesSituacaoCria: WideString read Get_DesSituacaoCria;
    property DtaEventoCobertura: TDateTime read Get_DtaEventoCobertura;
    property QtdDiasGestacao: Integer read Get_QtdDiasGestacao;
    property NumOrdemParto: Integer read Get_NumOrdemParto;
    property CodAnimalManejoCria: WideString read Get_CodAnimalManejoCria;
    property CodAnimalManejoGemeo: WideString read Get_CodAnimalManejoGemeo;
    property CodAnimalManejoTouro: WideString read Get_CodAnimalManejoTouro;
    property CodAnimalManejoFemea: WideString read Get_CodAnimalManejoFemea;
    property CodEstacaoMonta: Integer read Get_CodEstacaoMonta;
    property CodAnimalTouro: Integer read Get_CodAnimalTouro;
    property CodAnimalFemea: Integer read Get_CodAnimalFemea;
    property CodLocalizacaoSisbov: Integer read Get_CodLocalizacaoSisbov;
    property CodPessoaOrigem: Integer read Get_CodPessoaOrigem;
    property CodPessoaDestino: Integer read Get_CodPessoaDestino;
    property CodEventoAssociado: Integer read Get_CodEventoAssociado write Set_CodEventoAssociado;
    property IndVendaCertifTerceira: WideString read Get_IndVendaCertifTerceira write Set_IndVendaCertifTerceira;
    property CodExportacaoPropriedade: WideString read Get_CodExportacaoPropriedade write Set_CodExportacaoPropriedade;
    property CodSerieGTA: WideString read Get_CodSerieGTA write Set_CodSerieGTA;
    property CodEstadoGTA: Integer read Get_CodEstadoGTA write Set_CodEstadoGTA;
    property IndMovNErasEras: WideString read Get_IndMovNErasEras write Set_IndMovNErasEras;
    property DtaValidadeGTA: TDateTime read Get_DtaValidadeGTA write Set_DtaValidadeGTA;
    property IndMigrarAnimal: WideString read Get_IndMigrarAnimal write Set_IndMigrarAnimal;
  end;

// *********************************************************************//
// DispIntf:  IEventoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {50308EF8-6E96-4A31-BE47-6F1FCFBD5567}
// *********************************************************************//
  IEventoDisp = dispinterface
    ['{50308EF8-6E96-4A31-BE47-6F1FCFBD5567}']
    property CodPessoaProdutor: Integer readonly dispid 1;
    property CodEvento: Integer readonly dispid 2;
    property CodTipoEvento: Integer readonly dispid 3;
    property SglTipoEvento: WideString readonly dispid 4;
    property DesTipoEvento: WideString readonly dispid 5;
    property CodGrupoEvento: Integer readonly dispid 6;
    property SglGrupoEvento: WideString readonly dispid 7;
    property DesGrupoEvento: WideString readonly dispid 8;
    property DtaInicio: TDateTime readonly dispid 9;
    property DtaFim: TDateTime readonly dispid 10;
    property TxtDados: WideString readonly dispid 11;
    property TxtObservacao: WideString readonly dispid 12;
    property QtdAnimais: Integer readonly dispid 13;
    property DtaCadastramento: TDateTime readonly dispid 14;
    property DtaEfetivacaoCadastro: TDateTime readonly dispid 15;
    property CodArquivoSisbov: Integer readonly dispid 16;
    property NomArquivoSisbov: WideString readonly dispid 17;
    property DtaGravacaoSisbov: TDateTime readonly dispid 18;
    property CodSituacaoSisBov: WideString readonly dispid 19;
    property CodAptidao: Integer readonly dispid 21;
    property CodCategoria: Integer readonly dispid 22;
    property CodFazenda: Integer readonly dispid 20;
    property Nirf: WideString readonly dispid 23;
    property CNPJAglomeracao: WideString readonly dispid 24;
    property NomArquivoCertificado: WideString readonly dispid 25;
    property CodPropriedadeRural: Integer readonly dispid 26;
    property NomPropriedadeRural: WideString readonly dispid 27;
    property NumCNPJCPFPessoa: WideString readonly dispid 28;
    property CodPessoa: Integer readonly dispid 29;
    property NomPessoa: WideString readonly dispid 30;
    property NumCNPJCPFPessoaSecundaria: WideString readonly dispid 31;
    property CodPessoaSecundaria: Integer readonly dispid 32;
    property NomPessoaSecundaria: WideString readonly dispid 33;
    property NumGta: WideString readonly dispid 34;
    property DtaEmissaoGta: TDateTime readonly dispid 35;
    property CodFazendaManejo: Integer readonly dispid 36;
    property CodAnimalRMManejo: WideString readonly dispid 37;
    property CodPessoaSecAvaliador: Integer readonly dispid 38;
    property CodTipoAvaliacao: Integer readonly dispid 39;
    property CodGrauDificuldade: Integer readonly dispid 40;
    property CodEventoCobertura: Integer readonly dispid 41;
    property DesSituacaoCria: WideString readonly dispid 42;
    property DtaEventoCobertura: TDateTime readonly dispid 43;
    property QtdDiasGestacao: Integer readonly dispid 44;
    property NumOrdemParto: Integer readonly dispid 45;
    property CodAnimalManejoCria: WideString readonly dispid 46;
    property CodAnimalManejoGemeo: WideString readonly dispid 47;
    property CodAnimalManejoTouro: WideString readonly dispid 48;
    property CodAnimalManejoFemea: WideString readonly dispid 49;
    property CodEstacaoMonta: Integer readonly dispid 50;
    property CodAnimalTouro: Integer readonly dispid 52;
    property CodAnimalFemea: Integer readonly dispid 53;
    property CodLocalizacaoSisbov: Integer readonly dispid 201;
    property CodPessoaOrigem: Integer readonly dispid 202;
    property CodPessoaDestino: Integer readonly dispid 203;
    property CodEventoAssociado: Integer dispid 204;
    property IndVendaCertifTerceira: WideString dispid 205;
    property CodExportacaoPropriedade: WideString dispid 206;
    property CodSerieGTA: WideString dispid 207;
    property CodEstadoGTA: Integer dispid 208;
    property IndMovNErasEras: WideString dispid 209;
    property DtaValidadeGTA: TDateTime dispid 210;
    property IndMigrarAnimal: WideString dispid 211;
  end;

// *********************************************************************//
// Interface: IEventos
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D5481A3D-9DBF-402D-8669-F5E1905CE191}
// *********************************************************************//
  IEventos = interface(IDispatch)
    ['{D5481A3D-9DBF-402D-8669-F5E1905CE191}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Get_Evento: IEvento; safecall;
    function Buscar(CodEvento: Integer; const IndRetornaDetalhe: WideString): Integer; safecall;
    function InserirMudRegAlimentar(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                    CodAptidao: Integer; CodRegimeAlimentarOrigem: Integer; 
                                    CodRegimeAlimentarDestino: Integer; CodFazenda: Integer): Integer; safecall;
    function InserirMudCategoria(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                 CodAptidao: Integer; CodCategoriaOrigem: Integer; 
                                 CodCategoriaDestino: Integer; CodFazenda: Integer): Integer; safecall;
    function InserirSelecaoReproducao(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                      CodFazenda: Integer): Integer; safecall;
    function InserirCastracao(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                              CodFazenda: Integer): Integer; safecall;
    function InserirDesmame(DtaEvento: TDateTime; CodAptidao: Integer; 
                            CodRegimeAlimentarDestino: Integer; const TxtObservacao: WideString; 
                            CodFazenda: Integer): Integer; safecall;
    function AlterarObservacao(CodEvento: Integer; const TxtObservacao: WideString): Integer; safecall;
    function InserirMudancaLote(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                CodFazenda: Integer; CodLoteDestino: Integer): Integer; safecall;
    function InserirDesaparecimento(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                    CodFazenda: Integer): Integer; safecall;
    function InserirMorte(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                          CodTipoMorte: Integer; CodCausaMorte: Integer; CodFazenda: Integer): Integer; safecall;
    function InserirMudancaLocal(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                 CodAptidao: Integer; CodFazenda: Integer; 
                                 CodLocalDestino: Integer; CodRegAlimentarMamando: Integer; 
                                 CodRegAlimentarDesmamado: Integer): Integer; safecall;
    function Pesquisar(CodEvento: Integer; CodTipoEvento: Integer; DtaInicio: TDateTime; 
                       DtaFim: TDateTime; const TxtDados: WideString; 
                       const CodSituacaoSisBov: WideString; CodFazenda: Integer; 
                       const IndAplicadoAnimais: WideString; const CodOrdenacao: WideString; 
                       const IndOrdenacaoCrescente: WideString; CodGrupoEvento: Integer): Integer; safecall;
    function InserirVendaCriador(DtaSaidaOrigem: TDateTime; DtaChegadaDestino: TDateTime; 
                                 const TxtObservacao: WideString; 
                                 const NumImovelReceitaFederal: WideString; 
                                 const CodLocalizacaoSisbov: WideString; 
                                 CodPropriedadeRural: Integer; CodPessoa: Integer; 
                                 CodPessoaSecundaria: Integer; const NumCNPJCPFCriador: WideString; 
                                 DtaEmissaoGta: TDateTime; const NumGta: WideString; 
                                 CodFazenda: Integer; const IndEventoCertTerceira: WideString; 
                                 const CodSerieGTA: WideString; CodEstadoGTA: Integer; 
                                 const IndMovNErasEras: WideString; DtaValidadeGTA: TDateTime): Integer; safecall;
    function InserirVendaFrigorifico(DtaSaidaOrigem: TDateTime; DtaChegadaDestino: TDateTime; 
                                     const TxtObservacao: WideString; 
                                     const NumCNPJCPFPessoa: WideString; CodPessoa: Integer; 
                                     DtaEmissaoGta: TDateTime; const NumGta: WideString; 
                                     CodFazenda: Integer; const CodSerieGTA: WideString; 
                                     CodEstadoGTA: Integer; DtaValidadeGTA: TDateTime): Integer; safecall;
    function InserirTransferencia(DtaSaidaOrigem: TDateTime; DtaChegadaDestino: TDateTime; 
                                  const TxtObservacao: WideString; CodAptidao: Integer; 
                                  CodTipoLugarOrigem: Integer; CodFazendaOrigem: Integer; 
                                  const NumImovelOrigem: WideString; 
                                  CodLocalizacaoSISBOVOrigem: Integer; 
                                  CodPropriedadeOrigem: Integer; 
                                  const NumCNPJCPFOrigem: WideString; CodPessoaOrigem: Integer; 
                                  CodPessoaSecundariaOrigem: Integer; CodTipoLugarDestino: Integer; 
                                  CodFazendaDestino: Integer; CodLocalDestino: Integer; 
                                  CodLoteDestino: Integer; const NumImovelDestino: WideString; 
                                  CodLocalizacaoSISBOVDestino: Integer; 
                                  CodPropriedadeDestino: Integer; 
                                  const NumCNPJCPFDestino: WideString; CodPessoaDestino: Integer; 
                                  CodPessoaSecundariaDestino: Integer; 
                                  CodRegAlimentarMamando: Integer; 
                                  CodRegAlimentarDesmamado: Integer; const NumGta: WideString; 
                                  DtaEmissaoGta: TDateTime; const CodSerieGTA: WideString; 
                                  CodEstadoGTA: Integer; DtaValidadeGTA: TDateTime; 
                                  const IndMovNErasEras: WideString; 
                                  const IndMigrarAnimal: WideString): Integer; safecall;
    function EfetivarCadastro(CodEvento: Integer): Integer; safecall;
    function CancelarEfetivacao(CodEvento: Integer): Integer; safecall;
    function MarcarNaoGravadoSisbov(CodEvento: Integer): Integer; safecall;
    function Excluir(CodEvento: Integer): Integer; safecall;
    function AlterarGTA(CodEvento: Integer; const NumGta: WideString; DtaEmissaoGta: TDateTime; 
                        const CodSerieGTA: WideString; CodEstadoGTA: Integer; 
                        DtaValidadeGTA: TDateTime): Integer; safecall;
    function InserirAbateAnimalVendido(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                       CodFazenda: Integer): Integer; safecall;
    function InserirSanitario(DtaInicio: TDateTime; DtaFim: TDateTime; 
                              const TxtObservacao: WideString; CodFazenda: Integer): Integer; safecall;
    function AdicionarSubEventoSanitario(CodEvento: Integer; CodEntradaInsumo: Integer): Integer; safecall;
    function RemoverSubEventoSanitario(CodEvento: Integer; CodEntradaInsumo: Integer): Integer; safecall;
    function PesquisarSubEventosSanitarios(CodEvento: Integer): Integer; safecall;
    function InserirEmissaoCertificado(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                       CodFazenda: Integer): Integer; safecall;
    function PossuiMensagemOcorrenciaAplicacao(CodEvento: Integer): Integer; safecall;
    function Get_UltimoArquivoGerado: WideString; safecall;
    function GerarRelatorioConsolidado(const SglProdutor: WideString; 
                                       const NomPessoaProdutor: WideString; 
                                       const CodSituacaoSisBov: WideString; 
                                       CodGrupoEvento: Integer; const CodTipoEvento: WideString; 
                                       CodTipoSubEventoSanitario: Integer; DtaInicio: TDateTime; 
                                       DtaFim: TDateTime; const TxtDados: WideString; 
                                       Tipo: Integer; QtdQuebraRelatorio: Integer; 
                                       DtaInicioCadastro: TDateTime; DtaFimCadastro: TDateTime; 
                                       DtaInicioEfetivacao: TDateTime; DtaFimEfetivacao: TDateTime): WideString; safecall;
    function GerarRelatorioAnimaisAplicados(const CodSituacaoSisbovEvento: WideString; 
                                            CodGrupoEvento: Integer; CodTipoEvento: Integer; 
                                            CodTipoSubEventoSanitario: Integer; CodEvento: Integer; 
                                            DtaInicioEvento: TDateTime; DtaFimEvento: TDateTime; 
                                            CodFazendaManejo: Integer; 
                                            const CodAnimalManejoInicio: WideString; 
                                            const CodAnimalManejoFim: WideString; 
                                            CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                                            CodMicroRegiaoSISBOV: Integer; 
                                            CodAnimalSISBOVInicio: Integer; 
                                            CodAnimalSISBOVFim: Integer; 
                                            DtaNascimentoInicio: TDateTime; 
                                            DtaNascimentoFim: TDateTime; 
                                            DtaIdentificacaoInicio: TDateTime; 
                                            DtaIdentificacaoFim: TDateTime; 
                                            const CodRaca: WideString; 
                                            const CodCategoria: WideString; 
                                            const IndSexo: WideString; CodTipoLugar: Integer; 
                                            const CodLocal: WideString; const CodLote: WideString; 
                                            const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                            QtdCompRacialInicio1: Double; 
                                            QtdCompRacialFim1: Double; 
                                            const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                            QtdCompRacialInicio2: Double; 
                                            QtdCompRacialFim2: Double; 
                                            const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                            QtdCompRacialInicio3: Double; 
                                            QtdCompRacialFim3: Double; 
                                            const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                            QtdCompRacialInicio4: Double; 
                                            QtdCompRacialFim4: Double; Tipo: Integer; 
                                            const IndMostrarCriteriosPesquisa: WideString; 
                                            const IndAnimaisNaoAssociados: WideString; 
                                            const SemTecnico: WideString; CodPessoaTecnico: Integer): WideString; safecall;
    function InserirPesagem(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                            CodFazenda: Integer): Integer; safecall;
    function EmitirCertificado(CodEvento: Integer; CodModeloCertificado: Integer): Integer; safecall;
    function InserirEstacaoMonta(DtaInicio: TDateTime; DtaFim: TDateTime; 
                                 const TxtObservacao: WideString; CodFazenda: Integer; 
                                 const SglEstacaoMonta: WideString; 
                                 const DesEstacaoMonta: WideString): Integer; safecall;
    function AlterarVendaCriador(CodEvento: Integer; const NumImovelReceitaFederal: WideString; 
                                 const CodLocalizacaoSisbov: WideString; 
                                 CodPropriedadeRural: Integer; 
                                 const NumCNPJCPFPessoaSecundaria: WideString; CodPessoa: Integer; 
                                 CodPessoaSecundaria: Integer; const NumGta: WideString; 
                                 DtaEmissaoGta: TDateTime; 
                                 const IndVendaCertifTerceira: WideString; 
                                 const CodSerieGTA: WideString; CodEstadoGTA: Integer; 
                                 const IndMovNErasEras: WideString; DtaValidadeGTA: TDateTime; 
                                 DtaSaidaOrigem: TDateTime; DtaChegadaDestino: TDateTime): Integer; safecall;
    function AlterarVendaFrigorifico(CodEvento: Integer; const NumCNPJCPFFrigorifico: WideString; 
                                     CodPessoaFrigorifico: Integer; const NumGta: WideString; 
                                     DtaEmissaoGta: TDateTime; const CodSerieGTA: WideString; 
                                     CodEstadoGTA: Integer; DtaValidadeGTA: TDateTime; 
                                     DtaSaidaOrigem: TDateTime; DtaChegadaDestino: TDateTime): Integer; safecall;
    function InserirCoberturaRegimePasto(DtaInicio: TDateTime; DtaFim: TDateTime; 
                                         CodFazenda: Integer; const TxtObservacao: WideString; 
                                         CodFazendaManejo: Integer; 
                                         const CodAnimalManejo: WideString; 
                                         CodAnimalTouro: Integer; CodReprodutorMultiplo: Integer; 
                                         CodEventoEstacaoMonta: Integer): Integer; safecall;
    function AlterarCoberturaRegimePasto(CodEvento: Integer; DtaFim: TDateTime; 
                                         CodFazendaManejo: Integer; 
                                         const CodAnimalManejo: WideString; 
                                         CodAnimalTouro: Integer; CodReprodutorMultiplo: Integer): Integer; safecall;
    function InserirDiagnosticoPrenhez(DtaEvento: TDateTime; CodFazenda: Integer; 
                                       const TxtObservacao: WideString; 
                                       CodEventoEstacaoMonta: Integer): Integer; safecall;
    function InserirExameAndrologico(DtaEvento: TDateTime; CodFazenda: Integer; 
                                     const TxtObservacao: WideString): Integer; safecall;
    function InserirCoberturaMontaControlada(DtaEvento: TDateTime; CodFazenda: Integer; 
                                             const TxtObservacao: WideString; 
                                             CodAnimalTouro: Integer; 
                                             CodFazendaManejoTouro: Integer; 
                                             const CodAnimalManejoTouro: WideString; 
                                             CodAnimalFemea: Integer; 
                                             CodFazendaManejoFemea: Integer; 
                                             const CodAnimalManejoFemea: WideString; 
                                             CodEventoEstacaoMonta: Integer): Integer; safecall;
    function InserirCoberturaInseminacaoArtificial(DtaEvento: TDateTime; HraEvento: TDateTime; 
                                                   CodFazenda: Integer; 
                                                   const TxtObservacao: WideString; 
                                                   CodAnimalTouro: Integer; 
                                                   const NumPartida: WideString; 
                                                   CodAnimalFemea: Integer; 
                                                   CodFazendaManejoFemea: Integer; 
                                                   const CodAnimalManejoFemea: WideString; 
                                                   QtdDoses: Integer; 
                                                   CodPessoaSecundariaInseminador: Integer; 
                                                   CodEventoEstacaoMonta: Integer): Integer; safecall;
    function InserirAvaliacao(DtaEvento: TDateTime; CodFazenda: Integer; 
                              const TxtObservacao: WideString; CodTipoAvaliacao: Integer; 
                              CodPessoaSecAvaliador: Integer): Integer; safecall;
    function AlterarAvaliacao(CodEvento: Integer; DtaEvento: TDateTime; 
                              CodPessoaSecAvaliador: Integer): Integer; safecall;
    function GerarRelatorioAvaliacao(CodEvento: Integer; DtaInicioEvento: TDateTime; 
                                     DtaFimEvento: TDateTime; CodTipoAvaliacao: Integer; 
                                     const CodCaracteristicas: WideString; 
                                     CodFazendaManejo: Integer; 
                                     const CodAnimalManejoInicio: WideString; 
                                     const CodAnimalManejoFim: WideString; 
                                     CodFazendaManejoPai: Integer; 
                                     const CodAnimalManejoPai: WideString; 
                                     const NomAnimalPai: WideString; 
                                     const DesApelidoPai: WideString; CodFazendaManejoMae: Integer; 
                                     const CodAnimalManejoMae: WideString; 
                                     DtaNascimentoInicio: TDateTime; DtaNascimentoFim: TDateTime; 
                                     const IndSexo: WideString; const CodRacas: WideString; 
                                     const CodCategorias: WideString; const CodLocais: WideString; 
                                     const CodLotes: WideString; const IndAgrupRaca1: WideString; 
                                     CodRaca1: Integer; QtdCompRacialInicio1: Double; 
                                     QtdCompRacialFim1: Double; const IndAgrupRaca2: WideString; 
                                     CodRaca2: Integer; QtdCompRacialInicio2: Double; 
                                     QtdCompRacialFim2: Double; const IndAgrupRaca3: WideString; 
                                     CodRaca3: Integer; QtdCompRacialInicio3: Double; 
                                     QtdCompRacialFim3: Double; const IndAgrupRaca4: WideString; 
                                     CodRaca4: Integer; QtdCompRacialInicio4: Double; 
                                     QtdCompRacialFim4: Double; Tipo: Integer; 
                                     QtdQuebraRelatorio: Integer): WideString; safecall;
    function InserirParto(DtaEvento: TDateTime; CodFazenda: Integer; 
                          const TxtObservacao: WideString; CodGrauDificuldade: Integer; 
                          CodSituacaoCria: Integer; CodEstacaoMonta: Integer; 
                          const CodAnimalManejoCria: WideString; const IndSexoCria: WideString; 
                          CodPelagemCria: Integer; QtdPesagemCria: Double; 
                          const CodAnimalManejoGemeo: WideString; const IndSexoGemeo: WideString; 
                          CodPelagemGemeo: Integer; QtdPesagemGemeo: Double; 
                          CodAnimalFemea: Integer; CodFazendaManejoFemea: Integer; 
                          const CodAnimalManejoFemea: WideString; 
                          const IndCodSisBovReservado: WideString): WideString; safecall;
    function AlterarParto(CodEvento: Integer; DtaEvento: TDateTime; CodGrauDificuldade: Integer; 
                          CodCobertura: Integer): Integer; safecall;
    function PesquisarEstacoesMonta(NumMaxEventos: Integer; CodFazenda: Integer): Integer; safecall;
    function GerarRelatorioPrevisaoParto(CodEventoEstacaoMonta: Integer; 
                                         const CodTipoEventosCobertura: WideString; 
                                         DtaPrevistaPartoInicio: TDateTime; 
                                         DtaPrevistaPartoFim: TDateTime; 
                                         const CodRacas: WideString; 
                                         const CodCategorias: WideString; 
                                         const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                         QtdCompRacialInicio1: Double; QtdCompRacialFim1: Double; 
                                         const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                         QtdCompRacialInicio2: Double; QtdCompRacialFim2: Double; 
                                         const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                         QtdCompRacialInicio3: Double; QtdCompRacialFim3: Double; 
                                         const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                         QtdCompRacialInicio4: Double; QtdCompRacialFim4: Double; 
                                         NumOrdemInicio: Integer; NumOrdemFim: Integer; 
                                         const CodLotes: WideString; const CodLocais: WideString; 
                                         CodFazendaManejo: Integer; 
                                         const CodAnimalManejoInicio: WideString; 
                                         const CodAnimalManejoFim: WideString; 
                                         CodFazendaManejoPai: Integer; 
                                         const CodAnimalManejoPai: WideString; 
                                         const IndDiagnosticoPrenhez: WideString; Tipo: Integer): WideString; safecall;
    function PesquisarMontasParto(CodEventoParto: Integer): Integer; safecall;
    function GerarRelatorioFemeasADiagnosticar(CodEventoEstacaoMonta: Integer; 
                                               const CodTipoEventosCobertura: WideString; 
                                               DtaDiagnosticoPrevisto: TDateTime; 
                                               const CodRacas: WideString; 
                                               const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                               QtdCompRacialInicio1: Double; 
                                               QtdCompRacialFim1: Double; 
                                               const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                               QtdCompRacialInicio2: Double; 
                                               QtdCompRacialFim2: Double; 
                                               const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                               QtdCompRacialInicio3: Double; 
                                               QtdCompRacialFim3: Double; 
                                               const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                               QtdCompRacialInicio4: Double; 
                                               QtdCompRacialFim4: Double; NumOrdemInicio: Integer; 
                                               NumOrdemFim: Integer; const CodLotes: WideString; 
                                               const CodLocais: WideString; 
                                               const CodCategorias: WideString; 
                                               CodFazendaManejo: Integer; 
                                               const CodAnimalManejoInicio: WideString; 
                                               const CodAnimalManejoFim: WideString; 
                                               CodFazendaManejoPai: Integer; 
                                               const CodAnimalManejoPai: WideString; Tipo: Integer): WideString; safecall;
    function GerarRelatorioDesempenhoVacas(CodFazendaManejo: Integer; 
                                           const CodAnimalManejoInicio: WideString; 
                                           const CodAnimalManejoFim: WideString; 
                                           CodFazendaManejoPai: Integer; 
                                           const CodAnimalManejoPai: WideString; 
                                           CodFazendaManejoMae: Integer; 
                                           const CodAnimalManejoMae: WideString; 
                                           const CodRacas: WideString; 
                                           const CodCategorias: WideString; 
                                           const CodLocais: WideString; const CodLotes: WideString; 
                                           const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                           QtdCompRacialInicio1: Double; QtdCompRacialFim1: Double; 
                                           const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                           QtdCompRacialInicio2: Double; QtdCompRacialFim2: Double; 
                                           const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                           QtdCompRacialInicio3: Double; QtdCompRacialFim3: Double; 
                                           const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                           QtdCompRacialInicio4: Double; QtdCompRacialFim4: Double; 
                                           NumPartoInicio: Integer; NumPartoFim: Integer; 
                                           NumDiasIntervaloInicio: Integer; 
                                           NumDiasIntervalorFim: Integer; 
                                           QtdPesoDesmameInicio: Integer; 
                                           QtdPesoDesmameFim: Integer; Tipo: Integer): WideString; safecall;
    function GerarRelatorioResumoEstacaoMonta(CodEventoEstacaoMonta: Integer): WideString; safecall;
    function GerarRelatorioAvaliacaoInseminacao(CodEventoEstacaoMonta: Integer; 
                                                CodFazendaManejoTouro: Integer; 
                                                const CodAnimalManejoTouroInicio: WideString; 
                                                const CodAnimalManejoTouroFim: WideString; 
                                                const NomAnimalTouro: WideString; 
                                                const DesApelidoTouro: WideString; 
                                                const NumPartida: WideString; 
                                                const CodRacas: WideString; 
                                                const CodCategorias: WideString; 
                                                const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                                QtdCompRacialInicio1: Double; 
                                                QtdCompRacialFim1: Double; 
                                                const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                                QtdCompRacialInicio2: Double; 
                                                QtdCompRacialFim2: Double; 
                                                const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                                QtdCompRacialInicio3: Double; 
                                                QtdCompRacialFim3: Double; 
                                                const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                                QtdCompRacialInicio4: Double; 
                                                QtdCompRacialFim4: Double; 
                                                NumOrdemPartoInicio: Integer; 
                                                NumOrdemPartoFim: Integer; 
                                                const CodInseminadores: WideString; Tipo: Integer; 
                                                QtdQuebraRelatorio: Integer): WideString; safecall;
    function GerarRelatorioConsultaReprodutiva(CodFazendaManejo: Integer; 
                                               const CodAnimalManejoInicio: WideString; 
                                               const CodAnimalManejoFim: WideString; 
                                               CodFazenda: Integer; const CodEstacoes: WideString; 
                                               const CodRacas: WideString; 
                                               const CodCategorias: WideString; 
                                               const CodLocais: WideString; 
                                               const CodLotes: WideString; 
                                               const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                               QtdCompRacialInicio1: Double; 
                                               QtdCompRacialFim1: Double; 
                                               const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                               QtdCompRacialInicio2: Double; 
                                               QtdCompRacialFim2: Double; 
                                               const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                               QtdCompRacialInicio3: Double; 
                                               QtdCompRacialFim3: Double; 
                                               const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                               QtdCompRacialInicio4: Double; 
                                               QtdCompRacialFim4: Double; NumPartosInicio: Integer; 
                                               NumPartosFim: Integer; 
                                               const CodTipoCoberturas: WideString; 
                                               NumCoberturasInicio: Integer; 
                                               NumCoberturasFim: Integer; 
                                               DtaCoberturaInicio: TDateTime; 
                                               DtaCoberturaFim: TDateTime; 
                                               DtaDiagnosticoInicio: TDateTime; 
                                               DtaDiagnosticoFim: TDateTime; 
                                               const IndVacaPrenha: WideString; 
                                               const CodInseminadores: WideString; 
                                               CodFazendaManejoTouro: Integer; 
                                               const CodAnimalManejoTouro: WideString; 
                                               DtaUltimoPartoInicio: TDateTime; 
                                               DtaUltimoPartoFim: TDateTime; Tipo: Integer): WideString; safecall;
    function InserirDescarte(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                             CodFazenda: Integer; CodMotivoDescarte: Integer): Integer; safecall;
    function InserirAnimaisVendidos(CodEvento: Integer): Integer; safecall;
    function AlterarRetornoFrigorifico(CodEvento: Integer; const NumCNPJCPFFrigorifico: WideString; 
                                       CodPessoaFrigorifico: Integer; const NumGta: WideString; 
                                       DtaEmissaoGta: TDateTime; const CodSerieGTA: WideString; 
                                       CodEstadoGTA: Integer; DtaValidadeGTA: TDateTime): Integer; safecall;
    function InserirRetornoFrigorifico(DtaSaidaOrigem: TDateTime; DtaChegadaDestino: TDateTime; 
                                       const TxtObservacao: WideString; 
                                       const NumCNPJCPFPessoa: WideString; CodPessoa: Integer; 
                                       DtaEmissaoGta: TDateTime; const NumGta: WideString; 
                                       CodFazenda: Integer; const CodSerieGTA: WideString; 
                                       CodEstadoGTA: Integer; DtaValidadeGTA: TDateTime): Integer; safecall;
    function AlterarTransferencia(CodEvento: Integer; const NumGta: WideString; 
                                  DtaEmissaoGta: TDateTime; const CodSerieGTA: WideString; 
                                  CodEstadoGTA: Integer; const IndMovNErasEras: WideString; 
                                  DtaValidadeGTA: TDateTime; DtaSaidaOrigem: TDateTime; 
                                  DtaChegadaDestino: TDateTime; const IndMigrarAnimal: WideString): Integer; safecall;
    function RelatorioFormularioSaidaAnimal(CodEvento: Integer): WideString; safecall;
    function RelatorioFormularioAnexoXI(CodFazenda: Integer; CodEvento: Integer; 
                                        const CodAnimais: WideString; VerificaSISBOV: Integer): WideString; safecall;
    function ExportarAnimaisAbcz(const CodAnimais: WideString; CodPaisSisBov: Integer; 
                                 CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                 CodSisBovInicio: Integer; CodSisBovFim: Integer; 
                                 DtaNascimentoInicio: TDateTime; DtaNascimentoFim: TDateTime; 
                                 const CodRaca: WideString; const CodCategoria: WideString; 
                                 CodTipoLugar: Integer; const CodLocal: WideString; 
                                 const CodLote: WideString; const CodManejoInicio: WideString; 
                                 const CodManejoFim: WideString; const IndSexo: WideString; 
                                 CodProdutor: Integer; CodTarefa: Integer): WideString; safecall;
    function RelatorioFormularioAnexoVI(CodProdutor: Integer; CodPropriedade: Integer): WideString; safecall;
    function PossuiCodigosSemelhantes(CodEvento: Integer): Integer; safecall;
    procedure LimpaListaMorteAnimais; safecall;
    procedure InsereMorteAnimal(CodTipoMorte: Integer; CodCausaMorte: Integer; 
                                const CodAnimalManejo: WideString; const DataMorteAnimal: WideString); safecall;
    function EfetivarEventosMorte: Integer; safecall;
    procedure teste; safecall;
    property Evento: IEvento read Get_Evento;
    property UltimoArquivoGerado: WideString read Get_UltimoArquivoGerado;
  end;

// *********************************************************************//
// DispIntf:  IEventosDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D5481A3D-9DBF-402D-8669-F5E1905CE191}
// *********************************************************************//
  IEventosDisp = dispinterface
    ['{D5481A3D-9DBF-402D-8669-F5E1905CE191}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 10;
    procedure FecharPesquisa; dispid 11;
    property Evento: IEvento readonly dispid 13;
    function Buscar(CodEvento: Integer; const IndRetornaDetalhe: WideString): Integer; dispid 14;
    function InserirMudRegAlimentar(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                    CodAptidao: Integer; CodRegimeAlimentarOrigem: Integer; 
                                    CodRegimeAlimentarDestino: Integer; CodFazenda: Integer): Integer; dispid 15;
    function InserirMudCategoria(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                 CodAptidao: Integer; CodCategoriaOrigem: Integer; 
                                 CodCategoriaDestino: Integer; CodFazenda: Integer): Integer; dispid 16;
    function InserirSelecaoReproducao(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                      CodFazenda: Integer): Integer; dispid 17;
    function InserirCastracao(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                              CodFazenda: Integer): Integer; dispid 18;
    function InserirDesmame(DtaEvento: TDateTime; CodAptidao: Integer; 
                            CodRegimeAlimentarDestino: Integer; const TxtObservacao: WideString; 
                            CodFazenda: Integer): Integer; dispid 19;
    function AlterarObservacao(CodEvento: Integer; const TxtObservacao: WideString): Integer; dispid 12;
    function InserirMudancaLote(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                CodFazenda: Integer; CodLoteDestino: Integer): Integer; dispid 20;
    function InserirDesaparecimento(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                    CodFazenda: Integer): Integer; dispid 21;
    function InserirMorte(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                          CodTipoMorte: Integer; CodCausaMorte: Integer; CodFazenda: Integer): Integer; dispid 22;
    function InserirMudancaLocal(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                 CodAptidao: Integer; CodFazenda: Integer; 
                                 CodLocalDestino: Integer; CodRegAlimentarMamando: Integer; 
                                 CodRegAlimentarDesmamado: Integer): Integer; dispid 23;
    function Pesquisar(CodEvento: Integer; CodTipoEvento: Integer; DtaInicio: TDateTime; 
                       DtaFim: TDateTime; const TxtDados: WideString; 
                       const CodSituacaoSisBov: WideString; CodFazenda: Integer; 
                       const IndAplicadoAnimais: WideString; const CodOrdenacao: WideString; 
                       const IndOrdenacaoCrescente: WideString; CodGrupoEvento: Integer): Integer; dispid 24;
    function InserirVendaCriador(DtaSaidaOrigem: TDateTime; DtaChegadaDestino: TDateTime; 
                                 const TxtObservacao: WideString; 
                                 const NumImovelReceitaFederal: WideString; 
                                 const CodLocalizacaoSisbov: WideString; 
                                 CodPropriedadeRural: Integer; CodPessoa: Integer; 
                                 CodPessoaSecundaria: Integer; const NumCNPJCPFCriador: WideString; 
                                 DtaEmissaoGta: TDateTime; const NumGta: WideString; 
                                 CodFazenda: Integer; const IndEventoCertTerceira: WideString; 
                                 const CodSerieGTA: WideString; CodEstadoGTA: Integer; 
                                 const IndMovNErasEras: WideString; DtaValidadeGTA: TDateTime): Integer; dispid 25;
    function InserirVendaFrigorifico(DtaSaidaOrigem: TDateTime; DtaChegadaDestino: TDateTime; 
                                     const TxtObservacao: WideString; 
                                     const NumCNPJCPFPessoa: WideString; CodPessoa: Integer; 
                                     DtaEmissaoGta: TDateTime; const NumGta: WideString; 
                                     CodFazenda: Integer; const CodSerieGTA: WideString; 
                                     CodEstadoGTA: Integer; DtaValidadeGTA: TDateTime): Integer; dispid 26;
    function InserirTransferencia(DtaSaidaOrigem: TDateTime; DtaChegadaDestino: TDateTime; 
                                  const TxtObservacao: WideString; CodAptidao: Integer; 
                                  CodTipoLugarOrigem: Integer; CodFazendaOrigem: Integer; 
                                  const NumImovelOrigem: WideString; 
                                  CodLocalizacaoSISBOVOrigem: Integer; 
                                  CodPropriedadeOrigem: Integer; 
                                  const NumCNPJCPFOrigem: WideString; CodPessoaOrigem: Integer; 
                                  CodPessoaSecundariaOrigem: Integer; CodTipoLugarDestino: Integer; 
                                  CodFazendaDestino: Integer; CodLocalDestino: Integer; 
                                  CodLoteDestino: Integer; const NumImovelDestino: WideString; 
                                  CodLocalizacaoSISBOVDestino: Integer; 
                                  CodPropriedadeDestino: Integer; 
                                  const NumCNPJCPFDestino: WideString; CodPessoaDestino: Integer; 
                                  CodPessoaSecundariaDestino: Integer; 
                                  CodRegAlimentarMamando: Integer; 
                                  CodRegAlimentarDesmamado: Integer; const NumGta: WideString; 
                                  DtaEmissaoGta: TDateTime; const CodSerieGTA: WideString; 
                                  CodEstadoGTA: Integer; DtaValidadeGTA: TDateTime; 
                                  const IndMovNErasEras: WideString; 
                                  const IndMigrarAnimal: WideString): Integer; dispid 27;
    function EfetivarCadastro(CodEvento: Integer): Integer; dispid 28;
    function CancelarEfetivacao(CodEvento: Integer): Integer; dispid 29;
    function MarcarNaoGravadoSisbov(CodEvento: Integer): Integer; dispid 30;
    function Excluir(CodEvento: Integer): Integer; dispid 31;
    function AlterarGTA(CodEvento: Integer; const NumGta: WideString; DtaEmissaoGta: TDateTime; 
                        const CodSerieGTA: WideString; CodEstadoGTA: Integer; 
                        DtaValidadeGTA: TDateTime): Integer; dispid 32;
    function InserirAbateAnimalVendido(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                       CodFazenda: Integer): Integer; dispid 33;
    function InserirSanitario(DtaInicio: TDateTime; DtaFim: TDateTime; 
                              const TxtObservacao: WideString; CodFazenda: Integer): Integer; dispid 34;
    function AdicionarSubEventoSanitario(CodEvento: Integer; CodEntradaInsumo: Integer): Integer; dispid 35;
    function RemoverSubEventoSanitario(CodEvento: Integer; CodEntradaInsumo: Integer): Integer; dispid 36;
    function PesquisarSubEventosSanitarios(CodEvento: Integer): Integer; dispid 37;
    function InserirEmissaoCertificado(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                                       CodFazenda: Integer): Integer; dispid 38;
    function PossuiMensagemOcorrenciaAplicacao(CodEvento: Integer): Integer; dispid 39;
    property UltimoArquivoGerado: WideString readonly dispid 40;
    function GerarRelatorioConsolidado(const SglProdutor: WideString; 
                                       const NomPessoaProdutor: WideString; 
                                       const CodSituacaoSisBov: WideString; 
                                       CodGrupoEvento: Integer; const CodTipoEvento: WideString; 
                                       CodTipoSubEventoSanitario: Integer; DtaInicio: TDateTime; 
                                       DtaFim: TDateTime; const TxtDados: WideString; 
                                       Tipo: Integer; QtdQuebraRelatorio: Integer; 
                                       DtaInicioCadastro: TDateTime; DtaFimCadastro: TDateTime; 
                                       DtaInicioEfetivacao: TDateTime; DtaFimEfetivacao: TDateTime): WideString; dispid 41;
    function GerarRelatorioAnimaisAplicados(const CodSituacaoSisbovEvento: WideString; 
                                            CodGrupoEvento: Integer; CodTipoEvento: Integer; 
                                            CodTipoSubEventoSanitario: Integer; CodEvento: Integer; 
                                            DtaInicioEvento: TDateTime; DtaFimEvento: TDateTime; 
                                            CodFazendaManejo: Integer; 
                                            const CodAnimalManejoInicio: WideString; 
                                            const CodAnimalManejoFim: WideString; 
                                            CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                                            CodMicroRegiaoSISBOV: Integer; 
                                            CodAnimalSISBOVInicio: Integer; 
                                            CodAnimalSISBOVFim: Integer; 
                                            DtaNascimentoInicio: TDateTime; 
                                            DtaNascimentoFim: TDateTime; 
                                            DtaIdentificacaoInicio: TDateTime; 
                                            DtaIdentificacaoFim: TDateTime; 
                                            const CodRaca: WideString; 
                                            const CodCategoria: WideString; 
                                            const IndSexo: WideString; CodTipoLugar: Integer; 
                                            const CodLocal: WideString; const CodLote: WideString; 
                                            const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                            QtdCompRacialInicio1: Double; 
                                            QtdCompRacialFim1: Double; 
                                            const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                            QtdCompRacialInicio2: Double; 
                                            QtdCompRacialFim2: Double; 
                                            const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                            QtdCompRacialInicio3: Double; 
                                            QtdCompRacialFim3: Double; 
                                            const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                            QtdCompRacialInicio4: Double; 
                                            QtdCompRacialFim4: Double; Tipo: Integer; 
                                            const IndMostrarCriteriosPesquisa: WideString; 
                                            const IndAnimaisNaoAssociados: WideString; 
                                            const SemTecnico: WideString; CodPessoaTecnico: Integer): WideString; dispid 42;
    function InserirPesagem(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                            CodFazenda: Integer): Integer; dispid 43;
    function EmitirCertificado(CodEvento: Integer; CodModeloCertificado: Integer): Integer; dispid 44;
    function InserirEstacaoMonta(DtaInicio: TDateTime; DtaFim: TDateTime; 
                                 const TxtObservacao: WideString; CodFazenda: Integer; 
                                 const SglEstacaoMonta: WideString; 
                                 const DesEstacaoMonta: WideString): Integer; dispid 45;
    function AlterarVendaCriador(CodEvento: Integer; const NumImovelReceitaFederal: WideString; 
                                 const CodLocalizacaoSisbov: WideString; 
                                 CodPropriedadeRural: Integer; 
                                 const NumCNPJCPFPessoaSecundaria: WideString; CodPessoa: Integer; 
                                 CodPessoaSecundaria: Integer; const NumGta: WideString; 
                                 DtaEmissaoGta: TDateTime; 
                                 const IndVendaCertifTerceira: WideString; 
                                 const CodSerieGTA: WideString; CodEstadoGTA: Integer; 
                                 const IndMovNErasEras: WideString; DtaValidadeGTA: TDateTime; 
                                 DtaSaidaOrigem: TDateTime; DtaChegadaDestino: TDateTime): Integer; dispid 46;
    function AlterarVendaFrigorifico(CodEvento: Integer; const NumCNPJCPFFrigorifico: WideString; 
                                     CodPessoaFrigorifico: Integer; const NumGta: WideString; 
                                     DtaEmissaoGta: TDateTime; const CodSerieGTA: WideString; 
                                     CodEstadoGTA: Integer; DtaValidadeGTA: TDateTime; 
                                     DtaSaidaOrigem: TDateTime; DtaChegadaDestino: TDateTime): Integer; dispid 47;
    function InserirCoberturaRegimePasto(DtaInicio: TDateTime; DtaFim: TDateTime; 
                                         CodFazenda: Integer; const TxtObservacao: WideString; 
                                         CodFazendaManejo: Integer; 
                                         const CodAnimalManejo: WideString; 
                                         CodAnimalTouro: Integer; CodReprodutorMultiplo: Integer; 
                                         CodEventoEstacaoMonta: Integer): Integer; dispid 48;
    function AlterarCoberturaRegimePasto(CodEvento: Integer; DtaFim: TDateTime; 
                                         CodFazendaManejo: Integer; 
                                         const CodAnimalManejo: WideString; 
                                         CodAnimalTouro: Integer; CodReprodutorMultiplo: Integer): Integer; dispid 49;
    function InserirDiagnosticoPrenhez(DtaEvento: TDateTime; CodFazenda: Integer; 
                                       const TxtObservacao: WideString; 
                                       CodEventoEstacaoMonta: Integer): Integer; dispid 50;
    function InserirExameAndrologico(DtaEvento: TDateTime; CodFazenda: Integer; 
                                     const TxtObservacao: WideString): Integer; dispid 51;
    function InserirCoberturaMontaControlada(DtaEvento: TDateTime; CodFazenda: Integer; 
                                             const TxtObservacao: WideString; 
                                             CodAnimalTouro: Integer; 
                                             CodFazendaManejoTouro: Integer; 
                                             const CodAnimalManejoTouro: WideString; 
                                             CodAnimalFemea: Integer; 
                                             CodFazendaManejoFemea: Integer; 
                                             const CodAnimalManejoFemea: WideString; 
                                             CodEventoEstacaoMonta: Integer): Integer; dispid 52;
    function InserirCoberturaInseminacaoArtificial(DtaEvento: TDateTime; HraEvento: TDateTime; 
                                                   CodFazenda: Integer; 
                                                   const TxtObservacao: WideString; 
                                                   CodAnimalTouro: Integer; 
                                                   const NumPartida: WideString; 
                                                   CodAnimalFemea: Integer; 
                                                   CodFazendaManejoFemea: Integer; 
                                                   const CodAnimalManejoFemea: WideString; 
                                                   QtdDoses: Integer; 
                                                   CodPessoaSecundariaInseminador: Integer; 
                                                   CodEventoEstacaoMonta: Integer): Integer; dispid 53;
    function InserirAvaliacao(DtaEvento: TDateTime; CodFazenda: Integer; 
                              const TxtObservacao: WideString; CodTipoAvaliacao: Integer; 
                              CodPessoaSecAvaliador: Integer): Integer; dispid 54;
    function AlterarAvaliacao(CodEvento: Integer; DtaEvento: TDateTime; 
                              CodPessoaSecAvaliador: Integer): Integer; dispid 55;
    function GerarRelatorioAvaliacao(CodEvento: Integer; DtaInicioEvento: TDateTime; 
                                     DtaFimEvento: TDateTime; CodTipoAvaliacao: Integer; 
                                     const CodCaracteristicas: WideString; 
                                     CodFazendaManejo: Integer; 
                                     const CodAnimalManejoInicio: WideString; 
                                     const CodAnimalManejoFim: WideString; 
                                     CodFazendaManejoPai: Integer; 
                                     const CodAnimalManejoPai: WideString; 
                                     const NomAnimalPai: WideString; 
                                     const DesApelidoPai: WideString; CodFazendaManejoMae: Integer; 
                                     const CodAnimalManejoMae: WideString; 
                                     DtaNascimentoInicio: TDateTime; DtaNascimentoFim: TDateTime; 
                                     const IndSexo: WideString; const CodRacas: WideString; 
                                     const CodCategorias: WideString; const CodLocais: WideString; 
                                     const CodLotes: WideString; const IndAgrupRaca1: WideString; 
                                     CodRaca1: Integer; QtdCompRacialInicio1: Double; 
                                     QtdCompRacialFim1: Double; const IndAgrupRaca2: WideString; 
                                     CodRaca2: Integer; QtdCompRacialInicio2: Double; 
                                     QtdCompRacialFim2: Double; const IndAgrupRaca3: WideString; 
                                     CodRaca3: Integer; QtdCompRacialInicio3: Double; 
                                     QtdCompRacialFim3: Double; const IndAgrupRaca4: WideString; 
                                     CodRaca4: Integer; QtdCompRacialInicio4: Double; 
                                     QtdCompRacialFim4: Double; Tipo: Integer; 
                                     QtdQuebraRelatorio: Integer): WideString; dispid 56;
    function InserirParto(DtaEvento: TDateTime; CodFazenda: Integer; 
                          const TxtObservacao: WideString; CodGrauDificuldade: Integer; 
                          CodSituacaoCria: Integer; CodEstacaoMonta: Integer; 
                          const CodAnimalManejoCria: WideString; const IndSexoCria: WideString; 
                          CodPelagemCria: Integer; QtdPesagemCria: Double; 
                          const CodAnimalManejoGemeo: WideString; const IndSexoGemeo: WideString; 
                          CodPelagemGemeo: Integer; QtdPesagemGemeo: Double; 
                          CodAnimalFemea: Integer; CodFazendaManejoFemea: Integer; 
                          const CodAnimalManejoFemea: WideString; 
                          const IndCodSisBovReservado: WideString): WideString; dispid 57;
    function AlterarParto(CodEvento: Integer; DtaEvento: TDateTime; CodGrauDificuldade: Integer; 
                          CodCobertura: Integer): Integer; dispid 58;
    function PesquisarEstacoesMonta(NumMaxEventos: Integer; CodFazenda: Integer): Integer; dispid 59;
    function GerarRelatorioPrevisaoParto(CodEventoEstacaoMonta: Integer; 
                                         const CodTipoEventosCobertura: WideString; 
                                         DtaPrevistaPartoInicio: TDateTime; 
                                         DtaPrevistaPartoFim: TDateTime; 
                                         const CodRacas: WideString; 
                                         const CodCategorias: WideString; 
                                         const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                         QtdCompRacialInicio1: Double; QtdCompRacialFim1: Double; 
                                         const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                         QtdCompRacialInicio2: Double; QtdCompRacialFim2: Double; 
                                         const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                         QtdCompRacialInicio3: Double; QtdCompRacialFim3: Double; 
                                         const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                         QtdCompRacialInicio4: Double; QtdCompRacialFim4: Double; 
                                         NumOrdemInicio: Integer; NumOrdemFim: Integer; 
                                         const CodLotes: WideString; const CodLocais: WideString; 
                                         CodFazendaManejo: Integer; 
                                         const CodAnimalManejoInicio: WideString; 
                                         const CodAnimalManejoFim: WideString; 
                                         CodFazendaManejoPai: Integer; 
                                         const CodAnimalManejoPai: WideString; 
                                         const IndDiagnosticoPrenhez: WideString; Tipo: Integer): WideString; dispid 60;
    function PesquisarMontasParto(CodEventoParto: Integer): Integer; dispid 62;
    function GerarRelatorioFemeasADiagnosticar(CodEventoEstacaoMonta: Integer; 
                                               const CodTipoEventosCobertura: WideString; 
                                               DtaDiagnosticoPrevisto: TDateTime; 
                                               const CodRacas: WideString; 
                                               const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                               QtdCompRacialInicio1: Double; 
                                               QtdCompRacialFim1: Double; 
                                               const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                               QtdCompRacialInicio2: Double; 
                                               QtdCompRacialFim2: Double; 
                                               const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                               QtdCompRacialInicio3: Double; 
                                               QtdCompRacialFim3: Double; 
                                               const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                               QtdCompRacialInicio4: Double; 
                                               QtdCompRacialFim4: Double; NumOrdemInicio: Integer; 
                                               NumOrdemFim: Integer; const CodLotes: WideString; 
                                               const CodLocais: WideString; 
                                               const CodCategorias: WideString; 
                                               CodFazendaManejo: Integer; 
                                               const CodAnimalManejoInicio: WideString; 
                                               const CodAnimalManejoFim: WideString; 
                                               CodFazendaManejoPai: Integer; 
                                               const CodAnimalManejoPai: WideString; Tipo: Integer): WideString; dispid 63;
    function GerarRelatorioDesempenhoVacas(CodFazendaManejo: Integer; 
                                           const CodAnimalManejoInicio: WideString; 
                                           const CodAnimalManejoFim: WideString; 
                                           CodFazendaManejoPai: Integer; 
                                           const CodAnimalManejoPai: WideString; 
                                           CodFazendaManejoMae: Integer; 
                                           const CodAnimalManejoMae: WideString; 
                                           const CodRacas: WideString; 
                                           const CodCategorias: WideString; 
                                           const CodLocais: WideString; const CodLotes: WideString; 
                                           const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                           QtdCompRacialInicio1: Double; QtdCompRacialFim1: Double; 
                                           const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                           QtdCompRacialInicio2: Double; QtdCompRacialFim2: Double; 
                                           const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                           QtdCompRacialInicio3: Double; QtdCompRacialFim3: Double; 
                                           const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                           QtdCompRacialInicio4: Double; QtdCompRacialFim4: Double; 
                                           NumPartoInicio: Integer; NumPartoFim: Integer; 
                                           NumDiasIntervaloInicio: Integer; 
                                           NumDiasIntervalorFim: Integer; 
                                           QtdPesoDesmameInicio: Integer; 
                                           QtdPesoDesmameFim: Integer; Tipo: Integer): WideString; dispid 64;
    function GerarRelatorioResumoEstacaoMonta(CodEventoEstacaoMonta: Integer): WideString; dispid 65;
    function GerarRelatorioAvaliacaoInseminacao(CodEventoEstacaoMonta: Integer; 
                                                CodFazendaManejoTouro: Integer; 
                                                const CodAnimalManejoTouroInicio: WideString; 
                                                const CodAnimalManejoTouroFim: WideString; 
                                                const NomAnimalTouro: WideString; 
                                                const DesApelidoTouro: WideString; 
                                                const NumPartida: WideString; 
                                                const CodRacas: WideString; 
                                                const CodCategorias: WideString; 
                                                const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                                QtdCompRacialInicio1: Double; 
                                                QtdCompRacialFim1: Double; 
                                                const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                                QtdCompRacialInicio2: Double; 
                                                QtdCompRacialFim2: Double; 
                                                const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                                QtdCompRacialInicio3: Double; 
                                                QtdCompRacialFim3: Double; 
                                                const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                                QtdCompRacialInicio4: Double; 
                                                QtdCompRacialFim4: Double; 
                                                NumOrdemPartoInicio: Integer; 
                                                NumOrdemPartoFim: Integer; 
                                                const CodInseminadores: WideString; Tipo: Integer; 
                                                QtdQuebraRelatorio: Integer): WideString; dispid 66;
    function GerarRelatorioConsultaReprodutiva(CodFazendaManejo: Integer; 
                                               const CodAnimalManejoInicio: WideString; 
                                               const CodAnimalManejoFim: WideString; 
                                               CodFazenda: Integer; const CodEstacoes: WideString; 
                                               const CodRacas: WideString; 
                                               const CodCategorias: WideString; 
                                               const CodLocais: WideString; 
                                               const CodLotes: WideString; 
                                               const IndAgrupRaca1: WideString; CodRaca1: Integer; 
                                               QtdCompRacialInicio1: Double; 
                                               QtdCompRacialFim1: Double; 
                                               const IndAgrupRaca2: WideString; CodRaca2: Integer; 
                                               QtdCompRacialInicio2: Double; 
                                               QtdCompRacialFim2: Double; 
                                               const IndAgrupRaca3: WideString; CodRaca3: Integer; 
                                               QtdCompRacialInicio3: Double; 
                                               QtdCompRacialFim3: Double; 
                                               const IndAgrupRaca4: WideString; CodRaca4: Integer; 
                                               QtdCompRacialInicio4: Double; 
                                               QtdCompRacialFim4: Double; NumPartosInicio: Integer; 
                                               NumPartosFim: Integer; 
                                               const CodTipoCoberturas: WideString; 
                                               NumCoberturasInicio: Integer; 
                                               NumCoberturasFim: Integer; 
                                               DtaCoberturaInicio: TDateTime; 
                                               DtaCoberturaFim: TDateTime; 
                                               DtaDiagnosticoInicio: TDateTime; 
                                               DtaDiagnosticoFim: TDateTime; 
                                               const IndVacaPrenha: WideString; 
                                               const CodInseminadores: WideString; 
                                               CodFazendaManejoTouro: Integer; 
                                               const CodAnimalManejoTouro: WideString; 
                                               DtaUltimoPartoInicio: TDateTime; 
                                               DtaUltimoPartoFim: TDateTime; Tipo: Integer): WideString; dispid 67;
    function InserirDescarte(DtaEvento: TDateTime; const TxtObservacao: WideString; 
                             CodFazenda: Integer; CodMotivoDescarte: Integer): Integer; dispid 68;
    function InserirAnimaisVendidos(CodEvento: Integer): Integer; dispid 201;
    function AlterarRetornoFrigorifico(CodEvento: Integer; const NumCNPJCPFFrigorifico: WideString; 
                                       CodPessoaFrigorifico: Integer; const NumGta: WideString; 
                                       DtaEmissaoGta: TDateTime; const CodSerieGTA: WideString; 
                                       CodEstadoGTA: Integer; DtaValidadeGTA: TDateTime): Integer; dispid 203;
    function InserirRetornoFrigorifico(DtaSaidaOrigem: TDateTime; DtaChegadaDestino: TDateTime; 
                                       const TxtObservacao: WideString; 
                                       const NumCNPJCPFPessoa: WideString; CodPessoa: Integer; 
                                       DtaEmissaoGta: TDateTime; const NumGta: WideString; 
                                       CodFazenda: Integer; const CodSerieGTA: WideString; 
                                       CodEstadoGTA: Integer; DtaValidadeGTA: TDateTime): Integer; dispid 202;
    function AlterarTransferencia(CodEvento: Integer; const NumGta: WideString; 
                                  DtaEmissaoGta: TDateTime; const CodSerieGTA: WideString; 
                                  CodEstadoGTA: Integer; const IndMovNErasEras: WideString; 
                                  DtaValidadeGTA: TDateTime; DtaSaidaOrigem: TDateTime; 
                                  DtaChegadaDestino: TDateTime; const IndMigrarAnimal: WideString): Integer; dispid 204;
    function RelatorioFormularioSaidaAnimal(CodEvento: Integer): WideString; dispid 205;
    function RelatorioFormularioAnexoXI(CodFazenda: Integer; CodEvento: Integer; 
                                        const CodAnimais: WideString; VerificaSISBOV: Integer): WideString; dispid 206;
    function ExportarAnimaisAbcz(const CodAnimais: WideString; CodPaisSisBov: Integer; 
                                 CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                 CodSisBovInicio: Integer; CodSisBovFim: Integer; 
                                 DtaNascimentoInicio: TDateTime; DtaNascimentoFim: TDateTime; 
                                 const CodRaca: WideString; const CodCategoria: WideString; 
                                 CodTipoLugar: Integer; const CodLocal: WideString; 
                                 const CodLote: WideString; const CodManejoInicio: WideString; 
                                 const CodManejoFim: WideString; const IndSexo: WideString; 
                                 CodProdutor: Integer; CodTarefa: Integer): WideString; dispid 207;
    function RelatorioFormularioAnexoVI(CodProdutor: Integer; CodPropriedade: Integer): WideString; dispid 208;
    function PossuiCodigosSemelhantes(CodEvento: Integer): Integer; dispid 209;
    procedure LimpaListaMorteAnimais; dispid 210;
    procedure InsereMorteAnimal(CodTipoMorte: Integer; CodCausaMorte: Integer; 
                                const CodAnimalManejo: WideString; const DataMorteAnimal: WideString); dispid 211;
    function EfetivarEventosMorte: Integer; dispid 212;
    procedure teste; dispid 213;
  end;

// *********************************************************************//
// Interface: IMudancasCategoriaAnimal
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8100E9CF-1964-4931-A830-F2BC7C5235D5}
// *********************************************************************//
  IMudancasCategoriaAnimal = interface(IDispatch)
    ['{8100E9CF-1964-4931-A830-F2BC7C5235D5}']
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(CodTipoEvento: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    function PesquisarOrigens(CodTipoEvento: Integer; CodAptidao: Integer): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IMudancasCategoriaAnimalDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8100E9CF-1964-4931-A830-F2BC7C5235D5}
// *********************************************************************//
  IMudancasCategoriaAnimalDisp = dispinterface
    ['{8100E9CF-1964-4931-A830-F2BC7C5235D5}']
    function EOF: WordBool; dispid 1;
    procedure IrAoProximo; dispid 2;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 3;
    procedure FecharPesquisa; dispid 4;
    function Pesquisar(CodTipoEvento: Integer): Integer; dispid 5;
    function NumeroRegistros: Integer; dispid 6;
    procedure IrAoPrimeiro; dispid 7;
    function PesquisarOrigens(CodTipoEvento: Integer; CodAptidao: Integer): Integer; dispid 8;
  end;

// *********************************************************************//
// Interface: IInsumo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60E563A1-75A5-4C9E-8ED3-9E259992D876}
// *********************************************************************//
  IInsumo = interface(IDispatch)
    ['{60E563A1-75A5-4C9E-8ED3-9E259992D876}']
    function Get_CodInsumo: Integer; safecall;
    procedure Set_CodInsumo(Value: Integer); safecall;
    function Get_DesInsumo: WideString; safecall;
    procedure Set_DesInsumo(const Value: WideString); safecall;
    function Get_CodTipoInsumo: Integer; safecall;
    procedure Set_CodTipoInsumo(Value: Integer); safecall;
    function Get_SglTipoInsumo: WideString; safecall;
    procedure Set_SglTipoInsumo(const Value: WideString); safecall;
    function Get_DesTipoInsumo: WideString; safecall;
    procedure Set_DesTipoInsumo(const Value: WideString); safecall;
    function Get_CodSubTipoInsumo: Integer; safecall;
    procedure Set_CodSubTipoInsumo(Value: Integer); safecall;
    function Get_SglSubTipoInsumo: WideString; safecall;
    procedure Set_SglSubTipoInsumo(const Value: WideString); safecall;
    function Get_DesSubTipoInsumo: WideString; safecall;
    procedure Set_DesSubTipoInsumo(const Value: WideString); safecall;
    function Get_CodFabricanteInsumo: Integer; safecall;
    procedure Set_CodFabricanteInsumo(Value: Integer); safecall;
    function Get_NomFabricanteInsumo: WideString; safecall;
    procedure Set_NomFabricanteInsumo(const Value: WideString); safecall;
    function Get_NomReduzidoFabricanteInsumo: WideString; safecall;
    procedure Set_NomReduzidoFabricanteInsumo(const Value: WideString); safecall;
    function Get_TxtObservacao: WideString; safecall;
    procedure Set_TxtObservacao(const Value: WideString); safecall;
    property CodInsumo: Integer read Get_CodInsumo write Set_CodInsumo;
    property DesInsumo: WideString read Get_DesInsumo write Set_DesInsumo;
    property CodTipoInsumo: Integer read Get_CodTipoInsumo write Set_CodTipoInsumo;
    property SglTipoInsumo: WideString read Get_SglTipoInsumo write Set_SglTipoInsumo;
    property DesTipoInsumo: WideString read Get_DesTipoInsumo write Set_DesTipoInsumo;
    property CodSubTipoInsumo: Integer read Get_CodSubTipoInsumo write Set_CodSubTipoInsumo;
    property SglSubTipoInsumo: WideString read Get_SglSubTipoInsumo write Set_SglSubTipoInsumo;
    property DesSubTipoInsumo: WideString read Get_DesSubTipoInsumo write Set_DesSubTipoInsumo;
    property CodFabricanteInsumo: Integer read Get_CodFabricanteInsumo write Set_CodFabricanteInsumo;
    property NomFabricanteInsumo: WideString read Get_NomFabricanteInsumo write Set_NomFabricanteInsumo;
    property NomReduzidoFabricanteInsumo: WideString read Get_NomReduzidoFabricanteInsumo write Set_NomReduzidoFabricanteInsumo;
    property TxtObservacao: WideString read Get_TxtObservacao write Set_TxtObservacao;
  end;

// *********************************************************************//
// DispIntf:  IInsumoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {60E563A1-75A5-4C9E-8ED3-9E259992D876}
// *********************************************************************//
  IInsumoDisp = dispinterface
    ['{60E563A1-75A5-4C9E-8ED3-9E259992D876}']
    property CodInsumo: Integer dispid 1;
    property DesInsumo: WideString dispid 2;
    property CodTipoInsumo: Integer dispid 4;
    property SglTipoInsumo: WideString dispid 5;
    property DesTipoInsumo: WideString dispid 6;
    property CodSubTipoInsumo: Integer dispid 7;
    property SglSubTipoInsumo: WideString dispid 8;
    property DesSubTipoInsumo: WideString dispid 9;
    property CodFabricanteInsumo: Integer dispid 10;
    property NomFabricanteInsumo: WideString dispid 11;
    property NomReduzidoFabricanteInsumo: WideString dispid 12;
    property TxtObservacao: WideString dispid 13;
  end;

// *********************************************************************//
// Interface: IInsumos
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4F060B1-5F22-4D97-AAE3-8B4BD10F4D8F}
// *********************************************************************//
  IInsumos = interface(IDispatch)
    ['{A4F060B1-5F22-4D97-AAE3-8B4BD10F4D8F}']
    function EOF: WordBool; safecall;
    function BOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    function ValorCampo(const NomColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function Buscar(CodInsumo: Integer): Integer; safecall;
    function Inserir(const DesInsumo: WideString; CodTipoInsumo: Integer; 
                     CodSubTipoInsumo: Integer; CodFabricanteInsumo: Integer; 
                     const TxtObservacao: WideString): Integer; safecall;
    function Alterar(CodInsumo: Integer; const DesInsumo: WideString; const TxtInsumo: WideString): Integer; safecall;
    function Excluir(CodInsumo: Integer): Integer; safecall;
    function Pesquisar(const DesInsumo: WideString; CodTipoInsumo: Integer; 
                       CodSubTipoInsumo: Integer; CodFabricante: Integer; 
                       const CodOrdenacao: WideString): Integer; safecall;
    function Get_Insumo: IInsumo; safecall;
    property Insumo: IInsumo read Get_Insumo;
  end;

// *********************************************************************//
// DispIntf:  IInsumosDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A4F060B1-5F22-4D97-AAE3-8B4BD10F4D8F}
// *********************************************************************//
  IInsumosDisp = dispinterface
    ['{A4F060B1-5F22-4D97-AAE3-8B4BD10F4D8F}']
    function EOF: WordBool; dispid 1;
    function BOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoUltimo; dispid 4;
    procedure IrAoProximo; dispid 5;
    procedure IrAoAnterior; dispid 6;
    function ValorCampo(const NomColuna: WideString): OleVariant; dispid 7;
    procedure FecharPesquisa; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    procedure Posicionar(NumPosicao: Integer); dispid 10;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 11;
    function Buscar(CodInsumo: Integer): Integer; dispid 13;
    function Inserir(const DesInsumo: WideString; CodTipoInsumo: Integer; 
                     CodSubTipoInsumo: Integer; CodFabricanteInsumo: Integer; 
                     const TxtObservacao: WideString): Integer; dispid 14;
    function Alterar(CodInsumo: Integer; const DesInsumo: WideString; const TxtInsumo: WideString): Integer; dispid 15;
    function Excluir(CodInsumo: Integer): Integer; dispid 16;
    function Pesquisar(const DesInsumo: WideString; CodTipoInsumo: Integer; 
                       CodSubTipoInsumo: Integer; CodFabricante: Integer; 
                       const CodOrdenacao: WideString): Integer; dispid 17;
    property Insumo: IInsumo readonly dispid 12;
  end;

// *********************************************************************//
// Interface: IEntradaInsumo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9FEBB4D9-B380-4532-B738-3E64F548C717}
// *********************************************************************//
  IEntradaInsumo = interface(IDispatch)
    ['{9FEBB4D9-B380-4532-B738-3E64F548C717}']
    function Get_CodPessoaProdutor: Integer; safecall;
    procedure Set_CodPessoaProdutor(Value: Integer); safecall;
    function Get_CodEntradaInsumo: Integer; safecall;
    procedure Set_CodEntradaInsumo(Value: Integer); safecall;
    function Get_CodFazenda: Integer; safecall;
    procedure Set_CodFazenda(Value: Integer); safecall;
    function Get_SglFazenda: WideString; safecall;
    procedure Set_SglFazenda(const Value: WideString); safecall;
    function Get_NomFazenda: WideString; safecall;
    procedure Set_NomFazenda(const Value: WideString); safecall;
    function Get_CodTipoInsumo: Integer; safecall;
    procedure Set_CodTipoInsumo(Value: Integer); safecall;
    function Get_SglTipoInsumo: WideString; safecall;
    procedure Set_SglTipoInsumo(const Value: WideString); safecall;
    function Get_DesTipoInsumo: WideString; safecall;
    procedure Set_DesTipoInsumo(const Value: WideString); safecall;
    function Get_IndAdmitePartidaLote: WideString; safecall;
    procedure Set_IndAdmitePartidaLote(const Value: WideString); safecall;
    function Get_CodSubTipoInsumo: Integer; safecall;
    procedure Set_CodSubTipoInsumo(Value: Integer); safecall;
    function Get_SglSubTipoInsumo: WideString; safecall;
    procedure Set_SglSubTipoInsumo(const Value: WideString); safecall;
    function Get_DesSubTipoInsumo: WideString; safecall;
    procedure Set_DesSubTipoInsumo(const Value: WideString); safecall;
    function Get_CodInsumo: Integer; safecall;
    procedure Set_CodInsumo(Value: Integer); safecall;
    function Get_DesInsumo: WideString; safecall;
    procedure Set_DesInsumo(const Value: WideString); safecall;
    function Get_CodFabricanteInsumo: Integer; safecall;
    procedure Set_CodFabricanteInsumo(Value: Integer); safecall;
    function Get_NomFabricanteInsumo: WideString; safecall;
    procedure Set_NomFabricanteInsumo(const Value: WideString); safecall;
    function Get_NumRegistroFabricante: Integer; safecall;
    procedure Set_NumRegistroFabricante(Value: Integer); safecall;
    function Get_CodPessoaSecundaria: Integer; safecall;
    procedure Set_CodPessoaSecundaria(Value: Integer); safecall;
    function Get_NomRevendedor: WideString; safecall;
    procedure Set_NomRevendedor(const Value: WideString); safecall;
    function Get_NumCNPJCPFRevendedorFormatado: WideString; safecall;
    procedure Set_NumCNPJCPFRevendedorFormatado(const Value: WideString); safecall;
    function Get_DtaCompra: TDateTime; safecall;
    procedure Set_DtaCompra(Value: TDateTime); safecall;
    function Get_NumNotaFiscal: Integer; safecall;
    procedure Set_NumNotaFiscal(Value: Integer); safecall;
    function Get_NumPartidaLote: WideString; safecall;
    procedure Set_NumPartidaLote(const Value: WideString); safecall;
    function Get_DtaValidade: TDateTime; safecall;
    procedure Set_DtaValidade(Value: TDateTime); safecall;
    function Get_QtdInsumo: Double; safecall;
    procedure Set_QtdInsumo(Value: Double); safecall;
    function Get_CodUnidadeMedida: Integer; safecall;
    procedure Set_CodUnidadeMedida(Value: Integer); safecall;
    function Get_SglUnidadeMedida: WideString; safecall;
    procedure Set_SglUnidadeMedida(const Value: WideString); safecall;
    function Get_NumCNPJCPFRevendedor: WideString; safecall;
    procedure Set_NumCNPJCPFRevendedor(const Value: WideString); safecall;
    function Get_TxtObservacao: WideString; safecall;
    procedure Set_TxtObservacao(const Value: WideString); safecall;
    function Get_Custo: Double; safecall;
    procedure Set_Custo(Value: Double); safecall;
    property CodPessoaProdutor: Integer read Get_CodPessoaProdutor write Set_CodPessoaProdutor;
    property CodEntradaInsumo: Integer read Get_CodEntradaInsumo write Set_CodEntradaInsumo;
    property CodFazenda: Integer read Get_CodFazenda write Set_CodFazenda;
    property SglFazenda: WideString read Get_SglFazenda write Set_SglFazenda;
    property NomFazenda: WideString read Get_NomFazenda write Set_NomFazenda;
    property CodTipoInsumo: Integer read Get_CodTipoInsumo write Set_CodTipoInsumo;
    property SglTipoInsumo: WideString read Get_SglTipoInsumo write Set_SglTipoInsumo;
    property DesTipoInsumo: WideString read Get_DesTipoInsumo write Set_DesTipoInsumo;
    property IndAdmitePartidaLote: WideString read Get_IndAdmitePartidaLote write Set_IndAdmitePartidaLote;
    property CodSubTipoInsumo: Integer read Get_CodSubTipoInsumo write Set_CodSubTipoInsumo;
    property SglSubTipoInsumo: WideString read Get_SglSubTipoInsumo write Set_SglSubTipoInsumo;
    property DesSubTipoInsumo: WideString read Get_DesSubTipoInsumo write Set_DesSubTipoInsumo;
    property CodInsumo: Integer read Get_CodInsumo write Set_CodInsumo;
    property DesInsumo: WideString read Get_DesInsumo write Set_DesInsumo;
    property CodFabricanteInsumo: Integer read Get_CodFabricanteInsumo write Set_CodFabricanteInsumo;
    property NomFabricanteInsumo: WideString read Get_NomFabricanteInsumo write Set_NomFabricanteInsumo;
    property NumRegistroFabricante: Integer read Get_NumRegistroFabricante write Set_NumRegistroFabricante;
    property CodPessoaSecundaria: Integer read Get_CodPessoaSecundaria write Set_CodPessoaSecundaria;
    property NomRevendedor: WideString read Get_NomRevendedor write Set_NomRevendedor;
    property NumCNPJCPFRevendedorFormatado: WideString read Get_NumCNPJCPFRevendedorFormatado write Set_NumCNPJCPFRevendedorFormatado;
    property DtaCompra: TDateTime read Get_DtaCompra write Set_DtaCompra;
    property NumNotaFiscal: Integer read Get_NumNotaFiscal write Set_NumNotaFiscal;
    property NumPartidaLote: WideString read Get_NumPartidaLote write Set_NumPartidaLote;
    property DtaValidade: TDateTime read Get_DtaValidade write Set_DtaValidade;
    property QtdInsumo: Double read Get_QtdInsumo write Set_QtdInsumo;
    property CodUnidadeMedida: Integer read Get_CodUnidadeMedida write Set_CodUnidadeMedida;
    property SglUnidadeMedida: WideString read Get_SglUnidadeMedida write Set_SglUnidadeMedida;
    property NumCNPJCPFRevendedor: WideString read Get_NumCNPJCPFRevendedor write Set_NumCNPJCPFRevendedor;
    property TxtObservacao: WideString read Get_TxtObservacao write Set_TxtObservacao;
    property Custo: Double read Get_Custo write Set_Custo;
  end;

// *********************************************************************//
// DispIntf:  IEntradaInsumoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9FEBB4D9-B380-4532-B738-3E64F548C717}
// *********************************************************************//
  IEntradaInsumoDisp = dispinterface
    ['{9FEBB4D9-B380-4532-B738-3E64F548C717}']
    property CodPessoaProdutor: Integer dispid 1;
    property CodEntradaInsumo: Integer dispid 2;
    property CodFazenda: Integer dispid 3;
    property SglFazenda: WideString dispid 4;
    property NomFazenda: WideString dispid 5;
    property CodTipoInsumo: Integer dispid 6;
    property SglTipoInsumo: WideString dispid 7;
    property DesTipoInsumo: WideString dispid 8;
    property IndAdmitePartidaLote: WideString dispid 9;
    property CodSubTipoInsumo: Integer dispid 10;
    property SglSubTipoInsumo: WideString dispid 11;
    property DesSubTipoInsumo: WideString dispid 12;
    property CodInsumo: Integer dispid 13;
    property DesInsumo: WideString dispid 14;
    property CodFabricanteInsumo: Integer dispid 15;
    property NomFabricanteInsumo: WideString dispid 16;
    property NumRegistroFabricante: Integer dispid 17;
    property CodPessoaSecundaria: Integer dispid 18;
    property NomRevendedor: WideString dispid 19;
    property NumCNPJCPFRevendedorFormatado: WideString dispid 20;
    property DtaCompra: TDateTime dispid 21;
    property NumNotaFiscal: Integer dispid 22;
    property NumPartidaLote: WideString dispid 23;
    property DtaValidade: TDateTime dispid 24;
    property QtdInsumo: Double dispid 25;
    property CodUnidadeMedida: Integer dispid 26;
    property SglUnidadeMedida: WideString dispid 27;
    property NumCNPJCPFRevendedor: WideString dispid 28;
    property TxtObservacao: WideString dispid 29;
    property Custo: Double dispid 201;
  end;

// *********************************************************************//
// Interface: IEntradasInsumo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E1B844D2-8133-4F7B-AE01-07FEAF8FEE02}
// *********************************************************************//
  IEntradasInsumo = interface(IDispatch)
    ['{E1B844D2-8133-4F7B-AE01-07FEAF8FEE02}']
    function EOF: WordBool; safecall;
    function BOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    function ValorCampo(const NomColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function Inserir(CodFazenda: Integer; CodTipoInsumo: Integer; CodSubTipoInsumo: Integer; 
                     CodInsumo: Integer; const DesInsumo: WideString; 
                     const NomFabricanteInsumo: WideString; NumRegistroFabricante: Integer; 
                     CodPessoaSecundaria: Integer; const NomRevendedor: WideString; 
                     const NumCNPJCPFRevendedor: WideString; DtaCompra: TDateTime; 
                     NumNotaFiscal: Integer; const NumPartidaLote: WideString; 
                     DtaValidade: TDateTime; QtdInsumo: Double; CodUnidadeMedida: Integer; 
                     const TxtObservacao: WideString; Custo: Double): Integer; safecall;
    function Alterar(CodEntradaInsumo: Integer; CodInsumo: Integer; const DesInsumo: WideString; 
                     const NomFabricanteInsumo: WideString; NumRegistroFabricante: Integer; 
                     CodPessoaSecundaria: Integer; const NomRevendedor: WideString; 
                     const NumCNPJCPFRevendedor: WideString; DtaCompra: TDateTime; 
                     NumNotaFiscal: Integer; const NumPartidaLote: WideString; 
                     DtaValidade: TDateTime; QtdInsumo: Double; CodUnidadeMedida: Integer; 
                     const TxtObservacao: WideString; Custo: Double): Integer; safecall;
    function Buscar(CodEntradaInsumo: Integer): Integer; safecall;
    function Excluir(CodEntradaEvendo: Integer): Integer; safecall;
    function Pesquisar(CodEntradaInsumoInicio: Integer; CodEntradaInsumoFim: Integer; 
                       CodTipoInsumo: Integer; CodSubTipoInsumo: Integer; 
                       const DesInsumo: WideString; const NomFabricanteInsumo: WideString; 
                       NumRegistroFabricante: Integer; const NomRevendedor: WideString; 
                       const NumCNPJCPFRevendedor: WideString; DtaCompraInicio: TDateTime; 
                       DtaCompraFim: TDateTime; DtaValidade: TDateTime; 
                       const CodOrdenacao: WideString; const OrdenacaoCrescente: WideString; 
                       CodFazenda: Integer; const IndEntradasemFazenda: WideString; 
                       const IndSubEventoSanitario: WideString): Integer; safecall;
    function Get_EntradaInsumo: IEntradaInsumo; safecall;
    function RelatorioConsolidado(const SglProdutor: WideString; 
                                  const NomPessoaProdutor: WideString; CodTipoInsumo: Integer; 
                                  CodSubTipoInsumo: Integer; const DesInsumo: WideString; 
                                  const NomFabricanteInsumo: WideString; 
                                  NumRegistroFabricante: Integer; const NomRevendedor: WideString; 
                                  const NumCNPJCPFRevendedor: WideString; 
                                  DtaCompraInicio: TDateTime; DtaCompraFim: TDateTime; 
                                  const IndDataOrdemCrescente: WideString; Tipo: Integer; 
                                  QtdQuebraRelatorio: Integer): WideString; safecall;
    property EntradaInsumo: IEntradaInsumo read Get_EntradaInsumo;
  end;

// *********************************************************************//
// DispIntf:  IEntradasInsumoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E1B844D2-8133-4F7B-AE01-07FEAF8FEE02}
// *********************************************************************//
  IEntradasInsumoDisp = dispinterface
    ['{E1B844D2-8133-4F7B-AE01-07FEAF8FEE02}']
    function EOF: WordBool; dispid 1;
    function BOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoUltimo; dispid 4;
    procedure IrAoProximo; dispid 5;
    procedure IrAoAnterior; dispid 6;
    function ValorCampo(const NomColuna: WideString): OleVariant; dispid 7;
    procedure FecharPesquisa; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    procedure Posicionar(NumPosicao: Integer); dispid 10;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 11;
    function Inserir(CodFazenda: Integer; CodTipoInsumo: Integer; CodSubTipoInsumo: Integer; 
                     CodInsumo: Integer; const DesInsumo: WideString; 
                     const NomFabricanteInsumo: WideString; NumRegistroFabricante: Integer; 
                     CodPessoaSecundaria: Integer; const NomRevendedor: WideString; 
                     const NumCNPJCPFRevendedor: WideString; DtaCompra: TDateTime; 
                     NumNotaFiscal: Integer; const NumPartidaLote: WideString; 
                     DtaValidade: TDateTime; QtdInsumo: Double; CodUnidadeMedida: Integer; 
                     const TxtObservacao: WideString; Custo: Double): Integer; dispid 12;
    function Alterar(CodEntradaInsumo: Integer; CodInsumo: Integer; const DesInsumo: WideString; 
                     const NomFabricanteInsumo: WideString; NumRegistroFabricante: Integer; 
                     CodPessoaSecundaria: Integer; const NomRevendedor: WideString; 
                     const NumCNPJCPFRevendedor: WideString; DtaCompra: TDateTime; 
                     NumNotaFiscal: Integer; const NumPartidaLote: WideString; 
                     DtaValidade: TDateTime; QtdInsumo: Double; CodUnidadeMedida: Integer; 
                     const TxtObservacao: WideString; Custo: Double): Integer; dispid 13;
    function Buscar(CodEntradaInsumo: Integer): Integer; dispid 14;
    function Excluir(CodEntradaEvendo: Integer): Integer; dispid 15;
    function Pesquisar(CodEntradaInsumoInicio: Integer; CodEntradaInsumoFim: Integer; 
                       CodTipoInsumo: Integer; CodSubTipoInsumo: Integer; 
                       const DesInsumo: WideString; const NomFabricanteInsumo: WideString; 
                       NumRegistroFabricante: Integer; const NomRevendedor: WideString; 
                       const NumCNPJCPFRevendedor: WideString; DtaCompraInicio: TDateTime; 
                       DtaCompraFim: TDateTime; DtaValidade: TDateTime; 
                       const CodOrdenacao: WideString; const OrdenacaoCrescente: WideString; 
                       CodFazenda: Integer; const IndEntradasemFazenda: WideString; 
                       const IndSubEventoSanitario: WideString): Integer; dispid 16;
    property EntradaInsumo: IEntradaInsumo readonly dispid 17;
    function RelatorioConsolidado(const SglProdutor: WideString; 
                                  const NomPessoaProdutor: WideString; CodTipoInsumo: Integer; 
                                  CodSubTipoInsumo: Integer; const DesInsumo: WideString; 
                                  const NomFabricanteInsumo: WideString; 
                                  NumRegistroFabricante: Integer; const NomRevendedor: WideString; 
                                  const NumCNPJCPFRevendedor: WideString; 
                                  DtaCompraInicio: TDateTime; DtaCompraFim: TDateTime; 
                                  const IndDataOrdemCrescente: WideString; Tipo: Integer; 
                                  QtdQuebraRelatorio: Integer): WideString; dispid 18;
  end;

// *********************************************************************//
// Interface: IRelatorios
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4029B83F-FDD2-4125-95EF-31D119ACFD65}
// *********************************************************************//
  IRelatorios = interface(IDispatch)
    ['{4029B83F-FDD2-4125-95EF-31D119ACFD65}']
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(CodRelatorio: Integer): Integer; safecall;
    function Buscar(CodRelatorio: Integer): Integer; safecall;
    function Personalizar(CodRelatorio: Integer; CodOrientacao: Integer; CodTamanhoFonte: Integer; 
                          const TxtSubTitulo: WideString; const CodCampos: WideString): Integer; safecall;
    function Get_Relatorio: IRelatorio; safecall;
    procedure IrAoPrimeiro; safecall;
    property Relatorio: IRelatorio read Get_Relatorio;
  end;

// *********************************************************************//
// DispIntf:  IRelatoriosDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4029B83F-FDD2-4125-95EF-31D119ACFD65}
// *********************************************************************//
  IRelatoriosDisp = dispinterface
    ['{4029B83F-FDD2-4125-95EF-31D119ACFD65}']
    function EOF: WordBool; dispid 1;
    procedure IrAoProximo; dispid 2;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 3;
    procedure FecharPesquisa; dispid 4;
    function Pesquisar(CodRelatorio: Integer): Integer; dispid 5;
    function Buscar(CodRelatorio: Integer): Integer; dispid 6;
    function Personalizar(CodRelatorio: Integer; CodOrientacao: Integer; CodTamanhoFonte: Integer; 
                          const TxtSubTitulo: WideString; const CodCampos: WideString): Integer; dispid 7;
    property Relatorio: IRelatorio readonly dispid 8;
    procedure IrAoPrimeiro; dispid 9;
  end;

// *********************************************************************//
// Interface: IRelatorio
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EEE671BD-59C0-44BE-8BA4-1BCC539F801E}
// *********************************************************************//
  IRelatorio = interface(IDispatch)
    ['{EEE671BD-59C0-44BE-8BA4-1BCC539F801E}']
    function Get_CodRelatorio: Integer; safecall;
    procedure Set_CodRelatorio(Value: Integer); safecall;
    function Get_TxtTitulo: WideString; safecall;
    procedure Set_TxtTitulo(const Value: WideString); safecall;
    function Get_QtdColunas: Integer; safecall;
    procedure Set_QtdColunas(Value: Integer); safecall;
    function Get_CodOrientacao: Integer; safecall;
    procedure Set_CodOrientacao(Value: Integer); safecall;
    function Get_CodTamanhoFonte: Integer; safecall;
    procedure Set_CodTamanhoFonte(Value: Integer); safecall;
    function Get_IndPersonalizavel: WideString; safecall;
    procedure Set_IndPersonalizavel(const Value: WideString); safecall;
    function Get_TxtSubTitulo: WideString; safecall;
    procedure Set_TxtSubTitulo(const Value: WideString); safecall;
    property CodRelatorio: Integer read Get_CodRelatorio write Set_CodRelatorio;
    property TxtTitulo: WideString read Get_TxtTitulo write Set_TxtTitulo;
    property QtdColunas: Integer read Get_QtdColunas write Set_QtdColunas;
    property CodOrientacao: Integer read Get_CodOrientacao write Set_CodOrientacao;
    property CodTamanhoFonte: Integer read Get_CodTamanhoFonte write Set_CodTamanhoFonte;
    property IndPersonalizavel: WideString read Get_IndPersonalizavel write Set_IndPersonalizavel;
    property TxtSubTitulo: WideString read Get_TxtSubTitulo write Set_TxtSubTitulo;
  end;

// *********************************************************************//
// DispIntf:  IRelatorioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EEE671BD-59C0-44BE-8BA4-1BCC539F801E}
// *********************************************************************//
  IRelatorioDisp = dispinterface
    ['{EEE671BD-59C0-44BE-8BA4-1BCC539F801E}']
    property CodRelatorio: Integer dispid 1;
    property TxtTitulo: WideString dispid 2;
    property QtdColunas: Integer dispid 3;
    property CodOrientacao: Integer dispid 4;
    property CodTamanhoFonte: Integer dispid 5;
    property IndPersonalizavel: WideString dispid 6;
    property TxtSubTitulo: WideString dispid 7;
  end;

// *********************************************************************//
// Interface: IOrientacoes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75EC4915-B11E-4E82-90AC-59A2E7E4D8DF}
// *********************************************************************//
  IOrientacoes = interface(IDispatch)
    ['{75EC4915-B11E-4E82-90AC-59A2E7E4D8DF}']
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar: Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IOrientacoesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {75EC4915-B11E-4E82-90AC-59A2E7E4D8DF}
// *********************************************************************//
  IOrientacoesDisp = dispinterface
    ['{75EC4915-B11E-4E82-90AC-59A2E7E4D8DF}']
    function EOF: WordBool; dispid 1;
    procedure IrAoProximo; dispid 2;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 3;
    procedure FecharPesquisa; dispid 4;
    function Pesquisar: Integer; dispid 5;
  end;

// *********************************************************************//
// Interface: ITamanhosFonte
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4EBDC389-41AB-47EA-9C7D-3E5F4CA92273}
// *********************************************************************//
  ITamanhosFonte = interface(IDispatch)
    ['{4EBDC389-41AB-47EA-9C7D-3E5F4CA92273}']
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar: Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITamanhosFonteDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4EBDC389-41AB-47EA-9C7D-3E5F4CA92273}
// *********************************************************************//
  ITamanhosFonteDisp = dispinterface
    ['{4EBDC389-41AB-47EA-9C7D-3E5F4CA92273}']
    function EOF: WordBool; dispid 1;
    procedure IrAoProximo; dispid 2;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 3;
    procedure FecharPesquisa; dispid 4;
    function Pesquisar: Integer; dispid 5;
  end;

// *********************************************************************//
// Interface: ILargurasLinhaRelatorio
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE8F9EA8-DEC1-4405-B174-82FDA8FD98A8}
// *********************************************************************//
  ILargurasLinhaRelatorio = interface(IDispatch)
    ['{EE8F9EA8-DEC1-4405-B174-82FDA8FD98A8}']
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar: Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  ILargurasLinhaRelatorioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE8F9EA8-DEC1-4405-B174-82FDA8FD98A8}
// *********************************************************************//
  ILargurasLinhaRelatorioDisp = dispinterface
    ['{EE8F9EA8-DEC1-4405-B174-82FDA8FD98A8}']
    function EOF: WordBool; dispid 1;
    procedure IrAoProximo; dispid 2;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 3;
    procedure FecharPesquisa; dispid 4;
    function Pesquisar: Integer; dispid 5;
  end;

// *********************************************************************//
// Interface: IInterfaceSisbov
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {694254C6-9A57-4779-AD37-F09BCC2174B0}
// *********************************************************************//
  IInterfaceSisbov = interface(IDispatch)
    ['{694254C6-9A57-4779-AD37-F09BCC2174B0}']
    function EOF: WordBool; safecall;
    function BOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    function ValorCampo(const NomColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function PesquisarArquivos(DtaInicio: TDateTime; DtaFim: TDateTime; 
                               CodTipoArquivoSisbov: Integer; DtaInicioSisbov: TDateTime; 
                               DtaFimSisbov: TDateTime; const IndPossuiLogErro: WideString): Integer; safecall;
    function GerarArquivos(CodArquivoSisbov: Integer; CodTipoArquivo: Integer): Integer; safecall;
    function Get_CodArquivoAnimais: Integer; safecall;
    function Get_CodArquivoPropriedades: Integer; safecall;
    function Get_CodArquivoMovimentacoes: Integer; safecall;
    function Get_CodArquivoMortes: Integer; safecall;
    function Get_CodArquivoCertificados: Integer; safecall;
    function Buscar(CodArquivoSisbov: Integer): Integer; safecall;
    function Get_ArquivoSisbov: IArquivoSisbov; safecall;
    function PesquisarLogErro(CodArquivoSisbov: Integer): Integer; safecall;
    function AtualizarDataSisbov(CodArquivoSisbov: Integer; DtaInsercaoSisbov: TDateTime): Integer; safecall;
    function Get_CodArquivoProdutores: Integer; safecall;
    function Get_CodArquivoSupervisores: Integer; safecall;
    function CadastrarEmail(const NovoEmail: WideString): WideString; safecall;
    function ConsultarEmail: WideString; safecall;
    function ConsultarSolicitacaoNumeracao(const NumeroSolicitacao: WideString): WideString; safecall;
    function CancelarSolicitacaoNumeracao(NumeroSolicitacao: Integer; 
                                          const NumeroSisbov: WideString; CodPropriedad: Integer; 
                                          const CnpjProduto: WideString; 
                                          const CpfProduto: WideString; 
                                          CodMotivoCancelamento: Integer): Integer; safecall;
    procedure RecuperarTabela(CodigoTabela: Integer); safecall;
    property CodArquivoAnimais: Integer read Get_CodArquivoAnimais;
    property CodArquivoPropriedades: Integer read Get_CodArquivoPropriedades;
    property CodArquivoMovimentacoes: Integer read Get_CodArquivoMovimentacoes;
    property CodArquivoMortes: Integer read Get_CodArquivoMortes;
    property CodArquivoCertificados: Integer read Get_CodArquivoCertificados;
    property ArquivoSisbov: IArquivoSisbov read Get_ArquivoSisbov;
    property CodArquivoProdutores: Integer read Get_CodArquivoProdutores;
    property CodArquivoSupervisores: Integer read Get_CodArquivoSupervisores;
  end;

// *********************************************************************//
// DispIntf:  IInterfaceSisbovDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {694254C6-9A57-4779-AD37-F09BCC2174B0}
// *********************************************************************//
  IInterfaceSisbovDisp = dispinterface
    ['{694254C6-9A57-4779-AD37-F09BCC2174B0}']
    function EOF: WordBool; dispid 1;
    function BOF: WordBool; dispid 2;
    procedure IrAoPrimeiro; dispid 3;
    procedure IrAoUltimo; dispid 4;
    procedure IrAoProximo; dispid 5;
    procedure IrAoAnterior; dispid 6;
    function ValorCampo(const NomColuna: WideString): OleVariant; dispid 7;
    procedure FecharPesquisa; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    procedure Posicionar(NumPosicao: Integer); dispid 10;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 11;
    function PesquisarArquivos(DtaInicio: TDateTime; DtaFim: TDateTime; 
                               CodTipoArquivoSisbov: Integer; DtaInicioSisbov: TDateTime; 
                               DtaFimSisbov: TDateTime; const IndPossuiLogErro: WideString): Integer; dispid 12;
    function GerarArquivos(CodArquivoSisbov: Integer; CodTipoArquivo: Integer): Integer; dispid 13;
    property CodArquivoAnimais: Integer readonly dispid 14;
    property CodArquivoPropriedades: Integer readonly dispid 15;
    property CodArquivoMovimentacoes: Integer readonly dispid 16;
    property CodArquivoMortes: Integer readonly dispid 17;
    property CodArquivoCertificados: Integer readonly dispid 18;
    function Buscar(CodArquivoSisbov: Integer): Integer; dispid 19;
    property ArquivoSisbov: IArquivoSisbov readonly dispid 20;
    function PesquisarLogErro(CodArquivoSisbov: Integer): Integer; dispid 21;
    function AtualizarDataSisbov(CodArquivoSisbov: Integer; DtaInsercaoSisbov: TDateTime): Integer; dispid 22;
    property CodArquivoProdutores: Integer readonly dispid 24;
    property CodArquivoSupervisores: Integer readonly dispid 201;
    function CadastrarEmail(const NovoEmail: WideString): WideString; dispid 202;
    function ConsultarEmail: WideString; dispid 203;
    function ConsultarSolicitacaoNumeracao(const NumeroSolicitacao: WideString): WideString; dispid 204;
    function CancelarSolicitacaoNumeracao(NumeroSolicitacao: Integer; 
                                          const NumeroSisbov: WideString; CodPropriedad: Integer; 
                                          const CnpjProduto: WideString; 
                                          const CpfProduto: WideString; 
                                          CodMotivoCancelamento: Integer): Integer; dispid 205;
    procedure RecuperarTabela(CodigoTabela: Integer); dispid 206;
  end;

// *********************************************************************//
// Interface: ITiposArquivoSisBov
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {28FB01E6-4BD9-402E-B65B-4BD64F5AE73D}
// *********************************************************************//
  ITiposArquivoSisBov = interface(IDispatch)
    ['{28FB01E6-4BD9-402E-B65B-4BD64F5AE73D}']
    function EOF: WordBool; safecall;
    procedure FecharPesquisa; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoPrimeiro; safecall;
    function Pesquisar: Integer; safecall;
    function ValorCampo(const NomColuna: WideString): OleVariant; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposArquivoSisBovDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {28FB01E6-4BD9-402E-B65B-4BD64F5AE73D}
// *********************************************************************//
  ITiposArquivoSisBovDisp = dispinterface
    ['{28FB01E6-4BD9-402E-B65B-4BD64F5AE73D}']
    function EOF: WordBool; dispid 1;
    procedure FecharPesquisa; dispid 8;
    procedure IrAoProximo; dispid 5;
    procedure IrAoPrimeiro; dispid 3;
    function Pesquisar: Integer; dispid 6;
    function ValorCampo(const NomColuna: WideString): OleVariant; dispid 7;
  end;

// *********************************************************************//
// Interface: ITiposSubEventoSanitario
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7B7468F-4EE8-4C11-BA7E-A6EC20109B3B}
// *********************************************************************//
  ITiposSubEventoSanitario = interface(IDispatch)
    ['{A7B7468F-4EE8-4C11-BA7E-A6EC20109B3B}']
    function EOF: WordBool; safecall;
    function ValorCampo(const NomColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    procedure IrAoProximo; safecall;
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposSubEventoSanitarioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7B7468F-4EE8-4C11-BA7E-A6EC20109B3B}
// *********************************************************************//
  ITiposSubEventoSanitarioDisp = dispinterface
    ['{A7B7468F-4EE8-4C11-BA7E-A6EC20109B3B}']
    function EOF: WordBool; dispid 1;
    function ValorCampo(const NomColuna: WideString): OleVariant; dispid 7;
    procedure FecharPesquisa; dispid 8;
    procedure IrAoProximo; dispid 5;
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 6;
  end;

// *********************************************************************//
// Interface: IArquivoSisbov
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D2DA0126-49F4-437A-ACC6-57C1F430F6E0}
// *********************************************************************//
  IArquivoSisbov = interface(IDispatch)
    ['{D2DA0126-49F4-437A-ACC6-57C1F430F6E0}']
    function Get_CodArquivoSisbov: Integer; safecall;
    procedure Set_CodArquivoSisbov(Value: Integer); safecall;
    function Get_NomArquivoSisbov: WideString; safecall;
    procedure Set_NomArquivoSisbov(const Value: WideString); safecall;
    function Get_DtaCriacaoArquivo: TDateTime; safecall;
    procedure Set_DtaCriacaoArquivo(Value: TDateTime); safecall;
    function Get_QtdBytesArquivo: Integer; safecall;
    procedure Set_QtdBytesArquivo(Value: Integer); safecall;
    function Get_CodTipoArquivoSisbov: Integer; safecall;
    procedure Set_CodTipoArquivoSisbov(Value: Integer); safecall;
    function Get_DesTipoArquivoSisbov: WideString; safecall;
    procedure Set_DesTipoArquivoSisbov(const Value: WideString); safecall;
    function Get_CodUsuario: Integer; safecall;
    procedure Set_CodUsuario(Value: Integer); safecall;
    function Get_NomUsuario: WideString; safecall;
    procedure Set_NomUsuario(const Value: WideString); safecall;
    function Get_IndPossuiLogErro: Integer; safecall;
    procedure Set_IndPossuiLogErro(Value: Integer); safecall;
    function Get_DtaInsercaoSisbov: TDateTime; safecall;
    procedure Set_DtaInsercaoSisbov(Value: TDateTime); safecall;
    property CodArquivoSisbov: Integer read Get_CodArquivoSisbov write Set_CodArquivoSisbov;
    property NomArquivoSisbov: WideString read Get_NomArquivoSisbov write Set_NomArquivoSisbov;
    property DtaCriacaoArquivo: TDateTime read Get_DtaCriacaoArquivo write Set_DtaCriacaoArquivo;
    property QtdBytesArquivo: Integer read Get_QtdBytesArquivo write Set_QtdBytesArquivo;
    property CodTipoArquivoSisbov: Integer read Get_CodTipoArquivoSisbov write Set_CodTipoArquivoSisbov;
    property DesTipoArquivoSisbov: WideString read Get_DesTipoArquivoSisbov write Set_DesTipoArquivoSisbov;
    property CodUsuario: Integer read Get_CodUsuario write Set_CodUsuario;
    property NomUsuario: WideString read Get_NomUsuario write Set_NomUsuario;
    property IndPossuiLogErro: Integer read Get_IndPossuiLogErro write Set_IndPossuiLogErro;
    property DtaInsercaoSisbov: TDateTime read Get_DtaInsercaoSisbov write Set_DtaInsercaoSisbov;
  end;

// *********************************************************************//
// DispIntf:  IArquivoSisbovDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D2DA0126-49F4-437A-ACC6-57C1F430F6E0}
// *********************************************************************//
  IArquivoSisbovDisp = dispinterface
    ['{D2DA0126-49F4-437A-ACC6-57C1F430F6E0}']
    property CodArquivoSisbov: Integer dispid 1;
    property NomArquivoSisbov: WideString dispid 2;
    property DtaCriacaoArquivo: TDateTime dispid 3;
    property QtdBytesArquivo: Integer dispid 4;
    property CodTipoArquivoSisbov: Integer dispid 5;
    property DesTipoArquivoSisbov: WideString dispid 6;
    property CodUsuario: Integer dispid 7;
    property NomUsuario: WideString dispid 8;
    property IndPossuiLogErro: Integer dispid 9;
    property DtaInsercaoSisbov: TDateTime dispid 10;
  end;

// *********************************************************************//
// Interface: IAnimaisVisita
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8F6218E7-7B7A-427F-B3E1-A0FC40EB27D2}
// *********************************************************************//
  IAnimaisVisita = interface(IDispatch)
    ['{8F6218E7-7B7A-427F-B3E1-A0FC40EB27D2}']
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function Buscar(const CodAnimalSisbov: WideString): Integer; safecall;
    function Get_AnimalVisita: IAnimalVisita; safecall;
    property AnimalVisita: IAnimalVisita read Get_AnimalVisita;
  end;

// *********************************************************************//
// DispIntf:  IAnimaisVisitaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8F6218E7-7B7A-427F-B3E1-A0FC40EB27D2}
// *********************************************************************//
  IAnimaisVisitaDisp = dispinterface
    ['{8F6218E7-7B7A-427F-B3E1-A0FC40EB27D2}']
    function EOF: WordBool; dispid 1;
    procedure IrAoPrimeiro; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    function Buscar(const CodAnimalSisbov: WideString): Integer; dispid 5;
    property AnimalVisita: IAnimalVisita readonly dispid 6;
  end;

// *********************************************************************//
// Interface: IAnimalVisita
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B25D3105-C2BB-49BD-8E46-E5EFE879CC8C}
// *********************************************************************//
  IAnimalVisita = interface(IDispatch)
    ['{B25D3105-C2BB-49BD-8E46-E5EFE879CC8C}']
    function Get_NomPessoaProdutor: WideString; safecall;
    procedure Set_NomPessoaProdutor(const Value: WideString); safecall;
    function Get_NumCNPJCPFProdutorFormatado: WideString; safecall;
    function Get_SglFazendaManejo: WideString; safecall;
    procedure Set_SglFazendaManejo(const Value: WideString); safecall;
    function Get_CodAnimalManejo: WideString; safecall;
    procedure Set_CodAnimalManejo(const Value: WideString); safecall;
    function Get_CodAnimalCertificadora: WideString; safecall;
    procedure Set_CodAnimalCertificadora(const Value: WideString); safecall;
    function Get_CodPaisSisBov: Integer; safecall;
    procedure Set_CodPaisSisBov(Value: Integer); safecall;
    function Get_CodEstadoSISBOV: Integer; safecall;
    procedure Set_CodEstadoSISBOV(Value: Integer); safecall;
    function Get_CodMicroRegiaoSISBOV: Integer; safecall;
    procedure Set_CodMicroRegiaoSISBOV(Value: Integer); safecall;
    function Get_CodAnimalSisbov: Integer; safecall;
    procedure Set_CodAnimalSisbov(Value: Integer); safecall;
    function Get_NumDVSisbov: Integer; safecall;
    procedure Set_NumDVSisbov(Value: Integer); safecall;
    function Get_DtaIdentificacaoSisbov: TDateTime; safecall;
    procedure Set_DtaIdentificacaoSisbov(Value: TDateTime); safecall;
    function Get_NumImovelIdentificacao: WideString; safecall;
    procedure Set_NumImovelIdentificacao(const Value: WideString); safecall;
    function Get_NomPropriedadeIdentificacao: WideString; safecall;
    procedure Set_NomPropriedadeIdentificacao(const Value: WideString); safecall;
    function Get_NomFazendaIdentificacao: WideString; safecall;
    procedure Set_NomFazendaIdentificacao(const Value: WideString); safecall;
    function Get_NomArquivoImagemIdentificacao: WideString; safecall;
    procedure Set_NomArquivoImagemIdentificacao(const Value: WideString); safecall;
    function Get_DtaNascimento: TDateTime; safecall;
    procedure Set_DtaNascimento(Value: TDateTime); safecall;
    function Get_NumImovelNascimento: WideString; safecall;
    procedure Set_NumImovelNascimento(const Value: WideString); safecall;
    function Get_NomPropriedadeNascimento: WideString; safecall;
    procedure Set_NomPropriedadeNascimento(const Value: WideString); safecall;
    function Get_NomFazendaNascimento: WideString; safecall;
    procedure Set_NomFazendaNascimento(const Value: WideString); safecall;
    function Get_NomArquivoImagemNascimento: WideString; safecall;
    procedure Set_NomArquivoImagemNascimento(const Value: WideString); safecall;
    function Get_NomAnimal: WideString; safecall;
    procedure Set_NomAnimal(const Value: WideString); safecall;
    function Get_DesEspecie: WideString; safecall;
    procedure Set_DesEspecie(const Value: WideString); safecall;
    function Get_DesAptidao: WideString; safecall;
    procedure Set_DesAptidao(const Value: WideString); safecall;
    function Get_DesRaca: WideString; safecall;
    procedure Set_DesRaca(const Value: WideString); safecall;
    function Get_DesPelagem: WideString; safecall;
    procedure Set_DesPelagem(const Value: WideString); safecall;
    function Get_IndSexo: WideString; safecall;
    procedure Set_IndSexo(const Value: WideString); safecall;
    function Get_IndAnimalCastrado: WideString; safecall;
    procedure Set_IndAnimalCastrado(const Value: WideString); safecall;
    function Get_SglAssociacaoRaca: WideString; safecall;
    procedure Set_SglAssociacaoRaca(const Value: WideString); safecall;
    function Get_SglGrauSangue: WideString; safecall;
    procedure Set_SglGrauSangue(const Value: WideString); safecall;
    function Get_NumRGD: WideString; safecall;
    procedure Set_NumRGD(const Value: WideString); safecall;
    function Get_NomMunicipioIdentificacao: WideString; safecall;
    procedure Set_NomMunicipioIdentificacao(const Value: WideString); safecall;
    function Get_SglEstadoIdentificacao: WideString; safecall;
    procedure Set_SglEstadoIdentificacao(const Value: WideString); safecall;
    function Get_NomMunicipioNascimento: WideString; safecall;
    procedure Set_NomMunicipioNascimento(const Value: WideString); safecall;
    function Get_SglEstadoNascimento: WideString; safecall;
    procedure Set_SglEstadoNascimento(const Value: WideString); safecall;
    function Get_NomArquivoImagemManejo: WideString; safecall;
    procedure Set_NomArquivoImagemManejo(const Value: WideString); safecall;
    function Get_CodPessoaNatureza: WideString; safecall;
    procedure Set_CodPessoaNatureza(const Value: WideString); safecall;
    property NomPessoaProdutor: WideString read Get_NomPessoaProdutor write Set_NomPessoaProdutor;
    property NumCNPJCPFProdutorFormatado: WideString read Get_NumCNPJCPFProdutorFormatado;
    property SglFazendaManejo: WideString read Get_SglFazendaManejo write Set_SglFazendaManejo;
    property CodAnimalManejo: WideString read Get_CodAnimalManejo write Set_CodAnimalManejo;
    property CodAnimalCertificadora: WideString read Get_CodAnimalCertificadora write Set_CodAnimalCertificadora;
    property CodPaisSisBov: Integer read Get_CodPaisSisBov write Set_CodPaisSisBov;
    property CodEstadoSISBOV: Integer read Get_CodEstadoSISBOV write Set_CodEstadoSISBOV;
    property CodMicroRegiaoSISBOV: Integer read Get_CodMicroRegiaoSISBOV write Set_CodMicroRegiaoSISBOV;
    property CodAnimalSisbov: Integer read Get_CodAnimalSisbov write Set_CodAnimalSisbov;
    property NumDVSisbov: Integer read Get_NumDVSisbov write Set_NumDVSisbov;
    property DtaIdentificacaoSisbov: TDateTime read Get_DtaIdentificacaoSisbov write Set_DtaIdentificacaoSisbov;
    property NumImovelIdentificacao: WideString read Get_NumImovelIdentificacao write Set_NumImovelIdentificacao;
    property NomPropriedadeIdentificacao: WideString read Get_NomPropriedadeIdentificacao write Set_NomPropriedadeIdentificacao;
    property NomFazendaIdentificacao: WideString read Get_NomFazendaIdentificacao write Set_NomFazendaIdentificacao;
    property NomArquivoImagemIdentificacao: WideString read Get_NomArquivoImagemIdentificacao write Set_NomArquivoImagemIdentificacao;
    property DtaNascimento: TDateTime read Get_DtaNascimento write Set_DtaNascimento;
    property NumImovelNascimento: WideString read Get_NumImovelNascimento write Set_NumImovelNascimento;
    property NomPropriedadeNascimento: WideString read Get_NomPropriedadeNascimento write Set_NomPropriedadeNascimento;
    property NomFazendaNascimento: WideString read Get_NomFazendaNascimento write Set_NomFazendaNascimento;
    property NomArquivoImagemNascimento: WideString read Get_NomArquivoImagemNascimento write Set_NomArquivoImagemNascimento;
    property NomAnimal: WideString read Get_NomAnimal write Set_NomAnimal;
    property DesEspecie: WideString read Get_DesEspecie write Set_DesEspecie;
    property DesAptidao: WideString read Get_DesAptidao write Set_DesAptidao;
    property DesRaca: WideString read Get_DesRaca write Set_DesRaca;
    property DesPelagem: WideString read Get_DesPelagem write Set_DesPelagem;
    property IndSexo: WideString read Get_IndSexo write Set_IndSexo;
    property IndAnimalCastrado: WideString read Get_IndAnimalCastrado write Set_IndAnimalCastrado;
    property SglAssociacaoRaca: WideString read Get_SglAssociacaoRaca write Set_SglAssociacaoRaca;
    property SglGrauSangue: WideString read Get_SglGrauSangue write Set_SglGrauSangue;
    property NumRGD: WideString read Get_NumRGD write Set_NumRGD;
    property NomMunicipioIdentificacao: WideString read Get_NomMunicipioIdentificacao write Set_NomMunicipioIdentificacao;
    property SglEstadoIdentificacao: WideString read Get_SglEstadoIdentificacao write Set_SglEstadoIdentificacao;
    property NomMunicipioNascimento: WideString read Get_NomMunicipioNascimento write Set_NomMunicipioNascimento;
    property SglEstadoNascimento: WideString read Get_SglEstadoNascimento write Set_SglEstadoNascimento;
    property NomArquivoImagemManejo: WideString read Get_NomArquivoImagemManejo write Set_NomArquivoImagemManejo;
    property CodPessoaNatureza: WideString read Get_CodPessoaNatureza write Set_CodPessoaNatureza;
  end;

// *********************************************************************//
// DispIntf:  IAnimalVisitaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B25D3105-C2BB-49BD-8E46-E5EFE879CC8C}
// *********************************************************************//
  IAnimalVisitaDisp = dispinterface
    ['{B25D3105-C2BB-49BD-8E46-E5EFE879CC8C}']
    property NomPessoaProdutor: WideString dispid 3;
    property NumCNPJCPFProdutorFormatado: WideString readonly dispid 4;
    property SglFazendaManejo: WideString dispid 6;
    property CodAnimalManejo: WideString dispid 7;
    property CodAnimalCertificadora: WideString dispid 8;
    property CodPaisSisBov: Integer dispid 9;
    property CodEstadoSISBOV: Integer dispid 10;
    property CodMicroRegiaoSISBOV: Integer dispid 11;
    property CodAnimalSisbov: Integer dispid 12;
    property NumDVSisbov: Integer dispid 13;
    property DtaIdentificacaoSisbov: TDateTime dispid 14;
    property NumImovelIdentificacao: WideString dispid 15;
    property NomPropriedadeIdentificacao: WideString dispid 16;
    property NomFazendaIdentificacao: WideString dispid 17;
    property NomArquivoImagemIdentificacao: WideString dispid 18;
    property DtaNascimento: TDateTime dispid 19;
    property NumImovelNascimento: WideString dispid 20;
    property NomPropriedadeNascimento: WideString dispid 21;
    property NomFazendaNascimento: WideString dispid 22;
    property NomArquivoImagemNascimento: WideString dispid 23;
    property NomAnimal: WideString dispid 24;
    property DesEspecie: WideString dispid 25;
    property DesAptidao: WideString dispid 26;
    property DesRaca: WideString dispid 27;
    property DesPelagem: WideString dispid 28;
    property IndSexo: WideString dispid 29;
    property IndAnimalCastrado: WideString dispid 30;
    property SglAssociacaoRaca: WideString dispid 31;
    property SglGrauSangue: WideString dispid 32;
    property NumRGD: WideString dispid 33;
    property NomMunicipioIdentificacao: WideString dispid 34;
    property SglEstadoIdentificacao: WideString dispid 35;
    property NomMunicipioNascimento: WideString dispid 36;
    property SglEstadoNascimento: WideString dispid 37;
    property NomArquivoImagemManejo: WideString dispid 38;
    property CodPessoaNatureza: WideString dispid 1;
  end;

// *********************************************************************//
// Interface: IReprodutorMultiplo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B206A385-F60B-4139-BA98-EAC827C6A6F5}
// *********************************************************************//
  IReprodutorMultiplo = interface(IDispatch)
    ['{B206A385-F60B-4139-BA98-EAC827C6A6F5}']
    function Get_CodPessoaProdutor: Integer; safecall;
    procedure Set_CodPessoaProdutor(Value: Integer); safecall;
    function Get_CodReprodutorMultiplo: Integer; safecall;
    procedure Set_CodReprodutorMultiplo(Value: Integer); safecall;
    function Get_CodFazendaManejo: Integer; safecall;
    procedure Set_CodFazendaManejo(Value: Integer); safecall;
    function Get_SglFazendaManejo: WideString; safecall;
    procedure Set_SglFazendaManejo(const Value: WideString); safecall;
    function Get_NomFazendaManejo: WideString; safecall;
    procedure Set_NomFazendaManejo(const Value: WideString); safecall;
    function Get_CodReprodutorMultiploManejo: WideString; safecall;
    procedure Set_CodReprodutorMultiploManejo(const Value: WideString); safecall;
    function Get_CodEspecie: Integer; safecall;
    procedure Set_CodEspecie(Value: Integer); safecall;
    function Get_SglEspecie: WideString; safecall;
    procedure Set_SglEspecie(const Value: WideString); safecall;
    function Get_DesEspecie: WideString; safecall;
    procedure Set_DesEspecie(const Value: WideString); safecall;
    function Get_TxtObservacao: WideString; safecall;
    procedure Set_TxtObservacao(const Value: WideString); safecall;
    function Get_IndAtivo: WideString; safecall;
    procedure Set_IndAtivo(const Value: WideString); safecall;
    function Get_DtaCadastramento: TDateTime; safecall;
    procedure Set_DtaCadastramento(Value: TDateTime); safecall;
    property CodPessoaProdutor: Integer read Get_CodPessoaProdutor write Set_CodPessoaProdutor;
    property CodReprodutorMultiplo: Integer read Get_CodReprodutorMultiplo write Set_CodReprodutorMultiplo;
    property CodFazendaManejo: Integer read Get_CodFazendaManejo write Set_CodFazendaManejo;
    property SglFazendaManejo: WideString read Get_SglFazendaManejo write Set_SglFazendaManejo;
    property NomFazendaManejo: WideString read Get_NomFazendaManejo write Set_NomFazendaManejo;
    property CodReprodutorMultiploManejo: WideString read Get_CodReprodutorMultiploManejo write Set_CodReprodutorMultiploManejo;
    property CodEspecie: Integer read Get_CodEspecie write Set_CodEspecie;
    property SglEspecie: WideString read Get_SglEspecie write Set_SglEspecie;
    property DesEspecie: WideString read Get_DesEspecie write Set_DesEspecie;
    property TxtObservacao: WideString read Get_TxtObservacao write Set_TxtObservacao;
    property IndAtivo: WideString read Get_IndAtivo write Set_IndAtivo;
    property DtaCadastramento: TDateTime read Get_DtaCadastramento write Set_DtaCadastramento;
  end;

// *********************************************************************//
// DispIntf:  IReprodutorMultiploDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B206A385-F60B-4139-BA98-EAC827C6A6F5}
// *********************************************************************//
  IReprodutorMultiploDisp = dispinterface
    ['{B206A385-F60B-4139-BA98-EAC827C6A6F5}']
    property CodPessoaProdutor: Integer dispid 1;
    property CodReprodutorMultiplo: Integer dispid 2;
    property CodFazendaManejo: Integer dispid 3;
    property SglFazendaManejo: WideString dispid 4;
    property NomFazendaManejo: WideString dispid 5;
    property CodReprodutorMultiploManejo: WideString dispid 6;
    property CodEspecie: Integer dispid 7;
    property SglEspecie: WideString dispid 8;
    property DesEspecie: WideString dispid 9;
    property TxtObservacao: WideString dispid 10;
    property IndAtivo: WideString dispid 11;
    property DtaCadastramento: TDateTime dispid 12;
  end;

// *********************************************************************//
// Interface: IReprodutoresMultiplos
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30241E73-48E6-456C-9BB9-89CBD8A878EF}
// *********************************************************************//
  IReprodutoresMultiplos = interface(IDispatch)
    ['{30241E73-48E6-456C-9BB9-89CBD8A878EF}']
    function Inserir(CodFazendaManejo: Integer; const CodReprodutorMultiploManejo: WideString; 
                     CodEspecie: Integer; const TxtObservacao: WideString): Integer; safecall;
    function Excluir(CodReprodutorMultiplo: Integer): Integer; safecall;
    function Copiar(CodReprodutorMultiplo: Integer; CodFazendaManejo: Integer; 
                    const CodReprodutorMultiploManejo: WideString): Integer; safecall;
    function Alterar(CodReprodutorMultiplo: Integer; const CodReprodutorMultiploManejo: WideString; 
                     const TxtObservacao: WideString): Integer; safecall;
    function Ativar(CodReprodutorMultiplo: Integer): Integer; safecall;
    function Desativar(CodReprodutorMultiplo: Integer): Integer; safecall;
    function AdicionarTouro(CodReprodutorMultiplo: Integer; CodAnimal: Integer; 
                            CodFazendaManejo: Integer; const CodAnimalManejo: WideString; 
                            DtaInicioUso: TDateTime; DtaFimUso: TDateTime): Integer; safecall;
    function RetirarTouro(CodReprodutorMultiplo: Integer; CodAnimal: Integer): Integer; safecall;
    function PesquisarTouros(CodReprodutorMultiplo: Integer): Integer; safecall;
    function Buscar(CodReprodutorMultiplo: Integer): Integer; safecall;
    function Pesquisar(CodFazendaManejo: Integer; CodEspecie: Integer; const IndAtivo: WideString; 
                       CodAnimal: Integer; CodFazendaManejoAnimal: Integer; 
                       const CodAnimalManejo: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    function BOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    function ValorCampo(const NomColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function Get_ReprodutorMultiplo: IReprodutorMultiplo; safecall;
    function AdicionarTouros(CodReprodutorMultiplo: Integer; const CodAnimais: WideString; 
                             CodFazendaManejo: Integer; const CodAnimaisManejo: WideString; 
                             DtaInicioUso: TDateTime; DtaFimUso: TDateTime): Integer; safecall;
    function RetirarTouros(CodReprodutorMultiplo: Integer; const CodAnimais: WideString; 
                           CodFazendaManejo: Integer; const CodAnimaisManejo: WideString): Integer; safecall;
    property ReprodutorMultiplo: IReprodutorMultiplo read Get_ReprodutorMultiplo;
  end;

// *********************************************************************//
// DispIntf:  IReprodutoresMultiplosDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30241E73-48E6-456C-9BB9-89CBD8A878EF}
// *********************************************************************//
  IReprodutoresMultiplosDisp = dispinterface
    ['{30241E73-48E6-456C-9BB9-89CBD8A878EF}']
    function Inserir(CodFazendaManejo: Integer; const CodReprodutorMultiploManejo: WideString; 
                     CodEspecie: Integer; const TxtObservacao: WideString): Integer; dispid 1;
    function Excluir(CodReprodutorMultiplo: Integer): Integer; dispid 2;
    function Copiar(CodReprodutorMultiplo: Integer; CodFazendaManejo: Integer; 
                    const CodReprodutorMultiploManejo: WideString): Integer; dispid 3;
    function Alterar(CodReprodutorMultiplo: Integer; const CodReprodutorMultiploManejo: WideString; 
                     const TxtObservacao: WideString): Integer; dispid 4;
    function Ativar(CodReprodutorMultiplo: Integer): Integer; dispid 5;
    function Desativar(CodReprodutorMultiplo: Integer): Integer; dispid 6;
    function AdicionarTouro(CodReprodutorMultiplo: Integer; CodAnimal: Integer; 
                            CodFazendaManejo: Integer; const CodAnimalManejo: WideString; 
                            DtaInicioUso: TDateTime; DtaFimUso: TDateTime): Integer; dispid 7;
    function RetirarTouro(CodReprodutorMultiplo: Integer; CodAnimal: Integer): Integer; dispid 8;
    function PesquisarTouros(CodReprodutorMultiplo: Integer): Integer; dispid 9;
    function Buscar(CodReprodutorMultiplo: Integer): Integer; dispid 10;
    function Pesquisar(CodFazendaManejo: Integer; CodEspecie: Integer; const IndAtivo: WideString; 
                       CodAnimal: Integer; CodFazendaManejoAnimal: Integer; 
                       const CodAnimalManejo: WideString): Integer; dispid 11;
    function EOF: WordBool; dispid 12;
    function BOF: WordBool; dispid 13;
    procedure IrAoPrimeiro; dispid 14;
    procedure IrAoUltimo; dispid 15;
    procedure IrAoProximo; dispid 16;
    procedure IrAoAnterior; dispid 17;
    function ValorCampo(const NomColuna: WideString): OleVariant; dispid 18;
    procedure FecharPesquisa; dispid 19;
    function NumeroRegistros: Integer; dispid 20;
    procedure Posicionar(NumPosicao: Integer); dispid 21;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 22;
    property ReprodutorMultiplo: IReprodutorMultiplo readonly dispid 25;
    function AdicionarTouros(CodReprodutorMultiplo: Integer; const CodAnimais: WideString; 
                             CodFazendaManejo: Integer; const CodAnimaisManejo: WideString; 
                             DtaInicioUso: TDateTime; DtaFimUso: TDateTime): Integer; dispid 23;
    function RetirarTouros(CodReprodutorMultiplo: Integer; const CodAnimais: WideString; 
                           CodFazendaManejo: Integer; const CodAnimaisManejo: WideString): Integer; dispid 24;
  end;

// *********************************************************************//
// Interface: IParametrosPesoAjustado
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63013854-7181-4EC4-A51D-92603452B99D}
// *********************************************************************//
  IParametrosPesoAjustado = interface(IDispatch)
    ['{63013854-7181-4EC4-A51D-92603452B99D}']
    function DefinirIdadesPadraoProdutor(NumIdadePadrao1: Integer; NumIdadePadrao2: Integer; 
                                         NumIdadePadrao3: Integer; NumIdadePadrao4: Integer; 
                                         NumIdadePadrao5: Integer; NumLimiteAjusteIdade: Integer; 
                                         NUmLimiteEquivaleIdade: Integer; 
                                         QtdIdadeMinimaPesagem: Integer): Integer; safecall;
    function DefinirIdadesPadraoAssociacao(CodAssociacao: Integer; NumIdadePadrao1: Integer; 
                                           NumIdadePadrao2: Integer; NumIdadePadrao3: Integer; 
                                           NumIdadePadrao4: Integer; NumIdadePadrao5: Integer; 
                                           NumLimiteAjusteIdade: Integer; 
                                           NUmLimiteEquivaleIdade: Integer): Integer; safecall;
    function BuscarDoProdutor: Integer; safecall;
    function BuscarDaAssociacao(CodPessoaAssociacao: Integer): Integer; safecall;
    function Get_CodPessoa: Integer; safecall;
    procedure Set_CodPessoa(Value: Integer); safecall;
    function Get_NomPessoa: WideString; safecall;
    procedure Set_NomPessoa(const Value: WideString); safecall;
    function Get_NumCNPJCPFFormatado: WideString; safecall;
    procedure Set_NumCNPJCPFFormatado(const Value: WideString); safecall;
    function Get_NumIdadePadrao1: Integer; safecall;
    procedure Set_NumIdadePadrao1(Value: Integer); safecall;
    function Get_NumIdadePadrao2: Integer; safecall;
    procedure Set_NumIdadePadrao2(Value: Integer); safecall;
    function Get_NumIdadePadrao3: Integer; safecall;
    procedure Set_NumIdadePadrao3(Value: Integer); safecall;
    function Get_NumIdadePadrao4: Integer; safecall;
    procedure Set_NumIdadePadrao4(Value: Integer); safecall;
    function Get_NumIdadePadrao5: Integer; safecall;
    procedure Set_NumIdadePadrao5(Value: Integer); safecall;
    function Get_NumLimiteAjusteIdade: Integer; safecall;
    procedure Set_NumLimiteAjusteIdade(Value: Integer); safecall;
    function Get_NUmLimiteEquivaleIdade: Integer; safecall;
    procedure Set_NUmLimiteEquivaleIdade(Value: Integer); safecall;
    function Get_QtdIdadeMinimaPesagem: Integer; safecall;
    procedure Set_QtdIdadeMinimaPesagem(Value: Integer); safecall;
    property CodPessoa: Integer read Get_CodPessoa write Set_CodPessoa;
    property NomPessoa: WideString read Get_NomPessoa write Set_NomPessoa;
    property NumCNPJCPFFormatado: WideString read Get_NumCNPJCPFFormatado write Set_NumCNPJCPFFormatado;
    property NumIdadePadrao1: Integer read Get_NumIdadePadrao1 write Set_NumIdadePadrao1;
    property NumIdadePadrao2: Integer read Get_NumIdadePadrao2 write Set_NumIdadePadrao2;
    property NumIdadePadrao3: Integer read Get_NumIdadePadrao3 write Set_NumIdadePadrao3;
    property NumIdadePadrao4: Integer read Get_NumIdadePadrao4 write Set_NumIdadePadrao4;
    property NumIdadePadrao5: Integer read Get_NumIdadePadrao5 write Set_NumIdadePadrao5;
    property NumLimiteAjusteIdade: Integer read Get_NumLimiteAjusteIdade write Set_NumLimiteAjusteIdade;
    property NUmLimiteEquivaleIdade: Integer read Get_NUmLimiteEquivaleIdade write Set_NUmLimiteEquivaleIdade;
    property QtdIdadeMinimaPesagem: Integer read Get_QtdIdadeMinimaPesagem write Set_QtdIdadeMinimaPesagem;
  end;

// *********************************************************************//
// DispIntf:  IParametrosPesoAjustadoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {63013854-7181-4EC4-A51D-92603452B99D}
// *********************************************************************//
  IParametrosPesoAjustadoDisp = dispinterface
    ['{63013854-7181-4EC4-A51D-92603452B99D}']
    function DefinirIdadesPadraoProdutor(NumIdadePadrao1: Integer; NumIdadePadrao2: Integer; 
                                         NumIdadePadrao3: Integer; NumIdadePadrao4: Integer; 
                                         NumIdadePadrao5: Integer; NumLimiteAjusteIdade: Integer; 
                                         NUmLimiteEquivaleIdade: Integer; 
                                         QtdIdadeMinimaPesagem: Integer): Integer; dispid 26;
    function DefinirIdadesPadraoAssociacao(CodAssociacao: Integer; NumIdadePadrao1: Integer; 
                                           NumIdadePadrao2: Integer; NumIdadePadrao3: Integer; 
                                           NumIdadePadrao4: Integer; NumIdadePadrao5: Integer; 
                                           NumLimiteAjusteIdade: Integer; 
                                           NUmLimiteEquivaleIdade: Integer): Integer; dispid 27;
    function BuscarDoProdutor: Integer; dispid 1;
    function BuscarDaAssociacao(CodPessoaAssociacao: Integer): Integer; dispid 2;
    property CodPessoa: Integer dispid 3;
    property NomPessoa: WideString dispid 4;
    property NumCNPJCPFFormatado: WideString dispid 5;
    property NumIdadePadrao1: Integer dispid 6;
    property NumIdadePadrao2: Integer dispid 7;
    property NumIdadePadrao3: Integer dispid 8;
    property NumIdadePadrao4: Integer dispid 9;
    property NumIdadePadrao5: Integer dispid 10;
    property NumLimiteAjusteIdade: Integer dispid 11;
    property NUmLimiteEquivaleIdade: Integer dispid 12;
    property QtdIdadeMinimaPesagem: Integer dispid 13;
  end;

// *********************************************************************//
// Interface: IModelosCertificado
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61FAF441-18FA-43CE-9673-7AABF71A527C}
// *********************************************************************//
  IModelosCertificado = interface(IDispatch)
    ['{61FAF441-18FA-43CE-9673-7AABF71A527C}']
    function Pesquisar: Integer; safecall;
    procedure FecharPesquisa; safecall;
    function ValorCampo(const NomColuna: WideString): OleVariant; safecall;
    procedure IrAoProximo; safecall;
    function EOF: WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IModelosCertificadoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {61FAF441-18FA-43CE-9673-7AABF71A527C}
// *********************************************************************//
  IModelosCertificadoDisp = dispinterface
    ['{61FAF441-18FA-43CE-9673-7AABF71A527C}']
    function Pesquisar: Integer; dispid 1;
    procedure FecharPesquisa; dispid 2;
    function ValorCampo(const NomColuna: WideString): OleVariant; dispid 3;
    procedure IrAoProximo; dispid 4;
    function EOF: WordBool; dispid 5;
  end;

// *********************************************************************//
// Interface: IImportacoes
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {84C186D8-4705-4E58-9F28-A07EAF237402}
// *********************************************************************//
  IImportacoes = interface(IDispatch)
    ['{84C186D8-4705-4E58-9F28-A07EAF237402}']
    function GerarArquivoParametro: Integer; safecall;
    function ArmazenarArquivoUpload(CodTipoOrigemArqImport: Integer; 
                                    const NomArquivoUpload: WideString): Integer; safecall;
    function Pesquisar(const NomArqUpload: WideString; DtaImportacaoInicio: TDateTime; 
                       DtaImportacaoFim: TDateTime; const NomUsuarioUpload: WideString; 
                       CodTipoOrigemArqImport: Integer; const CodSituacaoArqImport: WideString; 
                       DtaUltimoProcessamentoInicio: TDateTime; DtaUltimoProcessamentoFim: TDateTime): Integer; safecall;
    function Buscar(CodArquivoImportacao: Integer): Integer; safecall;
    function Get_Importacao: IImportacao; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomColuna: WideString): OleVariant; safecall;
    function EOF: WordBool; safecall;
    procedure FecharPesquisa; safecall;
    function PesquisarOcorrenciasProcessamento(CodArquivoImportacao: Integer; 
                                               CodTipoLinhaImportacao: Integer; 
                                               CodTipoMensagem: Integer): Integer; safecall;
    function ProcessarArquivo(CodArquivoImportacao: Integer; LinhaInicial: Integer; 
                              TempoMaximo: Integer): Integer; safecall;
    function Excluir(CodArquivoImportacao: Integer): Integer; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function BOF: WordBool; safecall;
    function ArmazenarArquivoAutenticacao(const NomArquivoUpload: WideString): Integer; safecall;
    function ProcessarAutenticacao(CodArquivoImportacao: Integer): Integer; safecall;
    function PesquisarOcorrenciasAutenticacao(CodArquivoImportacao: Integer; 
                                              CodTipoLinhaImportacao: Integer; 
                                              CodTipoMensagem: Integer): Integer; safecall;
    function PesquisarAutenticacao(DtaImportacaoInicio: TDateTime; DtaImportacaoFim: TDateTime; 
                                   DtaUltimoProcessamentoInicio: TDateTime; 
                                   DtaUltimoProcessamentoFim: TDateTime; 
                                   const LoginUsuario: WideString; 
                                   const IndErrosNoProcessamento: WideString; 
                                   const IndArquivoProcessado: WideString): Integer; safecall;
    function BuscarAutenticacao(CodArquivoImportacao: Integer): Integer; safecall;
    function ExcluirAutenticacao(CodArquivoImportacao: Integer): Integer; safecall;
    function PesquisarTipoArquivoImportacaoSisBov: Integer; safecall;
    property Importacao: IImportacao read Get_Importacao;
  end;

// *********************************************************************//
// DispIntf:  IImportacoesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {84C186D8-4705-4E58-9F28-A07EAF237402}
// *********************************************************************//
  IImportacoesDisp = dispinterface
    ['{84C186D8-4705-4E58-9F28-A07EAF237402}']
    function GerarArquivoParametro: Integer; dispid 1;
    function ArmazenarArquivoUpload(CodTipoOrigemArqImport: Integer; 
                                    const NomArquivoUpload: WideString): Integer; dispid 2;
    function Pesquisar(const NomArqUpload: WideString; DtaImportacaoInicio: TDateTime; 
                       DtaImportacaoFim: TDateTime; const NomUsuarioUpload: WideString; 
                       CodTipoOrigemArqImport: Integer; const CodSituacaoArqImport: WideString; 
                       DtaUltimoProcessamentoInicio: TDateTime; DtaUltimoProcessamentoFim: TDateTime): Integer; dispid 3;
    function Buscar(CodArquivoImportacao: Integer): Integer; dispid 4;
    property Importacao: IImportacao readonly dispid 5;
    procedure IrAoPrimeiro; dispid 6;
    procedure IrAoProximo; dispid 7;
    function ValorCampo(const NomColuna: WideString): OleVariant; dispid 8;
    function EOF: WordBool; dispid 9;
    procedure FecharPesquisa; dispid 10;
    function PesquisarOcorrenciasProcessamento(CodArquivoImportacao: Integer; 
                                               CodTipoLinhaImportacao: Integer; 
                                               CodTipoMensagem: Integer): Integer; dispid 11;
    function ProcessarArquivo(CodArquivoImportacao: Integer; LinhaInicial: Integer; 
                              TempoMaximo: Integer): Integer; dispid 12;
    function Excluir(CodArquivoImportacao: Integer): Integer; dispid 13;
    procedure IrAoUltimo; dispid 14;
    procedure IrAoAnterior; dispid 15;
    procedure Posicionar(NumRegistro: Integer); dispid 16;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 17;
    function NumeroRegistros: Integer; dispid 18;
    function BOF: WordBool; dispid 19;
    function ArmazenarArquivoAutenticacao(const NomArquivoUpload: WideString): Integer; dispid 20;
    function ProcessarAutenticacao(CodArquivoImportacao: Integer): Integer; dispid 21;
    function PesquisarOcorrenciasAutenticacao(CodArquivoImportacao: Integer; 
                                              CodTipoLinhaImportacao: Integer; 
                                              CodTipoMensagem: Integer): Integer; dispid 22;
    function PesquisarAutenticacao(DtaImportacaoInicio: TDateTime; DtaImportacaoFim: TDateTime; 
                                   DtaUltimoProcessamentoInicio: TDateTime; 
                                   DtaUltimoProcessamentoFim: TDateTime; 
                                   const LoginUsuario: WideString; 
                                   const IndErrosNoProcessamento: WideString; 
                                   const IndArquivoProcessado: WideString): Integer; dispid 23;
    function BuscarAutenticacao(CodArquivoImportacao: Integer): Integer; dispid 24;
    function ExcluirAutenticacao(CodArquivoImportacao: Integer): Integer; dispid 25;
    function PesquisarTipoArquivoImportacaoSisBov: Integer; dispid 26;
  end;

// *********************************************************************//
// Interface: IImportacao
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DF8115DF-6B49-4301-A4A6-736264AED05E}
// *********************************************************************//
  IImportacao = interface(IDispatch)
    ['{DF8115DF-6B49-4301-A4A6-736264AED05E}']
    function Get_CodPessoaProdutor: Integer; safecall;
    procedure Set_CodPessoaProdutor(Value: Integer); safecall;
    function Get_SglProdutor: WideString; safecall;
    procedure Set_SglProdutor(const Value: WideString); safecall;
    function Get_NomPessoaProdutor: WideString; safecall;
    procedure Set_NomPessoaProdutor(const Value: WideString); safecall;
    function Get_NumCNPJCPFFormatadoProdutor: WideString; safecall;
    procedure Set_NumCNPJCPFFormatadoProdutor(const Value: WideString); safecall;
    function Get_NomArquivoImportacao: WideString; safecall;
    procedure Set_NomArquivoImportacao(const Value: WideString); safecall;
    function Get_QtdVezesProcessamento: Integer; safecall;
    procedure Set_QtdVezesProcessamento(Value: Integer); safecall;
    function Get_DtaUltimoProcessamento: TDateTime; safecall;
    procedure Set_DtaUltimoProcessamento(Value: TDateTime); safecall;
    function Get_QtdRMTotal: Integer; safecall;
    procedure Set_QtdRMTotal(Value: Integer); safecall;
    function Get_QtdRMProcessados: Integer; safecall;
    procedure Set_QtdRMProcessados(Value: Integer); safecall;
    function Get_QtdAnimaisInsercaoTotal: Integer; safecall;
    procedure Set_QtdAnimaisInsercaoTotal(Value: Integer); safecall;
    function Get_QtdAnimaisInsercaoProcessados: Integer; safecall;
    procedure Set_QtdAnimaisInsercaoProcessados(Value: Integer); safecall;
    function Get_QtdAnimaisAlteracaoTotal: Integer; safecall;
    procedure Set_QtdAnimaisAlteracaoTotal(Value: Integer); safecall;
    function Get_QtdAnimaisAlteracaoProcessados: Integer; safecall;
    procedure Set_QtdAnimaisAlteracaoProcessados(Value: Integer); safecall;
    function Get_QtdTourosRMTotal: Integer; safecall;
    procedure Set_QtdTourosRMTotal(Value: Integer); safecall;
    function Get_QtdTourosRMProcessados: Integer; safecall;
    procedure Set_QtdTourosRMProcessados(Value: Integer); safecall;
    function Get_QtdEventosTotal: Integer; safecall;
    procedure Set_QtdEventosTotal(Value: Integer); safecall;
    function Get_QtdEventosProcessados: Integer; safecall;
    procedure Set_QtdEventosProcessados(Value: Integer); safecall;
    function Get_QtdAnimaisEventosTotal: Integer; safecall;
    procedure Set_QtdAnimaisEventosTotal(Value: Integer); safecall;
    function Get_QtdAnimaisEventosProcessados: Integer; safecall;
    procedure Set_QtdAnimaisEventosProcessados(Value: Integer); safecall;
    function Get_CodArquivoImportacao: Integer; safecall;
    procedure Set_CodArquivoImportacao(Value: Integer); safecall;
    function Get_DtaImportacao: TDateTime; safecall;
    procedure Set_DtaImportacao(Value: TDateTime); safecall;
    function Get_NomArquivoUpload: WideString; safecall;
    procedure Set_NomArquivoUpload(const Value: WideString); safecall;
    function Get_NomUsuarioUpload: WideString; safecall;
    procedure Set_NomUsuarioUpload(const Value: WideString); safecall;
    function Get_QtdOcorrencias: Integer; safecall;
    procedure Set_QtdOcorrencias(Value: Integer); safecall;
    function Get_QtdLinhas: Integer; safecall;
    procedure Set_QtdLinhas(Value: Integer); safecall;
    function Get_QtdRMErro: Integer; safecall;
    procedure Set_QtdRMErro(Value: Integer); safecall;
    function Get_QtdAnimaisInsercaoErro: Integer; safecall;
    procedure Set_QtdAnimaisInsercaoErro(Value: Integer); safecall;
    function Get_QtdAnimaisAlteracaoErro: Integer; safecall;
    procedure Set_QtdAnimaisAlteracaoErro(Value: Integer); safecall;
    function Get_QtdTourosRMErro: Integer; safecall;
    procedure Set_QtdTourosRMErro(Value: Integer); safecall;
    function Get_QtdEventosErro: Integer; safecall;
    procedure Set_QtdEventosErro(Value: Integer); safecall;
    function Get_QtdAnimaisEventosErro: Integer; safecall;
    procedure Set_QtdAnimaisEventosErro(Value: Integer); safecall;
    function Get_QtdCRacialTotal: Integer; safecall;
    procedure Set_QtdCRacialTotal(Value: Integer); safecall;
    function Get_QtdCRacialProcessados: Integer; safecall;
    procedure Set_QtdCRacialProcessados(Value: Integer); safecall;
    function Get_QtdCRacialErro: Integer; safecall;
    procedure Set_QtdCRacialErro(Value: Integer); safecall;
    function Get_CodTipoOrigemArqImport: Integer; safecall;
    procedure Set_CodTipoOrigemArqImport(Value: Integer); safecall;
    function Get_SglTipoOrigemArqImport: WideString; safecall;
    procedure Set_SglTipoOrigemArqImport(const Value: WideString); safecall;
    function Get_DesTipoOrigemArqImport: WideString; safecall;
    procedure Set_DesTipoOrigemArqImport(const Value: WideString); safecall;
    function Get_CodSituacaoArqImport: WideString; safecall;
    procedure Set_CodSituacaoArqImport(const Value: WideString); safecall;
    function Get_DesSituacaoArqImport: WideString; safecall;
    procedure Set_DesSituacaoArqImport(const Value: WideString); safecall;
    function Get_CodUsuarioUpload: Integer; safecall;
    procedure Set_CodUsuarioUpload(Value: Integer); safecall;
    function Get_CodUltimaTarefa: Integer; safecall;
    procedure Set_CodUltimaTarefa(Value: Integer); safecall;
    function Get_CodSituacaoUltimaTarefa: WideString; safecall;
    procedure Set_CodSituacaoUltimaTarefa(const Value: WideString); safecall;
    function Get_DesSituacaoUltimaTarefa: WideString; safecall;
    procedure Set_DesSituacaoUltimaTarefa(const Value: WideString); safecall;
    function Get_DtaInicioPrevistoUltimaTarefa: TDateTime; safecall;
    procedure Set_DtaInicioPrevistoUltimaTarefa(Value: TDateTime); safecall;
    function Get_DtaInicioRealUltimaTarefa: TDateTime; safecall;
    procedure Set_DtaInicioRealUltimaTarefa(Value: TDateTime); safecall;
    function Get_DtaFimRealUltimaTarefa: TDateTime; safecall;
    procedure Set_DtaFimRealUltimaTarefa(Value: TDateTime); safecall;
    function Get_QtdInventariosAnimaisTotal: Integer; safecall;
    procedure Set_QtdInventariosAnimaisTotal(Value: Integer); safecall;
    function Get_QtdInventariosAnimaisProcessados: Integer; safecall;
    procedure Set_QtdInventariosAnimaisProcessados(Value: Integer); safecall;
    function Get_QtdInventariosAnimaisErro: Integer; safecall;
    procedure Set_QtdInventariosAnimaisErro(Value: Integer); safecall;
    property CodPessoaProdutor: Integer read Get_CodPessoaProdutor write Set_CodPessoaProdutor;
    property SglProdutor: WideString read Get_SglProdutor write Set_SglProdutor;
    property NomPessoaProdutor: WideString read Get_NomPessoaProdutor write Set_NomPessoaProdutor;
    property NumCNPJCPFFormatadoProdutor: WideString read Get_NumCNPJCPFFormatadoProdutor write Set_NumCNPJCPFFormatadoProdutor;
    property NomArquivoImportacao: WideString read Get_NomArquivoImportacao write Set_NomArquivoImportacao;
    property QtdVezesProcessamento: Integer read Get_QtdVezesProcessamento write Set_QtdVezesProcessamento;
    property DtaUltimoProcessamento: TDateTime read Get_DtaUltimoProcessamento write Set_DtaUltimoProcessamento;
    property QtdRMTotal: Integer read Get_QtdRMTotal write Set_QtdRMTotal;
    property QtdRMProcessados: Integer read Get_QtdRMProcessados write Set_QtdRMProcessados;
    property QtdAnimaisInsercaoTotal: Integer read Get_QtdAnimaisInsercaoTotal write Set_QtdAnimaisInsercaoTotal;
    property QtdAnimaisInsercaoProcessados: Integer read Get_QtdAnimaisInsercaoProcessados write Set_QtdAnimaisInsercaoProcessados;
    property QtdAnimaisAlteracaoTotal: Integer read Get_QtdAnimaisAlteracaoTotal write Set_QtdAnimaisAlteracaoTotal;
    property QtdAnimaisAlteracaoProcessados: Integer read Get_QtdAnimaisAlteracaoProcessados write Set_QtdAnimaisAlteracaoProcessados;
    property QtdTourosRMTotal: Integer read Get_QtdTourosRMTotal write Set_QtdTourosRMTotal;
    property QtdTourosRMProcessados: Integer read Get_QtdTourosRMProcessados write Set_QtdTourosRMProcessados;
    property QtdEventosTotal: Integer read Get_QtdEventosTotal write Set_QtdEventosTotal;
    property QtdEventosProcessados: Integer read Get_QtdEventosProcessados write Set_QtdEventosProcessados;
    property QtdAnimaisEventosTotal: Integer read Get_QtdAnimaisEventosTotal write Set_QtdAnimaisEventosTotal;
    property QtdAnimaisEventosProcessados: Integer read Get_QtdAnimaisEventosProcessados write Set_QtdAnimaisEventosProcessados;
    property CodArquivoImportacao: Integer read Get_CodArquivoImportacao write Set_CodArquivoImportacao;
    property DtaImportacao: TDateTime read Get_DtaImportacao write Set_DtaImportacao;
    property NomArquivoUpload: WideString read Get_NomArquivoUpload write Set_NomArquivoUpload;
    property NomUsuarioUpload: WideString read Get_NomUsuarioUpload write Set_NomUsuarioUpload;
    property QtdOcorrencias: Integer read Get_QtdOcorrencias write Set_QtdOcorrencias;
    property QtdLinhas: Integer read Get_QtdLinhas write Set_QtdLinhas;
    property QtdRMErro: Integer read Get_QtdRMErro write Set_QtdRMErro;
    property QtdAnimaisInsercaoErro: Integer read Get_QtdAnimaisInsercaoErro write Set_QtdAnimaisInsercaoErro;
    property QtdAnimaisAlteracaoErro: Integer read Get_QtdAnimaisAlteracaoErro write Set_QtdAnimaisAlteracaoErro;
    property QtdTourosRMErro: Integer read Get_QtdTourosRMErro write Set_QtdTourosRMErro;
    property QtdEventosErro: Integer read Get_QtdEventosErro write Set_QtdEventosErro;
    property QtdAnimaisEventosErro: Integer read Get_QtdAnimaisEventosErro write Set_QtdAnimaisEventosErro;
    property QtdCRacialTotal: Integer read Get_QtdCRacialTotal write Set_QtdCRacialTotal;
    property QtdCRacialProcessados: Integer read Get_QtdCRacialProcessados write Set_QtdCRacialProcessados;
    property QtdCRacialErro: Integer read Get_QtdCRacialErro write Set_QtdCRacialErro;
    property CodTipoOrigemArqImport: Integer read Get_CodTipoOrigemArqImport write Set_CodTipoOrigemArqImport;
    property SglTipoOrigemArqImport: WideString read Get_SglTipoOrigemArqImport write Set_SglTipoOrigemArqImport;
    property DesTipoOrigemArqImport: WideString read Get_DesTipoOrigemArqImport write Set_DesTipoOrigemArqImport;
    property CodSituacaoArqImport: WideString read Get_CodSituacaoArqImport write Set_CodSituacaoArqImport;
    property DesSituacaoArqImport: WideString read Get_DesSituacaoArqImport write Set_DesSituacaoArqImport;
    property CodUsuarioUpload: Integer read Get_CodUsuarioUpload write Set_CodUsuarioUpload;
    property CodUltimaTarefa: Integer read Get_CodUltimaTarefa write Set_CodUltimaTarefa;
    property CodSituacaoUltimaTarefa: WideString read Get_CodSituacaoUltimaTarefa write Set_CodSituacaoUltimaTarefa;
    property DesSituacaoUltimaTarefa: WideString read Get_DesSituacaoUltimaTarefa write Set_DesSituacaoUltimaTarefa;
    property DtaInicioPrevistoUltimaTarefa: TDateTime read Get_DtaInicioPrevistoUltimaTarefa write Set_DtaInicioPrevistoUltimaTarefa;
    property DtaInicioRealUltimaTarefa: TDateTime read Get_DtaInicioRealUltimaTarefa write Set_DtaInicioRealUltimaTarefa;
    property DtaFimRealUltimaTarefa: TDateTime read Get_DtaFimRealUltimaTarefa write Set_DtaFimRealUltimaTarefa;
    property QtdInventariosAnimaisTotal: Integer read Get_QtdInventariosAnimaisTotal write Set_QtdInventariosAnimaisTotal;
    property QtdInventariosAnimaisProcessados: Integer read Get_QtdInventariosAnimaisProcessados write Set_QtdInventariosAnimaisProcessados;
    property QtdInventariosAnimaisErro: Integer read Get_QtdInventariosAnimaisErro write Set_QtdInventariosAnimaisErro;
  end;

// *********************************************************************//
// DispIntf:  IImportacaoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DF8115DF-6B49-4301-A4A6-736264AED05E}
// *********************************************************************//
  IImportacaoDisp = dispinterface
    ['{DF8115DF-6B49-4301-A4A6-736264AED05E}']
    property CodPessoaProdutor: Integer dispid 1;
    property SglProdutor: WideString dispid 2;
    property NomPessoaProdutor: WideString dispid 3;
    property NumCNPJCPFFormatadoProdutor: WideString dispid 4;
    property NomArquivoImportacao: WideString dispid 5;
    property QtdVezesProcessamento: Integer dispid 6;
    property DtaUltimoProcessamento: TDateTime dispid 7;
    property QtdRMTotal: Integer dispid 8;
    property QtdRMProcessados: Integer dispid 9;
    property QtdAnimaisInsercaoTotal: Integer dispid 10;
    property QtdAnimaisInsercaoProcessados: Integer dispid 11;
    property QtdAnimaisAlteracaoTotal: Integer dispid 12;
    property QtdAnimaisAlteracaoProcessados: Integer dispid 13;
    property QtdTourosRMTotal: Integer dispid 14;
    property QtdTourosRMProcessados: Integer dispid 15;
    property QtdEventosTotal: Integer dispid 16;
    property QtdEventosProcessados: Integer dispid 17;
    property QtdAnimaisEventosTotal: Integer dispid 18;
    property QtdAnimaisEventosProcessados: Integer dispid 19;
    property CodArquivoImportacao: Integer dispid 20;
    property DtaImportacao: TDateTime dispid 21;
    property NomArquivoUpload: WideString dispid 22;
    property NomUsuarioUpload: WideString dispid 23;
    property QtdOcorrencias: Integer dispid 25;
    property QtdLinhas: Integer dispid 26;
    property QtdRMErro: Integer dispid 27;
    property QtdAnimaisInsercaoErro: Integer dispid 28;
    property QtdAnimaisAlteracaoErro: Integer dispid 29;
    property QtdTourosRMErro: Integer dispid 30;
    property QtdEventosErro: Integer dispid 31;
    property QtdAnimaisEventosErro: Integer dispid 32;
    property QtdCRacialTotal: Integer dispid 33;
    property QtdCRacialProcessados: Integer dispid 34;
    property QtdCRacialErro: Integer dispid 35;
    property CodTipoOrigemArqImport: Integer dispid 24;
    property SglTipoOrigemArqImport: WideString dispid 36;
    property DesTipoOrigemArqImport: WideString dispid 37;
    property CodSituacaoArqImport: WideString dispid 38;
    property DesSituacaoArqImport: WideString dispid 39;
    property CodUsuarioUpload: Integer dispid 40;
    property CodUltimaTarefa: Integer dispid 41;
    property CodSituacaoUltimaTarefa: WideString dispid 42;
    property DesSituacaoUltimaTarefa: WideString dispid 43;
    property DtaInicioPrevistoUltimaTarefa: TDateTime dispid 44;
    property DtaInicioRealUltimaTarefa: TDateTime dispid 45;
    property DtaFimRealUltimaTarefa: TDateTime dispid 46;
    property QtdInventariosAnimaisTotal: Integer dispid 201;
    property QtdInventariosAnimaisProcessados: Integer dispid 202;
    property QtdInventariosAnimaisErro: Integer dispid 203;
  end;

// *********************************************************************//
// Interface: ITipoAgrupamentoRacas
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {10081832-3D3D-4F91-8068-D56DE4817350}
// *********************************************************************//
  ITipoAgrupamentoRacas = interface(IDispatch)
    ['{10081832-3D3D-4F91-8068-D56DE4817350}']
    function Get_CodTipoAgrupamentoRacas: Integer; safecall;
    procedure Set_CodTipoAgrupamentoRacas(Value: Integer); safecall;
    function Get_SglTipoAgrupamentoRacas: WideString; safecall;
    procedure Set_SglTipoAgrupamentoRacas(const Value: WideString); safecall;
    function Get_DesTipoAgrupamentoRacas: WideString; safecall;
    procedure Set_DesTipoAgrupamentoRacas(const Value: WideString); safecall;
    property CodTipoAgrupamentoRacas: Integer read Get_CodTipoAgrupamentoRacas write Set_CodTipoAgrupamentoRacas;
    property SglTipoAgrupamentoRacas: WideString read Get_SglTipoAgrupamentoRacas write Set_SglTipoAgrupamentoRacas;
    property DesTipoAgrupamentoRacas: WideString read Get_DesTipoAgrupamentoRacas write Set_DesTipoAgrupamentoRacas;
  end;

// *********************************************************************//
// DispIntf:  ITipoAgrupamentoRacasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {10081832-3D3D-4F91-8068-D56DE4817350}
// *********************************************************************//
  ITipoAgrupamentoRacasDisp = dispinterface
    ['{10081832-3D3D-4F91-8068-D56DE4817350}']
    property CodTipoAgrupamentoRacas: Integer dispid 1;
    property SglTipoAgrupamentoRacas: WideString dispid 2;
    property DesTipoAgrupamentoRacas: WideString dispid 3;
  end;

// *********************************************************************//
// Interface: ITiposAgrupamentoRacas
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {186EC668-F661-4DEC-9884-7F29ED603396}
// *********************************************************************//
  ITiposAgrupamentoRacas = interface(IDispatch)
    ['{186EC668-F661-4DEC-9884-7F29ED603396}']
    function Buscar(CodTipoAgrupamentoRacas: Integer): Integer; safecall;
    function Inserir(const SglTipoAgrupamentoRacas: WideString; 
                     const DesTipoAgrupamentoRacas: WideString): Integer; safecall;
    function Alterar(CodTipoAgrupamentoRacas: Integer; const SglTipoAgrupamentoRacas: WideString; 
                     const DesTipoAgrupamentoRacas: WideString): Integer; safecall;
    function Excluir(CodTipoAgrupamentoRacas: Integer): Integer; safecall;
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure IrAoAnterior; safecall;
    procedure Deslocar(NumDeslocamento: Integer); safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    procedure FecharPesquisa; safecall;
    function Get_TipoAgrupamentoRacas: ITipoAgrupamentoRacas; safecall;
    property TipoAgrupamentoRacas: ITipoAgrupamentoRacas read Get_TipoAgrupamentoRacas;
  end;

// *********************************************************************//
// DispIntf:  ITiposAgrupamentoRacasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {186EC668-F661-4DEC-9884-7F29ED603396}
// *********************************************************************//
  ITiposAgrupamentoRacasDisp = dispinterface
    ['{186EC668-F661-4DEC-9884-7F29ED603396}']
    function Buscar(CodTipoAgrupamentoRacas: Integer): Integer; dispid 1;
    function Inserir(const SglTipoAgrupamentoRacas: WideString; 
                     const DesTipoAgrupamentoRacas: WideString): Integer; dispid 2;
    function Alterar(CodTipoAgrupamentoRacas: Integer; const SglTipoAgrupamentoRacas: WideString; 
                     const DesTipoAgrupamentoRacas: WideString): Integer; dispid 3;
    function Excluir(CodTipoAgrupamentoRacas: Integer): Integer; dispid 4;
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 5;
    function BOF: WordBool; dispid 6;
    function EOF: WordBool; dispid 7;
    function NumeroRegistros: Integer; dispid 8;
    procedure IrAoPrimeiro; dispid 9;
    procedure IrAoUltimo; dispid 10;
    procedure IrAoProximo; dispid 11;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 12;
    procedure IrAoAnterior; dispid 13;
    procedure Deslocar(NumDeslocamento: Integer); dispid 14;
    procedure Posicionar(NumPosicao: Integer); dispid 15;
    procedure FecharPesquisa; dispid 16;
    property TipoAgrupamentoRacas: ITipoAgrupamentoRacas readonly dispid 17;
  end;

// *********************************************************************//
// Interface: IAgrupamentoRacas
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DD0F4494-65B8-42D4-8273-B88AF4E336F7}
// *********************************************************************//
  IAgrupamentoRacas = interface(IDispatch)
    ['{DD0F4494-65B8-42D4-8273-B88AF4E336F7}']
    function Get_CodAgrupamentoRacas: Integer; safecall;
    procedure Set_CodAgrupamentoRacas(Value: Integer); safecall;
    function Get_SglAgrupamentoRacas: WideString; safecall;
    procedure Set_SglAgrupamentoRacas(const Value: WideString); safecall;
    function Get_DesAgrupamentoRacas: WideString; safecall;
    procedure Set_DesAgrupamentoRacas(const Value: WideString); safecall;
    property CodAgrupamentoRacas: Integer read Get_CodAgrupamentoRacas write Set_CodAgrupamentoRacas;
    property SglAgrupamentoRacas: WideString read Get_SglAgrupamentoRacas write Set_SglAgrupamentoRacas;
    property DesAgrupamentoRacas: WideString read Get_DesAgrupamentoRacas write Set_DesAgrupamentoRacas;
  end;

// *********************************************************************//
// DispIntf:  IAgrupamentoRacasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DD0F4494-65B8-42D4-8273-B88AF4E336F7}
// *********************************************************************//
  IAgrupamentoRacasDisp = dispinterface
    ['{DD0F4494-65B8-42D4-8273-B88AF4E336F7}']
    property CodAgrupamentoRacas: Integer dispid 1;
    property SglAgrupamentoRacas: WideString dispid 2;
    property DesAgrupamentoRacas: WideString dispid 3;
  end;

// *********************************************************************//
// Interface: IAgrupamentosRacas
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E472824-DBFB-487F-A5FD-CAC409EFA38B}
// *********************************************************************//
  IAgrupamentosRacas = interface(IDispatch)
    ['{7E472824-DBFB-487F-A5FD-CAC409EFA38B}']
    function Buscar(CodAgrupamentoRacas: Integer): Integer; safecall;
    function Inserir(CodTipoAgrupamentoRacas: Integer; const SglAgrupamentoRacas: WideString; 
                     const DesAgrupamentoRacas: WideString): Integer; safecall;
    function Alterar(CodAgrupamentoRacas: Integer; const SglAgrupamentoRacas: WideString; 
                     const DesAgrupamentoRacas: WideString): Integer; safecall;
    function Excluir(CodAgrupamentoRacas: Integer): Integer; safecall;
    function AdicionarRaca(CodAgrupamentoRacas: Integer; CodRaca: Integer; QtdFracaoRaca: Double): Integer; safecall;
    function RetirarRaca(CodAgrupamentoRaca: Integer; CodRaca: Integer): Integer; safecall;
    function PesquisarRacas(CodAgrupamentoRacas: Integer; const IndRacasNoAgrupamento: WideString; 
                            const CodOrdenacao: WideString): Integer; safecall;
    function Pesquisar(CodTipoAgrupamento: Integer; const IndDetalharRacas: WideString; 
                       const CodOrdenacao: WideString): Integer; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    function ValorCampo(const ValorCampo: WideString): OleVariant; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    procedure Deslocar(NumDeslocamento: Integer); safecall;
    procedure FecharPesquisa; safecall;
    function Get_AgrupamentoRacas: IAgrupamentoRacas; safecall;
    property AgrupamentoRacas: IAgrupamentoRacas read Get_AgrupamentoRacas;
  end;

// *********************************************************************//
// DispIntf:  IAgrupamentosRacasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E472824-DBFB-487F-A5FD-CAC409EFA38B}
// *********************************************************************//
  IAgrupamentosRacasDisp = dispinterface
    ['{7E472824-DBFB-487F-A5FD-CAC409EFA38B}']
    function Buscar(CodAgrupamentoRacas: Integer): Integer; dispid 1;
    function Inserir(CodTipoAgrupamentoRacas: Integer; const SglAgrupamentoRacas: WideString; 
                     const DesAgrupamentoRacas: WideString): Integer; dispid 2;
    function Alterar(CodAgrupamentoRacas: Integer; const SglAgrupamentoRacas: WideString; 
                     const DesAgrupamentoRacas: WideString): Integer; dispid 3;
    function Excluir(CodAgrupamentoRacas: Integer): Integer; dispid 4;
    function AdicionarRaca(CodAgrupamentoRacas: Integer; CodRaca: Integer; QtdFracaoRaca: Double): Integer; dispid 5;
    function RetirarRaca(CodAgrupamentoRaca: Integer; CodRaca: Integer): Integer; dispid 6;
    function PesquisarRacas(CodAgrupamentoRacas: Integer; const IndRacasNoAgrupamento: WideString; 
                            const CodOrdenacao: WideString): Integer; dispid 7;
    function Pesquisar(CodTipoAgrupamento: Integer; const IndDetalharRacas: WideString; 
                       const CodOrdenacao: WideString): Integer; dispid 8;
    function BOF: WordBool; dispid 9;
    function EOF: WordBool; dispid 10;
    function NumeroRegistros: Integer; dispid 11;
    procedure IrAoPrimeiro; dispid 12;
    procedure IrAoUltimo; dispid 13;
    procedure IrAoProximo; dispid 14;
    procedure IrAoAnterior; dispid 15;
    function ValorCampo(const ValorCampo: WideString): OleVariant; dispid 16;
    procedure Posicionar(NumPosicao: Integer); dispid 17;
    procedure Deslocar(NumDeslocamento: Integer); dispid 18;
    procedure FecharPesquisa; dispid 19;
    property AgrupamentoRacas: IAgrupamentoRacas readonly dispid 20;
  end;

// *********************************************************************//
// Interface: ITarefa
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B24C4EAF-9543-4E37-B825-6F7E24AD2AE8}
// *********************************************************************//
  ITarefa = interface(IDispatch)
    ['{B24C4EAF-9543-4E37-B825-6F7E24AD2AE8}']
    function Get_CodTarefa: Integer; safecall;
    procedure Set_CodTarefa(Value: Integer); safecall;
    function Get_CodTipoTarefa: Integer; safecall;
    procedure Set_CodTipoTarefa(Value: Integer); safecall;
    function Get_DtaAgendamento: TDateTime; safecall;
    procedure Set_DtaAgendamento(Value: TDateTime); safecall;
    function Get_DtaInicioPrevisto: TDateTime; safecall;
    procedure Set_DtaInicioPrevisto(Value: TDateTime); safecall;
    function Get_DtaInicioReal: TDateTime; safecall;
    procedure Set_DtaInicioReal(Value: TDateTime); safecall;
    function Get_DtaFimReal: TDateTime; safecall;
    procedure Set_DtaFimReal(Value: TDateTime); safecall;
    function Get_CodSituacaoTarefa: WideString; safecall;
    procedure Set_CodSituacaoTarefa(const Value: WideString); safecall;
    function Get_DesSituacaoTarefa: WideString; safecall;
    procedure Set_DesSituacaoTarefa(const Value: WideString); safecall;
    function Get_QtdProgresso: Integer; safecall;
    procedure Set_QtdProgresso(Value: Integer); safecall;
    function Get_TxtMensagemErro: WideString; safecall;
    procedure Set_TxtMensagemErro(const Value: WideString); safecall;
    function Get_IndPermiteCancelamento: WideString; safecall;
    procedure Set_IndPermiteCancelamento(const Value: WideString); safecall;
    function Get_NomArqUpload: WideString; safecall;
    procedure Set_NomArqUpload(const Value: WideString); safecall;
    function Get_CodTipoOrigemArqImport: Integer; safecall;
    procedure Set_CodTipoOrigemArqImport(Value: Integer); safecall;
    function Get_SglTipoOrigemArqImport: WideString; safecall;
    procedure Set_SglTipoOrigemArqImport(const Value: WideString); safecall;
    function Get_DesTipoOrigemArqImport: WideString; safecall;
    procedure Set_DesTipoOrigemArqImport(const Value: WideString); safecall;
    function Get_NomArqRelatorio: WideString; safecall;
    procedure Set_NomArqRelatorio(const Value: WideString); safecall;
    property CodTarefa: Integer read Get_CodTarefa write Set_CodTarefa;
    property CodTipoTarefa: Integer read Get_CodTipoTarefa write Set_CodTipoTarefa;
    property DtaAgendamento: TDateTime read Get_DtaAgendamento write Set_DtaAgendamento;
    property DtaInicioPrevisto: TDateTime read Get_DtaInicioPrevisto write Set_DtaInicioPrevisto;
    property DtaInicioReal: TDateTime read Get_DtaInicioReal write Set_DtaInicioReal;
    property DtaFimReal: TDateTime read Get_DtaFimReal write Set_DtaFimReal;
    property CodSituacaoTarefa: WideString read Get_CodSituacaoTarefa write Set_CodSituacaoTarefa;
    property DesSituacaoTarefa: WideString read Get_DesSituacaoTarefa write Set_DesSituacaoTarefa;
    property QtdProgresso: Integer read Get_QtdProgresso write Set_QtdProgresso;
    property TxtMensagemErro: WideString read Get_TxtMensagemErro write Set_TxtMensagemErro;
    property IndPermiteCancelamento: WideString read Get_IndPermiteCancelamento write Set_IndPermiteCancelamento;
    property NomArqUpload: WideString read Get_NomArqUpload write Set_NomArqUpload;
    property CodTipoOrigemArqImport: Integer read Get_CodTipoOrigemArqImport write Set_CodTipoOrigemArqImport;
    property SglTipoOrigemArqImport: WideString read Get_SglTipoOrigemArqImport write Set_SglTipoOrigemArqImport;
    property DesTipoOrigemArqImport: WideString read Get_DesTipoOrigemArqImport write Set_DesTipoOrigemArqImport;
    property NomArqRelatorio: WideString read Get_NomArqRelatorio write Set_NomArqRelatorio;
  end;

// *********************************************************************//
// DispIntf:  ITarefaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B24C4EAF-9543-4E37-B825-6F7E24AD2AE8}
// *********************************************************************//
  ITarefaDisp = dispinterface
    ['{B24C4EAF-9543-4E37-B825-6F7E24AD2AE8}']
    property CodTarefa: Integer dispid 1;
    property CodTipoTarefa: Integer dispid 2;
    property DtaAgendamento: TDateTime dispid 4;
    property DtaInicioPrevisto: TDateTime dispid 5;
    property DtaInicioReal: TDateTime dispid 6;
    property DtaFimReal: TDateTime dispid 7;
    property CodSituacaoTarefa: WideString dispid 8;
    property DesSituacaoTarefa: WideString dispid 9;
    property QtdProgresso: Integer dispid 10;
    property TxtMensagemErro: WideString dispid 11;
    property IndPermiteCancelamento: WideString dispid 12;
    property NomArqUpload: WideString dispid 3;
    property CodTipoOrigemArqImport: Integer dispid 13;
    property SglTipoOrigemArqImport: WideString dispid 14;
    property DesTipoOrigemArqImport: WideString dispid 15;
    property NomArqRelatorio: WideString dispid 201;
  end;

// *********************************************************************//
// Interface: ITarefas
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C2611AAA-8CE5-418A-A275-5851A24264AF}
// *********************************************************************//
  ITarefas = interface(IDispatch)
    ['{C2611AAA-8CE5-418A-A275-5851A24264AF}']
    function Get_Tarefa: ITarefa; safecall;
    function cancelar(CodTarefa: Integer): Integer; safecall;
    function Buscar(CodTarefa: Integer): Integer; safecall;
    function Pesquisar(DtaAgendamentoInicio: TDateTime; DtaAgendamentoFim: TDateTime; 
                       QtdDiasConclusao: Integer; const CodSituacaoTarefa: WideString; 
                       const NomUsuario: WideString; const NomArqUpload: WideString; 
                       CodTipoOrigemArqImport: Integer): Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoUltimo; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    function ValorCampo(const NomColuna: WideString): OleVariant; safecall;
    property Tarefa: ITarefa read Get_Tarefa;
  end;

// *********************************************************************//
// DispIntf:  ITarefasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C2611AAA-8CE5-418A-A275-5851A24264AF}
// *********************************************************************//
  ITarefasDisp = dispinterface
    ['{C2611AAA-8CE5-418A-A275-5851A24264AF}']
    property Tarefa: ITarefa readonly dispid 1;
    function cancelar(CodTarefa: Integer): Integer; dispid 2;
    function Buscar(CodTarefa: Integer): Integer; dispid 3;
    function Pesquisar(DtaAgendamentoInicio: TDateTime; DtaAgendamentoFim: TDateTime; 
                       QtdDiasConclusao: Integer; const CodSituacaoTarefa: WideString; 
                       const NomUsuario: WideString; const NomArqUpload: WideString; 
                       CodTipoOrigemArqImport: Integer): Integer; dispid 4;
    procedure IrAoPrimeiro; dispid 5;
    procedure IrAoAnterior; dispid 6;
    procedure IrAoProximo; dispid 7;
    procedure IrAoUltimo; dispid 8;
    function BOF: WordBool; dispid 9;
    function EOF: WordBool; dispid 10;
    procedure Posicionar(NumRegistro: Integer); dispid 11;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 12;
    function NumeroRegistros: Integer; dispid 13;
    function ValorCampo(const NomColuna: WideString): OleVariant; dispid 14;
  end;

// *********************************************************************//
// Interface: ISituacoesTarefa
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {281F58CE-CD9F-446F-AB8C-C47BA37061D4}
// *********************************************************************//
  ISituacoesTarefa = interface(IDispatch)
    ['{281F58CE-CD9F-446F-AB8C-C47BA37061D4}']
    function Pesquisar: Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  ISituacoesTarefaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {281F58CE-CD9F-446F-AB8C-C47BA37061D4}
// *********************************************************************//
  ISituacoesTarefaDisp = dispinterface
    ['{281F58CE-CD9F-446F-AB8C-C47BA37061D4}']
    function Pesquisar: Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
  end;

// *********************************************************************//
// Interface: IMovimentoEstoqueSemen
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {85981B38-210A-4B1C-AFFD-35F24A4C7B75}
// *********************************************************************//
  IMovimentoEstoqueSemen = interface(IDispatch)
    ['{85981B38-210A-4B1C-AFFD-35F24A4C7B75}']
    function Get_CodMovimento: Integer; safecall;
    procedure Set_CodMovimento(Value: Integer); safecall;
    function Get_CodFazenda: Integer; safecall;
    procedure Set_CodFazenda(Value: Integer); safecall;
    function Get_SglFazenda: WideString; safecall;
    procedure Set_SglFazenda(const Value: WideString); safecall;
    function Get_NomFazenda: WideString; safecall;
    procedure Set_NomFazenda(const Value: WideString); safecall;
    function Get_CodAnimal: Integer; safecall;
    procedure Set_CodAnimal(Value: Integer); safecall;
    function Get_SglFazendaManejo: WideString; safecall;
    procedure Set_SglFazendaManejo(const Value: WideString); safecall;
    function Get_CodAnimalManejo: WideString; safecall;
    procedure Set_CodAnimalManejo(const Value: WideString); safecall;
    function Get_NumPartida: WideString; safecall;
    procedure Set_NumPartida(const Value: WideString); safecall;
    function Get_DtaMovimento: TDateTime; safecall;
    procedure Set_DtaMovimento(Value: TDateTime); safecall;
    function Get_CodTipoMovEstoqueSemen: Integer; safecall;
    procedure Set_CodTipoMovEstoqueSemen(Value: Integer); safecall;
    function Get_SglTipoMovEstoqueSemen: WideString; safecall;
    procedure Set_SglTipoMovEstoqueSemen(const Value: WideString); safecall;
    function Get_DesTipoMovEstoqueSemen: WideString; safecall;
    procedure Set_DesTipoMovEstoqueSemen(const Value: WideString); safecall;
    function Get_CodPessoaSecundaria: Integer; safecall;
    procedure Set_CodPessoaSecundaria(Value: Integer); safecall;
    function Get_NomPessoaSecundaria: WideString; safecall;
    procedure Set_NomPessoaSecundaria(const Value: WideString); safecall;
    function Get_NumCNPJCPFPessoaSecundaria: WideString; safecall;
    procedure Set_NumCNPJCPFPessoaSecundaria(const Value: WideString); safecall;
    function Get_CodFazendaRelacionada: Integer; safecall;
    procedure Set_CodFazendaRelacionada(Value: Integer); safecall;
    function Get_SglFazendaRelacionada: WideString; safecall;
    procedure Set_SglFazendaRelacionada(const Value: WideString); safecall;
    function Get_NomFazendaRelacionada: WideString; safecall;
    procedure Set_NomFazendaRelacionada(const Value: WideString); safecall;
    function Get_CodAnimalFemea: Integer; safecall;
    procedure Set_CodAnimalFemea(Value: Integer); safecall;
    function Get_SglFazendaManejoFemea: WideString; safecall;
    procedure Set_SglFazendaManejoFemea(const Value: WideString); safecall;
    function Get_CodAnimalManejoFemea: WideString; safecall;
    procedure Set_CodAnimalManejoFemea(const Value: WideString); safecall;
    function Get_QtdDosesSemenApto: Integer; safecall;
    procedure Set_QtdDosesSemenApto(Value: Integer); safecall;
    function Get_QtdDosesSemenInapto: Integer; safecall;
    procedure Set_QtdDosesSemenInapto(Value: Integer); safecall;
    function Get_TxtObservacao: WideString; safecall;
    procedure Set_TxtObservacao(const Value: WideString); safecall;
    function Get_DtaCadastramento: TDateTime; safecall;
    procedure Set_DtaCadastramento(Value: TDateTime); safecall;
    function Get_CodUsuario: Integer; safecall;
    procedure Set_CodUsuario(Value: Integer); safecall;
    function Get_NomUsuario: WideString; safecall;
    procedure Set_NomUsuario(const Value: WideString); safecall;
    function Get_CodOperacaoMovEstoqueApto: WideString; safecall;
    procedure Set_CodOperacaoMovEstoqueApto(const Value: WideString); safecall;
    function Get_DesOperacaoMovEstoqueApto: WideString; safecall;
    procedure Set_DesOperacaoMovEstoqueApto(const Value: WideString); safecall;
    function Get_CodOperacaoMovEstoqueInapto: WideString; safecall;
    procedure Set_CodOperacaoMovEstoqueInapto(const Value: WideString); safecall;
    function Get_DesOperacaoMovEstoqueInapto: WideString; safecall;
    procedure Set_DesOperacaoMovEstoqueInapto(const Value: WideString); safecall;
    function Get_IndMovimentoEstorno: WideString; safecall;
    procedure Set_IndMovimentoEstorno(const Value: WideString); safecall;
    function Get_SeqMovimento: Integer; safecall;
    procedure Set_SeqMovimento(Value: Integer); safecall;
    function Get_NomAnimal: WideString; safecall;
    procedure Set_NomAnimal(const Value: WideString); safecall;
    function Get_DesApelido: WideString; safecall;
    procedure Set_DesApelido(const Value: WideString); safecall;
    property CodMovimento: Integer read Get_CodMovimento write Set_CodMovimento;
    property CodFazenda: Integer read Get_CodFazenda write Set_CodFazenda;
    property SglFazenda: WideString read Get_SglFazenda write Set_SglFazenda;
    property NomFazenda: WideString read Get_NomFazenda write Set_NomFazenda;
    property CodAnimal: Integer read Get_CodAnimal write Set_CodAnimal;
    property SglFazendaManejo: WideString read Get_SglFazendaManejo write Set_SglFazendaManejo;
    property CodAnimalManejo: WideString read Get_CodAnimalManejo write Set_CodAnimalManejo;
    property NumPartida: WideString read Get_NumPartida write Set_NumPartida;
    property DtaMovimento: TDateTime read Get_DtaMovimento write Set_DtaMovimento;
    property CodTipoMovEstoqueSemen: Integer read Get_CodTipoMovEstoqueSemen write Set_CodTipoMovEstoqueSemen;
    property SglTipoMovEstoqueSemen: WideString read Get_SglTipoMovEstoqueSemen write Set_SglTipoMovEstoqueSemen;
    property DesTipoMovEstoqueSemen: WideString read Get_DesTipoMovEstoqueSemen write Set_DesTipoMovEstoqueSemen;
    property CodPessoaSecundaria: Integer read Get_CodPessoaSecundaria write Set_CodPessoaSecundaria;
    property NomPessoaSecundaria: WideString read Get_NomPessoaSecundaria write Set_NomPessoaSecundaria;
    property NumCNPJCPFPessoaSecundaria: WideString read Get_NumCNPJCPFPessoaSecundaria write Set_NumCNPJCPFPessoaSecundaria;
    property CodFazendaRelacionada: Integer read Get_CodFazendaRelacionada write Set_CodFazendaRelacionada;
    property SglFazendaRelacionada: WideString read Get_SglFazendaRelacionada write Set_SglFazendaRelacionada;
    property NomFazendaRelacionada: WideString read Get_NomFazendaRelacionada write Set_NomFazendaRelacionada;
    property CodAnimalFemea: Integer read Get_CodAnimalFemea write Set_CodAnimalFemea;
    property SglFazendaManejoFemea: WideString read Get_SglFazendaManejoFemea write Set_SglFazendaManejoFemea;
    property CodAnimalManejoFemea: WideString read Get_CodAnimalManejoFemea write Set_CodAnimalManejoFemea;
    property QtdDosesSemenApto: Integer read Get_QtdDosesSemenApto write Set_QtdDosesSemenApto;
    property QtdDosesSemenInapto: Integer read Get_QtdDosesSemenInapto write Set_QtdDosesSemenInapto;
    property TxtObservacao: WideString read Get_TxtObservacao write Set_TxtObservacao;
    property DtaCadastramento: TDateTime read Get_DtaCadastramento write Set_DtaCadastramento;
    property CodUsuario: Integer read Get_CodUsuario write Set_CodUsuario;
    property NomUsuario: WideString read Get_NomUsuario write Set_NomUsuario;
    property CodOperacaoMovEstoqueApto: WideString read Get_CodOperacaoMovEstoqueApto write Set_CodOperacaoMovEstoqueApto;
    property DesOperacaoMovEstoqueApto: WideString read Get_DesOperacaoMovEstoqueApto write Set_DesOperacaoMovEstoqueApto;
    property CodOperacaoMovEstoqueInapto: WideString read Get_CodOperacaoMovEstoqueInapto write Set_CodOperacaoMovEstoqueInapto;
    property DesOperacaoMovEstoqueInapto: WideString read Get_DesOperacaoMovEstoqueInapto write Set_DesOperacaoMovEstoqueInapto;
    property IndMovimentoEstorno: WideString read Get_IndMovimentoEstorno write Set_IndMovimentoEstorno;
    property SeqMovimento: Integer read Get_SeqMovimento write Set_SeqMovimento;
    property NomAnimal: WideString read Get_NomAnimal write Set_NomAnimal;
    property DesApelido: WideString read Get_DesApelido write Set_DesApelido;
  end;

// *********************************************************************//
// DispIntf:  IMovimentoEstoqueSemenDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {85981B38-210A-4B1C-AFFD-35F24A4C7B75}
// *********************************************************************//
  IMovimentoEstoqueSemenDisp = dispinterface
    ['{85981B38-210A-4B1C-AFFD-35F24A4C7B75}']
    property CodMovimento: Integer dispid 1;
    property CodFazenda: Integer dispid 2;
    property SglFazenda: WideString dispid 3;
    property NomFazenda: WideString dispid 4;
    property CodAnimal: Integer dispid 5;
    property SglFazendaManejo: WideString dispid 6;
    property CodAnimalManejo: WideString dispid 7;
    property NumPartida: WideString dispid 8;
    property DtaMovimento: TDateTime dispid 9;
    property CodTipoMovEstoqueSemen: Integer dispid 10;
    property SglTipoMovEstoqueSemen: WideString dispid 11;
    property DesTipoMovEstoqueSemen: WideString dispid 12;
    property CodPessoaSecundaria: Integer dispid 13;
    property NomPessoaSecundaria: WideString dispid 14;
    property NumCNPJCPFPessoaSecundaria: WideString dispid 15;
    property CodFazendaRelacionada: Integer dispid 16;
    property SglFazendaRelacionada: WideString dispid 17;
    property NomFazendaRelacionada: WideString dispid 18;
    property CodAnimalFemea: Integer dispid 19;
    property SglFazendaManejoFemea: WideString dispid 20;
    property CodAnimalManejoFemea: WideString dispid 21;
    property QtdDosesSemenApto: Integer dispid 22;
    property QtdDosesSemenInapto: Integer dispid 23;
    property TxtObservacao: WideString dispid 24;
    property DtaCadastramento: TDateTime dispid 25;
    property CodUsuario: Integer dispid 26;
    property NomUsuario: WideString dispid 27;
    property CodOperacaoMovEstoqueApto: WideString dispid 28;
    property DesOperacaoMovEstoqueApto: WideString dispid 29;
    property CodOperacaoMovEstoqueInapto: WideString dispid 30;
    property DesOperacaoMovEstoqueInapto: WideString dispid 31;
    property IndMovimentoEstorno: WideString dispid 32;
    property SeqMovimento: Integer dispid 33;
    property NomAnimal: WideString dispid 34;
    property DesApelido: WideString dispid 35;
  end;

// *********************************************************************//
// Interface: IEstoqueSemen
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38BDA0A0-D879-4DEA-97CA-2ADE3668E33A}
// *********************************************************************//
  IEstoqueSemen = interface(IDispatch)
    ['{38BDA0A0-D879-4DEA-97CA-2ADE3668E33A}']
    function Get_MovimentoEstoqueSemen: IMovimentoEstoqueSemen; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function ValorCampo(const NomColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    function Pesquisar(const CodFazendas: WideString; CodFazendaManejo: Integer; 
                       const CodAnimalManejoInicio: WideString; 
                       const CodAnimalManejoFim: WideString; const DesApelido: WideString; 
                       const NomAnimal: WideString; const NumPartida: WideString; 
                       const CodTipoMovsEstoqueSemen: WideString; 
                       const IndMovimentoEstorno: WideString; DtaMovimentoInicio: TDateTime; 
                       DtaMovimentoFim: TDateTime; const CodFornecedoresSemen: WideString): Integer; safecall;
    function Buscar(CodMovimento: Integer; SeqMovimento: Integer): Integer; safecall;
    function InserirMovimento(CodTipoMovEstoqueSemen: Integer; CodFazenda: Integer; 
                              CodAnimal: Integer; CodFazendaManejo: Integer; 
                              const CodAnimalManejo: WideString; const NumPartida: WideString; 
                              DtaMovimento: TDateTime; CodPessoaSecundaria: Integer; 
                              CodAnimalFemea: Integer; CodFazendaDestino: Integer; 
                              QtdDosesApto: Integer; QtdDosesInapto: Integer; 
                              const TxtObservacao: WideString): Integer; safecall;
    function EstornarMovimento(CodMovimento: Integer; const TxtObservacao: WideString): Integer; safecall;
    function PesquisarTouros(CodFazenda: Integer; const IndDosesApto: WideString; 
                             const CodOrdenacao: WideString): Integer; safecall;
    function PesquisarPosicaoFazenda(CodFazenda: Integer; CodAnimal: Integer; 
                                     const IndDetalharPartida: WideString; 
                                     const IndEstoquePositivo: WideString; 
                                     const IndConsolidar: WideString; const CodOrdenacao: WideString): Integer; safecall;
    function PesquisarPosicaoTouro(CodAnimal: Integer; CodFazenda: Integer; 
                                   const IndDetalharPartida: WideString; 
                                   const IndEstoquePositivo: WideString; 
                                   const IndConsolidar: WideString; const CodOrdenacao: WideString): Integer; safecall;
    function GerarRelatorio(CodFazenda: Integer; CodFazendaManejo: Integer; 
                            const CodAnimalManejoInicio: WideString; 
                            const CodAnimalManejoFim: WideString; const NomAnimal: WideString; 
                            const DesApelido: WideString; DtaNascimentoInicio: TDateTime; 
                            DtaNascimentoFim: TDateTime; const CodRacas: WideString; 
                            const NumRGD: WideString; const IndAgrupRaca1: WideString; 
                            CodRaca1: Integer; QtdComposicaoRacialInicio1: Double; 
                            QtdComposicaoRacialFim1: Double; const IndAgrupRaca2: WideString; 
                            CodRaca2: Integer; QtdComposicaoRacialInicio2: Double; 
                            QtdComposicaoRacialFim2: Double; const IndAgrupRaca3: WideString; 
                            CodRaca3: Integer; QtdComposicaoRacialInicio3: Double; 
                            QtdComposicaoRacialFim3: Double; const IndAgrupRaca4: WideString; 
                            CodRaca4: Integer; QtdComposicaoRacialInicio4: Double; 
                            QtdComposicaoRacialFim4: Double; const NumPartidaInicio: WideString; 
                            const NumPartidaFim: WideString; const CodTipoMovimentos: WideString; 
                            DtaMovimentoInicio: TDateTime; DtaMovimentoFim: TDateTime; 
                            const CodPessoaFornecedores: WideString; 
                            const CodPessoaCompradores: WideString; CodFazendaOrigem: Integer; 
                            CodFazendaDestino: Integer; QtdAptoInicio: Integer; 
                            QtdAptoFim: Integer; QtdInaptoInicio: Integer; QtdInaptoFim: Integer; 
                            Tipo: Integer; QtdQuebraRelatorio: Integer): WideString; safecall;
    property MovimentoEstoqueSemen: IMovimentoEstoqueSemen read Get_MovimentoEstoqueSemen;
  end;

// *********************************************************************//
// DispIntf:  IEstoqueSemenDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38BDA0A0-D879-4DEA-97CA-2ADE3668E33A}
// *********************************************************************//
  IEstoqueSemenDisp = dispinterface
    ['{38BDA0A0-D879-4DEA-97CA-2ADE3668E33A}']
    property MovimentoEstoqueSemen: IMovimentoEstoqueSemen readonly dispid 1;
    function BOF: WordBool; dispid 2;
    function EOF: WordBool; dispid 3;
    function NumeroRegistros: Integer; dispid 4;
    procedure IrAoPrimeiro; dispid 5;
    procedure IrAoUltimo; dispid 6;
    procedure IrAoProximo; dispid 7;
    procedure IrAoAnterior; dispid 8;
    procedure Posicionar(NumRegistro: Integer); dispid 9;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 10;
    function ValorCampo(const NomColuna: WideString): OleVariant; dispid 11;
    procedure FecharPesquisa; dispid 12;
    function Pesquisar(const CodFazendas: WideString; CodFazendaManejo: Integer; 
                       const CodAnimalManejoInicio: WideString; 
                       const CodAnimalManejoFim: WideString; const DesApelido: WideString; 
                       const NomAnimal: WideString; const NumPartida: WideString; 
                       const CodTipoMovsEstoqueSemen: WideString; 
                       const IndMovimentoEstorno: WideString; DtaMovimentoInicio: TDateTime; 
                       DtaMovimentoFim: TDateTime; const CodFornecedoresSemen: WideString): Integer; dispid 13;
    function Buscar(CodMovimento: Integer; SeqMovimento: Integer): Integer; dispid 14;
    function InserirMovimento(CodTipoMovEstoqueSemen: Integer; CodFazenda: Integer; 
                              CodAnimal: Integer; CodFazendaManejo: Integer; 
                              const CodAnimalManejo: WideString; const NumPartida: WideString; 
                              DtaMovimento: TDateTime; CodPessoaSecundaria: Integer; 
                              CodAnimalFemea: Integer; CodFazendaDestino: Integer; 
                              QtdDosesApto: Integer; QtdDosesInapto: Integer; 
                              const TxtObservacao: WideString): Integer; dispid 15;
    function EstornarMovimento(CodMovimento: Integer; const TxtObservacao: WideString): Integer; dispid 16;
    function PesquisarTouros(CodFazenda: Integer; const IndDosesApto: WideString; 
                             const CodOrdenacao: WideString): Integer; dispid 17;
    function PesquisarPosicaoFazenda(CodFazenda: Integer; CodAnimal: Integer; 
                                     const IndDetalharPartida: WideString; 
                                     const IndEstoquePositivo: WideString; 
                                     const IndConsolidar: WideString; const CodOrdenacao: WideString): Integer; dispid 18;
    function PesquisarPosicaoTouro(CodAnimal: Integer; CodFazenda: Integer; 
                                   const IndDetalharPartida: WideString; 
                                   const IndEstoquePositivo: WideString; 
                                   const IndConsolidar: WideString; const CodOrdenacao: WideString): Integer; dispid 19;
    function GerarRelatorio(CodFazenda: Integer; CodFazendaManejo: Integer; 
                            const CodAnimalManejoInicio: WideString; 
                            const CodAnimalManejoFim: WideString; const NomAnimal: WideString; 
                            const DesApelido: WideString; DtaNascimentoInicio: TDateTime; 
                            DtaNascimentoFim: TDateTime; const CodRacas: WideString; 
                            const NumRGD: WideString; const IndAgrupRaca1: WideString; 
                            CodRaca1: Integer; QtdComposicaoRacialInicio1: Double; 
                            QtdComposicaoRacialFim1: Double; const IndAgrupRaca2: WideString; 
                            CodRaca2: Integer; QtdComposicaoRacialInicio2: Double; 
                            QtdComposicaoRacialFim2: Double; const IndAgrupRaca3: WideString; 
                            CodRaca3: Integer; QtdComposicaoRacialInicio3: Double; 
                            QtdComposicaoRacialFim3: Double; const IndAgrupRaca4: WideString; 
                            CodRaca4: Integer; QtdComposicaoRacialInicio4: Double; 
                            QtdComposicaoRacialFim4: Double; const NumPartidaInicio: WideString; 
                            const NumPartidaFim: WideString; const CodTipoMovimentos: WideString; 
                            DtaMovimentoInicio: TDateTime; DtaMovimentoFim: TDateTime; 
                            const CodPessoaFornecedores: WideString; 
                            const CodPessoaCompradores: WideString; CodFazendaOrigem: Integer; 
                            CodFazendaDestino: Integer; QtdAptoInicio: Integer; 
                            QtdAptoFim: Integer; QtdInaptoInicio: Integer; QtdInaptoFim: Integer; 
                            Tipo: Integer; QtdQuebraRelatorio: Integer): WideString; dispid 20;
  end;

// *********************************************************************//
// Interface: ITiposMovimentoEstoqueSemen
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {769E09AF-BA6B-4EC7-ACC1-4C70F6E8FD59}
// *********************************************************************//
  ITiposMovimentoEstoqueSemen = interface(IDispatch)
    ['{769E09AF-BA6B-4EC7-ACC1-4C70F6E8FD59}']
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function Pesquisar(const IndRestritoSistema: WideString): Integer; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposMovimentoEstoqueSemenDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {769E09AF-BA6B-4EC7-ACC1-4C70F6E8FD59}
// *********************************************************************//
  ITiposMovimentoEstoqueSemenDisp = dispinterface
    ['{769E09AF-BA6B-4EC7-ACC1-4C70F6E8FD59}']
    function EOF: WordBool; dispid 1;
    procedure IrAoPrimeiro; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    function Pesquisar(const IndRestritoSistema: WideString): Integer; dispid 5;
    procedure FecharPesquisa; dispid 6;
  end;

// *********************************************************************//
// Interface: ITiposAvaliacao
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {015DC8FF-5657-4D2F-81CF-7687CC611BA0}
// *********************************************************************//
  ITiposAvaliacao = interface(IDispatch)
    ['{015DC8FF-5657-4D2F-81CF-7687CC611BA0}']
    function Buscar(CodTipoAvaliacao: Integer): Integer; safecall;
    function Inserir(const SglTipoAvaliacao: WideString; const DesTipoAvaliacao: WideString): Integer; safecall;
    function Alterar(CodTipoAvaliacao: Integer; const SglTipoAvaliacao: WideString; 
                     const DesTipoAvaliacao: WideString): Integer; safecall;
    function Excluir(CodTipoAvaliacao: Integer): Integer; safecall;
    function Pesquisar(const CodOrdenacao: WideString): Integer; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure IrAoAnterior; safecall;
    procedure Deslocar(NumDeslocamento: Integer); safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    procedure FecharPesquisa; safecall;
    function Get_TipoAvaliacao: ITipoAvaliacao; safecall;
    property TipoAvaliacao: ITipoAvaliacao read Get_TipoAvaliacao;
  end;

// *********************************************************************//
// DispIntf:  ITiposAvaliacaoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {015DC8FF-5657-4D2F-81CF-7687CC611BA0}
// *********************************************************************//
  ITiposAvaliacaoDisp = dispinterface
    ['{015DC8FF-5657-4D2F-81CF-7687CC611BA0}']
    function Buscar(CodTipoAvaliacao: Integer): Integer; dispid 1;
    function Inserir(const SglTipoAvaliacao: WideString; const DesTipoAvaliacao: WideString): Integer; dispid 2;
    function Alterar(CodTipoAvaliacao: Integer; const SglTipoAvaliacao: WideString; 
                     const DesTipoAvaliacao: WideString): Integer; dispid 3;
    function Excluir(CodTipoAvaliacao: Integer): Integer; dispid 4;
    function Pesquisar(const CodOrdenacao: WideString): Integer; dispid 5;
    function BOF: WordBool; dispid 6;
    function EOF: WordBool; dispid 7;
    function NumeroRegistros: Integer; dispid 8;
    procedure IrAoPrimeiro; dispid 9;
    procedure IrAoUltimo; dispid 10;
    procedure IrAoProximo; dispid 11;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 12;
    procedure IrAoAnterior; dispid 13;
    procedure Deslocar(NumDeslocamento: Integer); dispid 14;
    procedure Posicionar(NumPosicao: Integer); dispid 15;
    procedure FecharPesquisa; dispid 16;
    property TipoAvaliacao: ITipoAvaliacao readonly dispid 17;
  end;

// *********************************************************************//
// Interface: ITipoAvaliacao
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {356BCAC5-3F51-4288-B8DD-D2692443CFE2}
// *********************************************************************//
  ITipoAvaliacao = interface(IDispatch)
    ['{356BCAC5-3F51-4288-B8DD-D2692443CFE2}']
    function Get_CodTipoAvaliacao: Integer; safecall;
    procedure Set_CodTipoAvaliacao(Value: Integer); safecall;
    function Get_SglTipoAvaliacao: WideString; safecall;
    procedure Set_SglTipoAvaliacao(const Value: WideString); safecall;
    function Get_DesTipoAvaliacao: WideString; safecall;
    procedure Set_DesTipoAvaliacao(const Value: WideString); safecall;
    property CodTipoAvaliacao: Integer read Get_CodTipoAvaliacao write Set_CodTipoAvaliacao;
    property SglTipoAvaliacao: WideString read Get_SglTipoAvaliacao write Set_SglTipoAvaliacao;
    property DesTipoAvaliacao: WideString read Get_DesTipoAvaliacao write Set_DesTipoAvaliacao;
  end;

// *********************************************************************//
// DispIntf:  ITipoAvaliacaoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {356BCAC5-3F51-4288-B8DD-D2692443CFE2}
// *********************************************************************//
  ITipoAvaliacaoDisp = dispinterface
    ['{356BCAC5-3F51-4288-B8DD-D2692443CFE2}']
    property CodTipoAvaliacao: Integer dispid 1;
    property SglTipoAvaliacao: WideString dispid 2;
    property DesTipoAvaliacao: WideString dispid 3;
  end;

// *********************************************************************//
// Interface: ICaracteristicasAvaliacao
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F5D548EF-47AD-48BC-A3CA-A9E99566D8AE}
// *********************************************************************//
  ICaracteristicasAvaliacao = interface(IDispatch)
    ['{F5D548EF-47AD-48BC-A3CA-A9E99566D8AE}']
    function Buscar(CodTipoAvaliacao: Integer; CodCaracteristica: Integer): Integer; safecall;
    function Inserir(CodTipoAvaliacao: Integer; const SglCaracteristica: WideString; 
                     const DesCaracteristica: WideString; CodUnidadeMedida: Integer; 
                     const IndSexo: WideString; ValLimiteMinimo: Double; ValLimiteMaximo: Double): Integer; safecall;
    function Alterar(CodTipoAvaliacao: Integer; CodCaracteristica: Integer; 
                     const SglCaracteristica: WideString; const DesCaracteristica: WideString; 
                     CodUnidadeMedida: Integer; const IndSexo: WideString; ValLimiteMinimo: Double; 
                     ValLimiteMaximo: Double): Integer; safecall;
    function Excluir(CodTipoAvaliacao: Integer; CodCaracteristica: Integer): Integer; safecall;
    function Pesquisar(CodTipoAvaliacao: Integer; const DesCaracteristica: WideString; 
                       const CodOrdenacao: WideString): Integer; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure IrAoAnterior; safecall;
    procedure Deslocar(NumDeslocamento: Integer); safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    procedure FecharPesquisa; safecall;
    function PesquisarCaracteristica(CodTipoAvaliacao: Integer; const CodOrdenacao: WideString): Integer; safecall;
    function Get_CaracteristicaAvaliacao: ICaracteristicaAvaliacao; safecall;
    property CaracteristicaAvaliacao: ICaracteristicaAvaliacao read Get_CaracteristicaAvaliacao;
  end;

// *********************************************************************//
// DispIntf:  ICaracteristicasAvaliacaoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F5D548EF-47AD-48BC-A3CA-A9E99566D8AE}
// *********************************************************************//
  ICaracteristicasAvaliacaoDisp = dispinterface
    ['{F5D548EF-47AD-48BC-A3CA-A9E99566D8AE}']
    function Buscar(CodTipoAvaliacao: Integer; CodCaracteristica: Integer): Integer; dispid 1;
    function Inserir(CodTipoAvaliacao: Integer; const SglCaracteristica: WideString; 
                     const DesCaracteristica: WideString; CodUnidadeMedida: Integer; 
                     const IndSexo: WideString; ValLimiteMinimo: Double; ValLimiteMaximo: Double): Integer; dispid 2;
    function Alterar(CodTipoAvaliacao: Integer; CodCaracteristica: Integer; 
                     const SglCaracteristica: WideString; const DesCaracteristica: WideString; 
                     CodUnidadeMedida: Integer; const IndSexo: WideString; ValLimiteMinimo: Double; 
                     ValLimiteMaximo: Double): Integer; dispid 3;
    function Excluir(CodTipoAvaliacao: Integer; CodCaracteristica: Integer): Integer; dispid 4;
    function Pesquisar(CodTipoAvaliacao: Integer; const DesCaracteristica: WideString; 
                       const CodOrdenacao: WideString): Integer; dispid 5;
    function BOF: WordBool; dispid 6;
    function EOF: WordBool; dispid 7;
    function NumeroRegistros: Integer; dispid 8;
    procedure IrAoPrimeiro; dispid 9;
    procedure IrAoUltimo; dispid 10;
    procedure IrAoProximo; dispid 11;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 12;
    procedure IrAoAnterior; dispid 13;
    procedure Deslocar(NumDeslocamento: Integer); dispid 14;
    procedure Posicionar(NumPosicao: Integer); dispid 15;
    procedure FecharPesquisa; dispid 16;
    function PesquisarCaracteristica(CodTipoAvaliacao: Integer; const CodOrdenacao: WideString): Integer; dispid 17;
    property CaracteristicaAvaliacao: ICaracteristicaAvaliacao readonly dispid 18;
  end;

// *********************************************************************//
// Interface: ICaracteristicaAvaliacao
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3C303976-3B93-46F7-835F-F972CB96751D}
// *********************************************************************//
  ICaracteristicaAvaliacao = interface(IDispatch)
    ['{3C303976-3B93-46F7-835F-F972CB96751D}']
    function Get_CodTipoAvaliacao: Integer; safecall;
    procedure Set_CodTipoAvaliacao(Value: Integer); safecall;
    function Get_CodCaracteristica: Integer; safecall;
    procedure Set_CodCaracteristica(Value: Integer); safecall;
    function Get_SglTipoAvaliacao: WideString; safecall;
    procedure Set_SglTipoAvaliacao(const Value: WideString); safecall;
    function Get_DesTipoAvaliacao: WideString; safecall;
    procedure Set_DesTipoAvaliacao(const Value: WideString); safecall;
    function Get_CodUnidadeMedida: Integer; safecall;
    procedure Set_CodUnidadeMedida(Value: Integer); safecall;
    function Get_SglUnidadeMedida: WideString; safecall;
    procedure Set_SglUnidadeMedida(const Value: WideString); safecall;
    function Get_ValLimiteMinimo: Double; safecall;
    procedure Set_ValLimiteMinimo(Value: Double); safecall;
    function Get_ValLimiteMaximo: Double; safecall;
    procedure Set_ValLimiteMaximo(Value: Double); safecall;
    function Get_SglCaracteristica: WideString; safecall;
    procedure Set_SglCaracteristica(const Value: WideString); safecall;
    function Get_DesCaracteristica: WideString; safecall;
    procedure Set_DesCaracteristica(const Value: WideString); safecall;
    function Get_DesUnidadeMedida: WideString; safecall;
    procedure Set_DesUnidadeMedida(const Value: WideString); safecall;
    function Get_IndSexo: WideString; safecall;
    procedure Set_IndSexo(const Value: WideString); safecall;
    property CodTipoAvaliacao: Integer read Get_CodTipoAvaliacao write Set_CodTipoAvaliacao;
    property CodCaracteristica: Integer read Get_CodCaracteristica write Set_CodCaracteristica;
    property SglTipoAvaliacao: WideString read Get_SglTipoAvaliacao write Set_SglTipoAvaliacao;
    property DesTipoAvaliacao: WideString read Get_DesTipoAvaliacao write Set_DesTipoAvaliacao;
    property CodUnidadeMedida: Integer read Get_CodUnidadeMedida write Set_CodUnidadeMedida;
    property SglUnidadeMedida: WideString read Get_SglUnidadeMedida write Set_SglUnidadeMedida;
    property ValLimiteMinimo: Double read Get_ValLimiteMinimo write Set_ValLimiteMinimo;
    property ValLimiteMaximo: Double read Get_ValLimiteMaximo write Set_ValLimiteMaximo;
    property SglCaracteristica: WideString read Get_SglCaracteristica write Set_SglCaracteristica;
    property DesCaracteristica: WideString read Get_DesCaracteristica write Set_DesCaracteristica;
    property DesUnidadeMedida: WideString read Get_DesUnidadeMedida write Set_DesUnidadeMedida;
    property IndSexo: WideString read Get_IndSexo write Set_IndSexo;
  end;

// *********************************************************************//
// DispIntf:  ICaracteristicaAvaliacaoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3C303976-3B93-46F7-835F-F972CB96751D}
// *********************************************************************//
  ICaracteristicaAvaliacaoDisp = dispinterface
    ['{3C303976-3B93-46F7-835F-F972CB96751D}']
    property CodTipoAvaliacao: Integer dispid 1;
    property CodCaracteristica: Integer dispid 2;
    property SglTipoAvaliacao: WideString dispid 3;
    property DesTipoAvaliacao: WideString dispid 4;
    property CodUnidadeMedida: Integer dispid 5;
    property SglUnidadeMedida: WideString dispid 6;
    property ValLimiteMinimo: Double dispid 7;
    property ValLimiteMaximo: Double dispid 8;
    property SglCaracteristica: WideString dispid 9;
    property DesCaracteristica: WideString dispid 10;
    property DesUnidadeMedida: WideString dispid 11;
    property IndSexo: WideString dispid 12;
  end;

// *********************************************************************//
// Interface: ISituacoesCria
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {646D382C-97B7-4897-9F23-BAA0E2B0FFD4}
// *********************************************************************//
  ISituacoesCria = interface(IDispatch)
    ['{646D382C-97B7-4897-9F23-BAA0E2B0FFD4}']
    function Pesquisar: Integer; safecall;
    procedure FecharPesquisa; safecall;
    function ValorCampo(const NomColuna: WideString): OleVariant; safecall;
    procedure IrAoProximo; safecall;
    function EOF: WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  ISituacoesCriaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {646D382C-97B7-4897-9F23-BAA0E2B0FFD4}
// *********************************************************************//
  ISituacoesCriaDisp = dispinterface
    ['{646D382C-97B7-4897-9F23-BAA0E2B0FFD4}']
    function Pesquisar: Integer; dispid 1;
    procedure FecharPesquisa; dispid 2;
    function ValorCampo(const NomColuna: WideString): OleVariant; dispid 3;
    procedure IrAoProximo; dispid 4;
    function EOF: WordBool; dispid 5;
  end;

// *********************************************************************//
// Interface: IGrausDificuldade
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C2C08753-A0FE-4D70-8498-1326F624A857}
// *********************************************************************//
  IGrausDificuldade = interface(IDispatch)
    ['{C2C08753-A0FE-4D70-8498-1326F624A857}']
    function Pesquisar: Integer; safecall;
    procedure FecharPesquisa; safecall;
    function ValorCampo(const NomColuna: WideString): OleVariant; safecall;
    procedure IrAoProximo; safecall;
    function EOF: WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IGrausDificuldadeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C2C08753-A0FE-4D70-8498-1326F624A857}
// *********************************************************************//
  IGrausDificuldadeDisp = dispinterface
    ['{C2C08753-A0FE-4D70-8498-1326F624A857}']
    function Pesquisar: Integer; dispid 1;
    procedure FecharPesquisa; dispid 2;
    function ValorCampo(const NomColuna: WideString): OleVariant; dispid 3;
    procedure IrAoProximo; dispid 4;
    function EOF: WordBool; dispid 5;
  end;

// *********************************************************************//
// Interface: IMotivosDescarte
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC90F243-0981-4048-946F-7D35EA8FC506}
// *********************************************************************//
  IMotivosDescarte = interface(IDispatch)
    ['{EC90F243-0981-4048-946F-7D35EA8FC506}']
    function Pesquisar: Integer; safecall;
    procedure FecharPesquisa; safecall;
    function ValorCampo(const NomColuna: WideString): OleVariant; safecall;
    procedure IrAoProximo; safecall;
    function EOF: WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IMotivosDescarteDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EC90F243-0981-4048-946F-7D35EA8FC506}
// *********************************************************************//
  IMotivosDescarteDisp = dispinterface
    ['{EC90F243-0981-4048-946F-7D35EA8FC506}']
    function Pesquisar: Integer; dispid 1;
    procedure FecharPesquisa; dispid 2;
    function ValorCampo(const NomColuna: WideString): OleVariant; dispid 3;
    procedure IrAoProximo; dispid 4;
    function EOF: WordBool; dispid 5;
  end;

// *********************************************************************//
// Interface: IImportacoesDadoGeral
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D2BE7F58-80FE-42C3-A3FC-E6457C8B4CF1}
// *********************************************************************//
  IImportacoesDadoGeral = interface(IDispatch)
    ['{D2BE7F58-80FE-42C3-A3FC-E6457C8B4CF1}']
    function ArmazenarArqUpload(CodTipoOrigemArqImport: Integer; const NomArqUpload: WideString): Integer; safecall;
    function Buscar(CodArqImportDado: Integer): Integer; safecall;
    function Pesquisar(const NomArqUpload: WideString; DtaImportacaoInicio: TDateTime; 
                       DtaImportacaoFim: TDateTime; const NomUsuarioUpload: WideString; 
                       CodTipoOrigemArqImport: Integer; const CodSituacaoArqImport: WideString; 
                       DtaUltimoProcessamentoInicio: TDateTime; 
                       DtaUltimoProcessamentoFim: TDateTime; const NomUsuarioUltimoProc: WideString): Integer; safecall;
    function Excluir(CodArqImportDado: Integer): Integer; safecall;
    function ProcessarArquivo(CodArqImportDado: Integer; LinhaInicial: Integer; TempoMaximo: Integer): Integer; safecall;
    function PesquisarOcorrencias(CodArqImportDado: Integer; CodTipoLinhaImportacao: Integer; 
                                  CodTipoMensagem: Integer): Integer; safecall;
    function EOF: WordBool; safecall;
    function BOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function ValorCampo(const NomCampo: WideString): WideString; safecall;
    procedure FecharPesquisa; safecall;
    function Get_ImportacaoDadoGeral: IImportacaoDadoGeral; safecall;
    property ImportacaoDadoGeral: IImportacaoDadoGeral read Get_ImportacaoDadoGeral;
  end;

// *********************************************************************//
// DispIntf:  IImportacoesDadoGeralDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D2BE7F58-80FE-42C3-A3FC-E6457C8B4CF1}
// *********************************************************************//
  IImportacoesDadoGeralDisp = dispinterface
    ['{D2BE7F58-80FE-42C3-A3FC-E6457C8B4CF1}']
    function ArmazenarArqUpload(CodTipoOrigemArqImport: Integer; const NomArqUpload: WideString): Integer; dispid 1;
    function Buscar(CodArqImportDado: Integer): Integer; dispid 2;
    function Pesquisar(const NomArqUpload: WideString; DtaImportacaoInicio: TDateTime; 
                       DtaImportacaoFim: TDateTime; const NomUsuarioUpload: WideString; 
                       CodTipoOrigemArqImport: Integer; const CodSituacaoArqImport: WideString; 
                       DtaUltimoProcessamentoInicio: TDateTime; 
                       DtaUltimoProcessamentoFim: TDateTime; const NomUsuarioUltimoProc: WideString): Integer; dispid 3;
    function Excluir(CodArqImportDado: Integer): Integer; dispid 4;
    function ProcessarArquivo(CodArqImportDado: Integer; LinhaInicial: Integer; TempoMaximo: Integer): Integer; dispid 5;
    function PesquisarOcorrencias(CodArqImportDado: Integer; CodTipoLinhaImportacao: Integer; 
                                  CodTipoMensagem: Integer): Integer; dispid 6;
    function EOF: WordBool; dispid 7;
    function BOF: WordBool; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    procedure IrAoPrimeiro; dispid 10;
    procedure IrAoUltimo; dispid 11;
    procedure IrAoProximo; dispid 12;
    procedure IrAoAnterior; dispid 13;
    procedure Posicionar(NumPosicao: Integer); dispid 14;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 15;
    function ValorCampo(const NomCampo: WideString): WideString; dispid 16;
    procedure FecharPesquisa; dispid 17;
    property ImportacaoDadoGeral: IImportacaoDadoGeral readonly dispid 18;
  end;

// *********************************************************************//
// Interface: IImportacaoDadoGeral
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BBFE476D-8719-48F1-ABEB-8815673071D9}
// *********************************************************************//
  IImportacaoDadoGeral = interface(IDispatch)
    ['{BBFE476D-8719-48F1-ABEB-8815673071D9}']
    function Get_CodArqImportDadoGeral: Integer; safecall;
    procedure Set_CodArqImportDadoGeral(Value: Integer); safecall;
    function Get_NomArqUpload: WideString; safecall;
    procedure Set_NomArqUpload(const Value: WideString); safecall;
    function Get_NomArqImportDadoGeral: WideString; safecall;
    procedure Set_NomArqImportDadoGeral(const Value: WideString); safecall;
    function Get_DtaImportacao: TDateTime; safecall;
    procedure Set_DtaImportacao(Value: TDateTime); safecall;
    function Get_CodUsuarioUltimoProc: Integer; safecall;
    procedure Set_CodUsuarioUltimoProc(Value: Integer); safecall;
    function Get_NomUsuarioUltimoProc: WideString; safecall;
    procedure Set_NomUsuarioUltimoProc(const Value: WideString); safecall;
    function Get_QtdVezesProcessamento: Integer; safecall;
    procedure Set_QtdVezesProcessamento(Value: Integer); safecall;
    function Get_DtaUltimoProcessamento: TDateTime; safecall;
    procedure Set_DtaUltimoProcessamento(Value: TDateTime); safecall;
    function Get_QtdProdutoresTotal: Integer; safecall;
    procedure Set_QtdProdutoresTotal(Value: Integer); safecall;
    function Get_QtdProdutoresErrados: Integer; safecall;
    procedure Set_QtdProdutoresErrados(Value: Integer); safecall;
    function Get_QtdProdutoresProcessados: Integer; safecall;
    procedure Set_QtdProdutoresProcessados(Value: Integer); safecall;
    function Get_QtdPropriedadesTotal: Integer; safecall;
    procedure Set_QtdPropriedadesTotal(Value: Integer); safecall;
    function Get_QtdPropriedadesErradas: Integer; safecall;
    procedure Set_QtdPropriedadesErradas(Value: Integer); safecall;
    function Get_QtdPropriedadesProcessadas: Integer; safecall;
    procedure Set_QtdPropriedadesProcessadas(Value: Integer); safecall;
    function Get_QtdFazendasTotal: Integer; safecall;
    procedure Set_QtdFazendasTotal(Value: Integer); safecall;
    function Get_QtdFazendasErradas: Integer; safecall;
    procedure Set_QtdFazendasErradas(Value: Integer); safecall;
    function Get_QtdFazendasProcessadas: Integer; safecall;
    procedure Set_QtdFazendasProcessadas(Value: Integer); safecall;
    function Get_QtdLocaisTotal: Integer; safecall;
    procedure Set_QtdLocaisTotal(Value: Integer); safecall;
    function Get_QtdLocaisErrados: Integer; safecall;
    procedure Set_QtdLocaisErrados(Value: Integer); safecall;
    function Get_QtdLocaisProcessados: Integer; safecall;
    procedure Set_QtdLocaisProcessados(Value: Integer); safecall;
    function Get_CodUsuarioUpload: Integer; safecall;
    procedure Set_CodUsuarioUpload(Value: Integer); safecall;
    function Get_NomUsuarioUpload: WideString; safecall;
    procedure Set_NomUsuarioUpload(const Value: WideString); safecall;
    function Get_CodTipoOrigemArqImport: Integer; safecall;
    procedure Set_CodTipoOrigemArqImport(Value: Integer); safecall;
    function Get_SglTipoOrigemArqImport: WideString; safecall;
    procedure Set_SglTipoOrigemArqImport(const Value: WideString); safecall;
    function Get_DesTipoOrigemArqImport: WideString; safecall;
    procedure Set_DesTipoOrigemArqImport(const Value: WideString); safecall;
    function Get_CodSituacaoArqImport: WideString; safecall;
    procedure Set_CodSituacaoArqImport(const Value: WideString); safecall;
    function Get_DesSituacaoArqImport: WideString; safecall;
    procedure Set_DesSituacaoArqImport(const Value: WideString); safecall;
    function Get_QtdLinhas: Integer; safecall;
    procedure Set_QtdLinhas(Value: Integer); safecall;
    function Get_QtdOcorrencias: Integer; safecall;
    procedure Set_QtdOcorrencias(Value: Integer); safecall;
    function Get_CodUltimaTarefa: Integer; safecall;
    procedure Set_CodUltimaTarefa(Value: Integer); safecall;
    function Get_CodSituacaoUltimaTarefa: WideString; safecall;
    procedure Set_CodSituacaoUltimaTarefa(const Value: WideString); safecall;
    function Get_DesSituacaoUltimaTarefa: WideString; safecall;
    procedure Set_DesSituacaoUltimaTarefa(const Value: WideString); safecall;
    function Get_DtaInicioPrevistoUltimaTarefa: TDateTime; safecall;
    procedure Set_DtaInicioPrevistoUltimaTarefa(Value: TDateTime); safecall;
    function Get_DtaInicioRealUltimaTarefa: TDateTime; safecall;
    procedure Set_DtaInicioRealUltimaTarefa(Value: TDateTime); safecall;
    function Get_DtaFimRealUltimaTarefa: TDateTime; safecall;
    procedure Set_DtaFimRealUltimaTarefa(Value: TDateTime); safecall;
    function Get_TxtMensagem: WideString; safecall;
    procedure Set_TxtMensagem(const Value: WideString); safecall;
    property CodArqImportDadoGeral: Integer read Get_CodArqImportDadoGeral write Set_CodArqImportDadoGeral;
    property NomArqUpload: WideString read Get_NomArqUpload write Set_NomArqUpload;
    property NomArqImportDadoGeral: WideString read Get_NomArqImportDadoGeral write Set_NomArqImportDadoGeral;
    property DtaImportacao: TDateTime read Get_DtaImportacao write Set_DtaImportacao;
    property CodUsuarioUltimoProc: Integer read Get_CodUsuarioUltimoProc write Set_CodUsuarioUltimoProc;
    property NomUsuarioUltimoProc: WideString read Get_NomUsuarioUltimoProc write Set_NomUsuarioUltimoProc;
    property QtdVezesProcessamento: Integer read Get_QtdVezesProcessamento write Set_QtdVezesProcessamento;
    property DtaUltimoProcessamento: TDateTime read Get_DtaUltimoProcessamento write Set_DtaUltimoProcessamento;
    property QtdProdutoresTotal: Integer read Get_QtdProdutoresTotal write Set_QtdProdutoresTotal;
    property QtdProdutoresErrados: Integer read Get_QtdProdutoresErrados write Set_QtdProdutoresErrados;
    property QtdProdutoresProcessados: Integer read Get_QtdProdutoresProcessados write Set_QtdProdutoresProcessados;
    property QtdPropriedadesTotal: Integer read Get_QtdPropriedadesTotal write Set_QtdPropriedadesTotal;
    property QtdPropriedadesErradas: Integer read Get_QtdPropriedadesErradas write Set_QtdPropriedadesErradas;
    property QtdPropriedadesProcessadas: Integer read Get_QtdPropriedadesProcessadas write Set_QtdPropriedadesProcessadas;
    property QtdFazendasTotal: Integer read Get_QtdFazendasTotal write Set_QtdFazendasTotal;
    property QtdFazendasErradas: Integer read Get_QtdFazendasErradas write Set_QtdFazendasErradas;
    property QtdFazendasProcessadas: Integer read Get_QtdFazendasProcessadas write Set_QtdFazendasProcessadas;
    property QtdLocaisTotal: Integer read Get_QtdLocaisTotal write Set_QtdLocaisTotal;
    property QtdLocaisErrados: Integer read Get_QtdLocaisErrados write Set_QtdLocaisErrados;
    property QtdLocaisProcessados: Integer read Get_QtdLocaisProcessados write Set_QtdLocaisProcessados;
    property CodUsuarioUpload: Integer read Get_CodUsuarioUpload write Set_CodUsuarioUpload;
    property NomUsuarioUpload: WideString read Get_NomUsuarioUpload write Set_NomUsuarioUpload;
    property CodTipoOrigemArqImport: Integer read Get_CodTipoOrigemArqImport write Set_CodTipoOrigemArqImport;
    property SglTipoOrigemArqImport: WideString read Get_SglTipoOrigemArqImport write Set_SglTipoOrigemArqImport;
    property DesTipoOrigemArqImport: WideString read Get_DesTipoOrigemArqImport write Set_DesTipoOrigemArqImport;
    property CodSituacaoArqImport: WideString read Get_CodSituacaoArqImport write Set_CodSituacaoArqImport;
    property DesSituacaoArqImport: WideString read Get_DesSituacaoArqImport write Set_DesSituacaoArqImport;
    property QtdLinhas: Integer read Get_QtdLinhas write Set_QtdLinhas;
    property QtdOcorrencias: Integer read Get_QtdOcorrencias write Set_QtdOcorrencias;
    property CodUltimaTarefa: Integer read Get_CodUltimaTarefa write Set_CodUltimaTarefa;
    property CodSituacaoUltimaTarefa: WideString read Get_CodSituacaoUltimaTarefa write Set_CodSituacaoUltimaTarefa;
    property DesSituacaoUltimaTarefa: WideString read Get_DesSituacaoUltimaTarefa write Set_DesSituacaoUltimaTarefa;
    property DtaInicioPrevistoUltimaTarefa: TDateTime read Get_DtaInicioPrevistoUltimaTarefa write Set_DtaInicioPrevistoUltimaTarefa;
    property DtaInicioRealUltimaTarefa: TDateTime read Get_DtaInicioRealUltimaTarefa write Set_DtaInicioRealUltimaTarefa;
    property DtaFimRealUltimaTarefa: TDateTime read Get_DtaFimRealUltimaTarefa write Set_DtaFimRealUltimaTarefa;
    property TxtMensagem: WideString read Get_TxtMensagem write Set_TxtMensagem;
  end;

// *********************************************************************//
// DispIntf:  IImportacaoDadoGeralDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BBFE476D-8719-48F1-ABEB-8815673071D9}
// *********************************************************************//
  IImportacaoDadoGeralDisp = dispinterface
    ['{BBFE476D-8719-48F1-ABEB-8815673071D9}']
    property CodArqImportDadoGeral: Integer dispid 2;
    property NomArqUpload: WideString dispid 3;
    property NomArqImportDadoGeral: WideString dispid 4;
    property DtaImportacao: TDateTime dispid 5;
    property CodUsuarioUltimoProc: Integer dispid 6;
    property NomUsuarioUltimoProc: WideString dispid 7;
    property QtdVezesProcessamento: Integer dispid 8;
    property DtaUltimoProcessamento: TDateTime dispid 9;
    property QtdProdutoresTotal: Integer dispid 12;
    property QtdProdutoresErrados: Integer dispid 13;
    property QtdProdutoresProcessados: Integer dispid 14;
    property QtdPropriedadesTotal: Integer dispid 15;
    property QtdPropriedadesErradas: Integer dispid 16;
    property QtdPropriedadesProcessadas: Integer dispid 17;
    property QtdFazendasTotal: Integer dispid 18;
    property QtdFazendasErradas: Integer dispid 19;
    property QtdFazendasProcessadas: Integer dispid 20;
    property QtdLocaisTotal: Integer dispid 21;
    property QtdLocaisErrados: Integer dispid 22;
    property QtdLocaisProcessados: Integer dispid 23;
    property CodUsuarioUpload: Integer dispid 1;
    property NomUsuarioUpload: WideString dispid 24;
    property CodTipoOrigemArqImport: Integer dispid 25;
    property SglTipoOrigemArqImport: WideString dispid 26;
    property DesTipoOrigemArqImport: WideString dispid 27;
    property CodSituacaoArqImport: WideString dispid 28;
    property DesSituacaoArqImport: WideString dispid 29;
    property QtdLinhas: Integer dispid 30;
    property QtdOcorrencias: Integer dispid 31;
    property CodUltimaTarefa: Integer dispid 32;
    property CodSituacaoUltimaTarefa: WideString dispid 33;
    property DesSituacaoUltimaTarefa: WideString dispid 34;
    property DtaInicioPrevistoUltimaTarefa: TDateTime dispid 35;
    property DtaInicioRealUltimaTarefa: TDateTime dispid 36;
    property DtaFimRealUltimaTarefa: TDateTime dispid 37;
    property TxtMensagem: WideString dispid 38;
  end;

// *********************************************************************//
// Interface: IImportacaoSISBOV
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9F5B8361-016F-44B7-9A29-0E57E772ACAF}
// *********************************************************************//
  IImportacaoSISBOV = interface(IDispatch)
    ['{9F5B8361-016F-44B7-9A29-0E57E772ACAF}']
    function Get_Nirf: WideString; safecall;
    procedure Set_Nirf(const Value: WideString); safecall;
    function Get_NumCPFCNPJ: WideString; safecall;
    procedure Set_NumCPFCNPJ(const Value: WideString); safecall;
    function Get_CodProdutor: Integer; safecall;
    procedure Set_CodProdutor(Value: Integer); safecall;
    function Get_CodPropriedade: Integer; safecall;
    procedure Set_CodPropriedade(Value: Integer); safecall;
    function Get_CodSisBov: WideString; safecall;
    procedure Set_CodSisBov(const Value: WideString); safecall;
    function Get_CodArqImportSisBov: Integer; safecall;
    procedure Set_CodArqImportSisBov(Value: Integer); safecall;
    function Get_NomArqImportSisBov: WideString; safecall;
    procedure Set_NomArqImportSisBov(const Value: WideString); safecall;
    function Get_NomArqUpload: WideString; safecall;
    procedure Set_NomArqUpload(const Value: WideString); safecall;
    function Get_NomUsuarioUpload: WideString; safecall;
    procedure Set_NomUsuarioUpload(const Value: WideString); safecall;
    function Get_DtaImportacao: TDateTime; safecall;
    procedure Set_DtaImportacao(Value: TDateTime); safecall;
    function Get_QtdVezesProcessamento: Integer; safecall;
    procedure Set_QtdVezesProcessamento(Value: Integer); safecall;
    function Get_DtaUltimoProcessamento: TDateTime; safecall;
    procedure Set_DtaUltimoProcessamento(Value: TDateTime); safecall;
    function Get_QtdLinhas: Integer; safecall;
    procedure Set_QtdLinhas(Value: Integer); safecall;
    function Get_QtdLinhasErroUltimoProc: Integer; safecall;
    procedure Set_QtdLinhasErroUltimoProc(Value: Integer); safecall;
    function Get_QtdLinhasLogUltimoProc: Integer; safecall;
    procedure Set_QtdLinhasLogUltimoProc(Value: Integer); safecall;
    function Get_CodTipoArqImportSisBov: Integer; safecall;
    procedure Set_CodTipoArqImportSisBov(Value: Integer); safecall;
    function Get_TxtDados: WideString; safecall;
    procedure Set_TxtDados(const Value: WideString); safecall;
    function Get_CodUsuarioUpload: Integer; safecall;
    procedure Set_CodUsuarioUpload(Value: Integer); safecall;
    function Get_QtdLinhasProcessadas: Integer; safecall;
    procedure Set_QtdLinhasProcessadas(Value: Integer); safecall;
    function Get_CodTipoOrigemArqImport: Integer; safecall;
    procedure Set_CodTipoOrigemArqImport(Value: Integer); safecall;
    function Get_CodSituacaoArqImport: WideString; safecall;
    procedure Set_CodSituacaoArqImport(const Value: WideString); safecall;
    function Get_TxtMensagem: WideString; safecall;
    procedure Set_TxtMensagem(const Value: WideString); safecall;
    function Get_DesTipoOrigemArqImport: WideString; safecall;
    procedure Set_DesTipoOrigemArqImport(const Value: WideString); safecall;
    function Get_DesSituacaoArqImport: WideString; safecall;
    procedure Set_DesSituacaoArqImport(const Value: WideString); safecall;
    property Nirf: WideString read Get_Nirf write Set_Nirf;
    property NumCPFCNPJ: WideString read Get_NumCPFCNPJ write Set_NumCPFCNPJ;
    property CodProdutor: Integer read Get_CodProdutor write Set_CodProdutor;
    property CodPropriedade: Integer read Get_CodPropriedade write Set_CodPropriedade;
    property CodSisBov: WideString read Get_CodSisBov write Set_CodSisBov;
    property CodArqImportSisBov: Integer read Get_CodArqImportSisBov write Set_CodArqImportSisBov;
    property NomArqImportSisBov: WideString read Get_NomArqImportSisBov write Set_NomArqImportSisBov;
    property NomArqUpload: WideString read Get_NomArqUpload write Set_NomArqUpload;
    property NomUsuarioUpload: WideString read Get_NomUsuarioUpload write Set_NomUsuarioUpload;
    property DtaImportacao: TDateTime read Get_DtaImportacao write Set_DtaImportacao;
    property QtdVezesProcessamento: Integer read Get_QtdVezesProcessamento write Set_QtdVezesProcessamento;
    property DtaUltimoProcessamento: TDateTime read Get_DtaUltimoProcessamento write Set_DtaUltimoProcessamento;
    property QtdLinhas: Integer read Get_QtdLinhas write Set_QtdLinhas;
    property QtdLinhasErroUltimoProc: Integer read Get_QtdLinhasErroUltimoProc write Set_QtdLinhasErroUltimoProc;
    property QtdLinhasLogUltimoProc: Integer read Get_QtdLinhasLogUltimoProc write Set_QtdLinhasLogUltimoProc;
    property CodTipoArqImportSisBov: Integer read Get_CodTipoArqImportSisBov write Set_CodTipoArqImportSisBov;
    property TxtDados: WideString read Get_TxtDados write Set_TxtDados;
    property CodUsuarioUpload: Integer read Get_CodUsuarioUpload write Set_CodUsuarioUpload;
    property QtdLinhasProcessadas: Integer read Get_QtdLinhasProcessadas write Set_QtdLinhasProcessadas;
    property CodTipoOrigemArqImport: Integer read Get_CodTipoOrigemArqImport write Set_CodTipoOrigemArqImport;
    property CodSituacaoArqImport: WideString read Get_CodSituacaoArqImport write Set_CodSituacaoArqImport;
    property TxtMensagem: WideString read Get_TxtMensagem write Set_TxtMensagem;
    property DesTipoOrigemArqImport: WideString read Get_DesTipoOrigemArqImport write Set_DesTipoOrigemArqImport;
    property DesSituacaoArqImport: WideString read Get_DesSituacaoArqImport write Set_DesSituacaoArqImport;
  end;

// *********************************************************************//
// DispIntf:  IImportacaoSISBOVDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9F5B8361-016F-44B7-9A29-0E57E772ACAF}
// *********************************************************************//
  IImportacaoSISBOVDisp = dispinterface
    ['{9F5B8361-016F-44B7-9A29-0E57E772ACAF}']
    property Nirf: WideString dispid 1;
    property NumCPFCNPJ: WideString dispid 2;
    property CodProdutor: Integer dispid 3;
    property CodPropriedade: Integer dispid 6;
    property CodSisBov: WideString dispid 7;
    property CodArqImportSisBov: Integer dispid 8;
    property NomArqImportSisBov: WideString dispid 9;
    property NomArqUpload: WideString dispid 10;
    property NomUsuarioUpload: WideString dispid 11;
    property DtaImportacao: TDateTime dispid 13;
    property QtdVezesProcessamento: Integer dispid 14;
    property DtaUltimoProcessamento: TDateTime dispid 15;
    property QtdLinhas: Integer dispid 16;
    property QtdLinhasErroUltimoProc: Integer dispid 17;
    property QtdLinhasLogUltimoProc: Integer dispid 18;
    property CodTipoArqImportSisBov: Integer dispid 19;
    property TxtDados: WideString dispid 4;
    property CodUsuarioUpload: Integer dispid 5;
    property QtdLinhasProcessadas: Integer dispid 12;
    property CodTipoOrigemArqImport: Integer dispid 20;
    property CodSituacaoArqImport: WideString dispid 21;
    property TxtMensagem: WideString dispid 22;
    property DesTipoOrigemArqImport: WideString dispid 23;
    property DesSituacaoArqImport: WideString dispid 24;
  end;

// *********************************************************************//
// Interface: IImportacoesSISBOV
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A03EA83B-B452-416D-A87E-909D99C0B2D2}
// *********************************************************************//
  IImportacoesSISBOV = interface(IDispatch)
    ['{A03EA83B-B452-416D-A87E-909D99C0B2D2}']
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoPrimeiro; safecall;
    function PesquisarTipoArquivo: Integer; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function NumeroRegistros: Integer; safecall;
    function Processar(CodArquivoImportacao: Integer): Integer; safecall;
    function Excluir(CodArquivoImportacao: Integer): Integer; safecall;
    function Pesquisar(DtaImportacaoInicio: TDateTime; DtaImportacaoFim: TDateTime; 
                       DtaUltimoProcessamentoInicio: TDateTime; 
                       DtaUltimoProcessamentoFim: TDateTime; const LoginUsuario: WideString; 
                       const IndErrosNoProcessamento: WideString; 
                       const IndArquivoProcessado: WideString; CodTipoArquivoImportacao: Integer; 
                       NumSolicitacao: Integer; const NomeProdutor: WideString; 
                       const CNPJ_CPF: WideString; const NomePropriedade: WideString; 
                       const Nirf: WideString; CodLocalizacaoSisbov: Integer): Integer; safecall;
    function Buscar(CodArquivoImportacao: Integer): Integer; safecall;
    function ArmazenarArqUpload(const NomArquivoUpload: WideString; TipoArquivoImportacao: Integer; 
                                CodOrigemArquivoUsuario: Integer): Integer; safecall;
    function Get_ImportacaoSISBOV: IImportacaoSISBOV; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function PesquisarOcorrencia(CodArquivoImportacao: Integer; CodTipoLinhaImportacao: Integer; 
                                 CodTipoMensagem: Integer): Integer; safecall;
    function GerarRelatorioAutenticacao(const NumCNPJCPFProdutor: WideString; 
                                        const NomPessoaProdutor: WideString; 
                                        const SglProdutor: WideString; 
                                        const NumImovelReceitaFederal: WideString; 
                                        CodLocalizacaoSisbov: Integer; 
                                        const NomPropriedadeRural: WideString; CodEstado: Integer; 
                                        const NomArqUpload: WideString; 
                                        DtaImportacaoInicio: TDateTime; 
                                        DtaImportacaoFim: TDateTime; CodPaisSisBov: Integer; 
                                        CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                        CodAnimalSisbov: Integer; Tipo: Integer): WideString; safecall;
    property ImportacaoSISBOV: IImportacaoSISBOV read Get_ImportacaoSISBOV;
  end;

// *********************************************************************//
// DispIntf:  IImportacoesSISBOVDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A03EA83B-B452-416D-A87E-909D99C0B2D2}
// *********************************************************************//
  IImportacoesSISBOVDisp = dispinterface
    ['{A03EA83B-B452-416D-A87E-909D99C0B2D2}']
    function BOF: WordBool; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    procedure IrAoAnterior; dispid 4;
    procedure IrAoUltimo; dispid 5;
    procedure IrAoPrimeiro; dispid 6;
    function PesquisarTipoArquivo: Integer; dispid 7;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 9;
    function NumeroRegistros: Integer; dispid 10;
    function Processar(CodArquivoImportacao: Integer): Integer; dispid 11;
    function Excluir(CodArquivoImportacao: Integer): Integer; dispid 12;
    function Pesquisar(DtaImportacaoInicio: TDateTime; DtaImportacaoFim: TDateTime; 
                       DtaUltimoProcessamentoInicio: TDateTime; 
                       DtaUltimoProcessamentoFim: TDateTime; const LoginUsuario: WideString; 
                       const IndErrosNoProcessamento: WideString; 
                       const IndArquivoProcessado: WideString; CodTipoArquivoImportacao: Integer; 
                       NumSolicitacao: Integer; const NomeProdutor: WideString; 
                       const CNPJ_CPF: WideString; const NomePropriedade: WideString; 
                       const Nirf: WideString; CodLocalizacaoSisbov: Integer): Integer; dispid 13;
    function Buscar(CodArquivoImportacao: Integer): Integer; dispid 14;
    function ArmazenarArqUpload(const NomArquivoUpload: WideString; TipoArquivoImportacao: Integer; 
                                CodOrigemArquivoUsuario: Integer): Integer; dispid 16;
    property ImportacaoSISBOV: IImportacaoSISBOV readonly dispid 8;
    procedure Posicionar(NumRegistro: Integer); dispid 15;
    function PesquisarOcorrencia(CodArquivoImportacao: Integer; CodTipoLinhaImportacao: Integer; 
                                 CodTipoMensagem: Integer): Integer; dispid 17;
    function GerarRelatorioAutenticacao(const NumCNPJCPFProdutor: WideString; 
                                        const NomPessoaProdutor: WideString; 
                                        const SglProdutor: WideString; 
                                        const NumImovelReceitaFederal: WideString; 
                                        CodLocalizacaoSisbov: Integer; 
                                        const NomPropriedadeRural: WideString; CodEstado: Integer; 
                                        const NomArqUpload: WideString; 
                                        DtaImportacaoInicio: TDateTime; 
                                        DtaImportacaoFim: TDateTime; CodPaisSisBov: Integer; 
                                        CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                                        CodAnimalSisbov: Integer; Tipo: Integer): WideString; dispid 201;
  end;

// *********************************************************************//
// Interface: ITipoOrigemArqImport
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {91C16053-6366-461C-8141-B03F159B3A67}
// *********************************************************************//
  ITipoOrigemArqImport = interface(IDispatch)
    ['{91C16053-6366-461C-8141-B03F159B3A67}']
    function Get_CodTipoOrigemArqImport: Integer; safecall;
    procedure Set_CodTipoOrigemArqImport(Value: Integer); safecall;
    function Get_SglCodTipoOrigemArqImport: WideString; safecall;
    procedure Set_SglCodTipoOrigemArqImport(const Value: WideString); safecall;
    function Get_DesTipoOrigemArqImport: WideString; safecall;
    procedure Set_DesTipoOrigemArqImport(const Value: WideString); safecall;
    property CodTipoOrigemArqImport: Integer read Get_CodTipoOrigemArqImport write Set_CodTipoOrigemArqImport;
    property SglCodTipoOrigemArqImport: WideString read Get_SglCodTipoOrigemArqImport write Set_SglCodTipoOrigemArqImport;
    property DesTipoOrigemArqImport: WideString read Get_DesTipoOrigemArqImport write Set_DesTipoOrigemArqImport;
  end;

// *********************************************************************//
// DispIntf:  ITipoOrigemArqImportDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {91C16053-6366-461C-8141-B03F159B3A67}
// *********************************************************************//
  ITipoOrigemArqImportDisp = dispinterface
    ['{91C16053-6366-461C-8141-B03F159B3A67}']
    property CodTipoOrigemArqImport: Integer dispid 1;
    property SglCodTipoOrigemArqImport: WideString dispid 2;
    property DesTipoOrigemArqImport: WideString dispid 3;
  end;

// *********************************************************************//
// Interface: ITiposOrigemArqImport
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C89B7FC9-0434-433A-8ED1-772EC4AD3D4F}
// *********************************************************************//
  ITiposOrigemArqImport = interface(IDispatch)
    ['{C89B7FC9-0434-433A-8ED1-772EC4AD3D4F}']
    function Pesquisar: Integer; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function NumeroRegistros: Integer; safecall;
    function Get_TipoOrigemArqImport: ITipoOrigemArqImport; safecall;
    property TipoOrigemArqImport: ITipoOrigemArqImport read Get_TipoOrigemArqImport;
  end;

// *********************************************************************//
// DispIntf:  ITiposOrigemArqImportDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C89B7FC9-0434-433A-8ED1-772EC4AD3D4F}
// *********************************************************************//
  ITiposOrigemArqImportDisp = dispinterface
    ['{C89B7FC9-0434-433A-8ED1-772EC4AD3D4F}']
    function Pesquisar: Integer; dispid 1;
    function BOF: WordBool; dispid 2;
    function EOF: WordBool; dispid 3;
    procedure IrAoProximo; dispid 4;
    procedure IrAoAnterior; dispid 5;
    procedure IrAoPrimeiro; dispid 6;
    procedure IrAoUltimo; dispid 7;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    property TipoOrigemArqImport: ITipoOrigemArqImport readonly dispid 10;
  end;

// *********************************************************************//
// Interface: IRegimesPosseUso
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D2B6D607-A1C3-4477-BF98-AA8A00C039EB}
// *********************************************************************//
  IRegimesPosseUso = interface(IDispatch)
    ['{D2B6D607-A1C3-4477-BF98-AA8A00C039EB}']
    function Pesquisar: Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRegimesPosseUsoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D2B6D607-A1C3-4477-BF98-AA8A00C039EB}
// *********************************************************************//
  IRegimesPosseUsoDisp = dispinterface
    ['{D2B6D607-A1C3-4477-BF98-AA8A00C039EB}']
    function Pesquisar: Integer; dispid 1;
    function EOF: WordBool; dispid 2;
    procedure IrAoProximo; dispid 3;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 4;
    procedure FecharPesquisa; dispid 5;
  end;

// *********************************************************************//
// Interface: IArquivoFTPEnvio
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC6A8047-8F22-48E4-BD88-BAFA46835F73}
// *********************************************************************//
  IArquivoFTPEnvio = interface(IDispatch)
    ['{BC6A8047-8F22-48E4-BD88-BAFA46835F73}']
    function Get_CodArquivoFTPEnvio: Integer; safecall;
    procedure Set_CodArquivoFTPEnvio(Value: Integer); safecall;
    function Get_CodRotinaFTPEnvio: Integer; safecall;
    procedure Set_CodRotinaFTPEnvio(Value: Integer); safecall;
    function Get_DesRotinaFTPEnvio: WideString; safecall;
    procedure Set_DesRotinaFTPEnvio(const Value: WideString); safecall;
    function Get_NomArquivoLocal: WideString; safecall;
    procedure Set_NomArquivoLocal(const Value: WideString); safecall;
    function Get_NomArquivoRemoto: WideString; safecall;
    procedure Set_NomArquivoRemoto(const Value: WideString); safecall;
    function Get_TxtCaminhoLocal: WideString; safecall;
    procedure Set_TxtCaminhoLocal(const Value: WideString); safecall;
    function Get_QtdBytesArquivo: Integer; safecall;
    procedure Set_QtdBytesArquivo(Value: Integer); safecall;
    function Get_CodTipoMensagem: Integer; safecall;
    procedure Set_CodTipoMensagem(Value: Integer); safecall;
    function Get_TxtMensagem: WideString; safecall;
    procedure Set_TxtMensagem(const Value: WideString); safecall;
    function Get_CodSituacaoArquivoFTP: Integer; safecall;
    procedure Set_CodSituacaoArquivoFTP(Value: Integer); safecall;
    function Get_SglSituacaoArquivoFTP: WideString; safecall;
    procedure Set_SglSituacaoArquivoFTP(const Value: WideString); safecall;
    function Get_DesSituacaoArquivoFTP: WideString; safecall;
    procedure Set_DesSituacaoArquivoFTP(const Value: WideString); safecall;
    function Get_DtaUltimaTransferencia: TDateTime; safecall;
    procedure Set_DtaUltimaTransferencia(Value: TDateTime); safecall;
    function Get_QtdDuracaoTransferencia: Integer; safecall;
    procedure Set_QtdDuracaoTransferencia(Value: Integer); safecall;
    function Get_QtdVezesTransferencia: Integer; safecall;
    procedure Set_QtdVezesTransferencia(Value: Integer); safecall;
    function Get_DesTipoMensagem: WideString; safecall;
    procedure Set_DesTipoMensagem(const Value: WideString); safecall;
    property CodArquivoFTPEnvio: Integer read Get_CodArquivoFTPEnvio write Set_CodArquivoFTPEnvio;
    property CodRotinaFTPEnvio: Integer read Get_CodRotinaFTPEnvio write Set_CodRotinaFTPEnvio;
    property DesRotinaFTPEnvio: WideString read Get_DesRotinaFTPEnvio write Set_DesRotinaFTPEnvio;
    property NomArquivoLocal: WideString read Get_NomArquivoLocal write Set_NomArquivoLocal;
    property NomArquivoRemoto: WideString read Get_NomArquivoRemoto write Set_NomArquivoRemoto;
    property TxtCaminhoLocal: WideString read Get_TxtCaminhoLocal write Set_TxtCaminhoLocal;
    property QtdBytesArquivo: Integer read Get_QtdBytesArquivo write Set_QtdBytesArquivo;
    property CodTipoMensagem: Integer read Get_CodTipoMensagem write Set_CodTipoMensagem;
    property TxtMensagem: WideString read Get_TxtMensagem write Set_TxtMensagem;
    property CodSituacaoArquivoFTP: Integer read Get_CodSituacaoArquivoFTP write Set_CodSituacaoArquivoFTP;
    property SglSituacaoArquivoFTP: WideString read Get_SglSituacaoArquivoFTP write Set_SglSituacaoArquivoFTP;
    property DesSituacaoArquivoFTP: WideString read Get_DesSituacaoArquivoFTP write Set_DesSituacaoArquivoFTP;
    property DtaUltimaTransferencia: TDateTime read Get_DtaUltimaTransferencia write Set_DtaUltimaTransferencia;
    property QtdDuracaoTransferencia: Integer read Get_QtdDuracaoTransferencia write Set_QtdDuracaoTransferencia;
    property QtdVezesTransferencia: Integer read Get_QtdVezesTransferencia write Set_QtdVezesTransferencia;
    property DesTipoMensagem: WideString read Get_DesTipoMensagem write Set_DesTipoMensagem;
  end;

// *********************************************************************//
// DispIntf:  IArquivoFTPEnvioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC6A8047-8F22-48E4-BD88-BAFA46835F73}
// *********************************************************************//
  IArquivoFTPEnvioDisp = dispinterface
    ['{BC6A8047-8F22-48E4-BD88-BAFA46835F73}']
    property CodArquivoFTPEnvio: Integer dispid 201;
    property CodRotinaFTPEnvio: Integer dispid 202;
    property DesRotinaFTPEnvio: WideString dispid 203;
    property NomArquivoLocal: WideString dispid 204;
    property NomArquivoRemoto: WideString dispid 205;
    property TxtCaminhoLocal: WideString dispid 206;
    property QtdBytesArquivo: Integer dispid 207;
    property CodTipoMensagem: Integer dispid 208;
    property TxtMensagem: WideString dispid 209;
    property CodSituacaoArquivoFTP: Integer dispid 210;
    property SglSituacaoArquivoFTP: WideString dispid 211;
    property DesSituacaoArquivoFTP: WideString dispid 212;
    property DtaUltimaTransferencia: TDateTime dispid 213;
    property QtdDuracaoTransferencia: Integer dispid 214;
    property QtdVezesTransferencia: Integer dispid 215;
    property DesTipoMensagem: WideString dispid 216;
  end;

// *********************************************************************//
// Interface: IArquivosFTPEnvio
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F4CA2542-58E3-4E35-A92B-EDD4F2B0C64C}
// *********************************************************************//
  IArquivosFTPEnvio = interface(IDispatch)
    ['{F4CA2542-58E3-4E35-A92B-EDD4F2B0C64C}']
    function Get_ArquivoFTPEnvio: IArquivoFTPEnvio; safecall;
    function Buscar(CodArquivoFTPEnvio: Integer): Integer; safecall;
    function Pesquisar(CodRotinaFTPEnvio: Integer; const NomArquivoLocal: WideString; 
                       CodTipoMensagem: Integer; CodSituacaoArquivoFTP: Integer; 
                       DtaUltimaTransferenciaInicio: TDateTime; 
                       DtaUltimaTransferenciaFim: TDateTime; 
                       const IndAindaSemTransferencia: WideString): Integer; safecall;
    function AlterarSituacaoParaPendente(CodArquivoFTPEnvio: Integer): Integer; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function NumeroRegistros: Integer; safecall;
    function PesquisarErrosFTPEnvio(CodArquivoFTPEnvio: Integer): Integer; safecall;
    function Enviar(CodArquivo: Integer; ReadTimeOut: Integer): Integer; safecall;
    property ArquivoFTPEnvio: IArquivoFTPEnvio read Get_ArquivoFTPEnvio;
  end;

// *********************************************************************//
// DispIntf:  IArquivosFTPEnvioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F4CA2542-58E3-4E35-A92B-EDD4F2B0C64C}
// *********************************************************************//
  IArquivosFTPEnvioDisp = dispinterface
    ['{F4CA2542-58E3-4E35-A92B-EDD4F2B0C64C}']
    property ArquivoFTPEnvio: IArquivoFTPEnvio readonly dispid 201;
    function Buscar(CodArquivoFTPEnvio: Integer): Integer; dispid 203;
    function Pesquisar(CodRotinaFTPEnvio: Integer; const NomArquivoLocal: WideString; 
                       CodTipoMensagem: Integer; CodSituacaoArquivoFTP: Integer; 
                       DtaUltimaTransferenciaInicio: TDateTime; 
                       DtaUltimaTransferenciaFim: TDateTime; 
                       const IndAindaSemTransferencia: WideString): Integer; dispid 204;
    function AlterarSituacaoParaPendente(CodArquivoFTPEnvio: Integer): Integer; dispid 202;
    function BOF: WordBool; dispid 205;
    function EOF: WordBool; dispid 206;
    procedure IrAoPrimeiro; dispid 207;
    procedure IrAoUltimo; dispid 208;
    procedure IrAoProximo; dispid 209;
    procedure IrAoAnterior; dispid 210;
    procedure Posicionar(NumPosicao: Integer); dispid 211;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 212;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 213;
    function NumeroRegistros: Integer; dispid 214;
    function PesquisarErrosFTPEnvio(CodArquivoFTPEnvio: Integer): Integer; dispid 215;
    function Enviar(CodArquivo: Integer; ReadTimeOut: Integer): Integer; dispid 216;
  end;

// *********************************************************************//
// Interface: IFormasPagamentoIdentificador
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7945070-3DFD-48E7-8A47-4A41B9950F28}
// *********************************************************************//
  IFormasPagamentoIdentificador = interface(IDispatch)
    ['{A7945070-3DFD-48E7-8A47-4A41B9950F28}']
    function Pesquisar(CodFabricanteIdentificador: Integer): Integer; safecall;
    procedure FecharPesquisa; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure IrAoPrimeiro; safecall;
  end;

// *********************************************************************//
// DispIntf:  IFormasPagamentoIdentificadorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7945070-3DFD-48E7-8A47-4A41B9950F28}
// *********************************************************************//
  IFormasPagamentoIdentificadorDisp = dispinterface
    ['{A7945070-3DFD-48E7-8A47-4A41B9950F28}']
    function Pesquisar(CodFabricanteIdentificador: Integer): Integer; dispid 201;
    procedure FecharPesquisa; dispid 202;
    function EOF: WordBool; dispid 203;
    procedure IrAoProximo; dispid 204;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 205;
    procedure IrAoPrimeiro; dispid 206;
  end;

// *********************************************************************//
// Interface: IOcorrenciaSistema
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {98C65F81-DE35-4E9F-B474-3876C0A79619}
// *********************************************************************//
  IOcorrenciaSistema = interface(IDispatch)
    ['{98C65F81-DE35-4E9F-B474-3876C0A79619}']
    function Get_CodOcorrenciaSistema: Integer; safecall;
    procedure Set_CodOcorrenciaSistema(Value: Integer); safecall;
    function Get_DtaOcorrenciaSistema: TDateTime; safecall;
    procedure Set_DtaOcorrenciaSistema(Value: TDateTime); safecall;
    function Get_IndOcorrenciaTratada: WideString; safecall;
    procedure Set_IndOcorrenciaTratada(const Value: WideString); safecall;
    function Get_CodAplicativo: Integer; safecall;
    procedure Set_CodAplicativo(Value: Integer); safecall;
    function Get_NomAplicativo: WideString; safecall;
    procedure Set_NomAplicativo(const Value: WideString); safecall;
    function Get_CodTipoMensagem: Integer; safecall;
    procedure Set_CodTipoMensagem(Value: Integer); safecall;
    function Get_DesTipoMensagem: WideString; safecall;
    procedure Set_DesTipoMensagem(const Value: WideString); safecall;
    function Get_TxtMensagem: WideString; safecall;
    procedure Set_TxtMensagem(const Value: WideString); safecall;
    function Get_TxtIdentificacao: WideString; safecall;
    procedure Set_TxtIdentificacao(const Value: WideString); safecall;
    function Get_TxtLegendaIdentificacao: WideString; safecall;
    procedure Set_TxtLegendaIdentificacao(const Value: WideString); safecall;
    property CodOcorrenciaSistema: Integer read Get_CodOcorrenciaSistema write Set_CodOcorrenciaSistema;
    property DtaOcorrenciaSistema: TDateTime read Get_DtaOcorrenciaSistema write Set_DtaOcorrenciaSistema;
    property IndOcorrenciaTratada: WideString read Get_IndOcorrenciaTratada write Set_IndOcorrenciaTratada;
    property CodAplicativo: Integer read Get_CodAplicativo write Set_CodAplicativo;
    property NomAplicativo: WideString read Get_NomAplicativo write Set_NomAplicativo;
    property CodTipoMensagem: Integer read Get_CodTipoMensagem write Set_CodTipoMensagem;
    property DesTipoMensagem: WideString read Get_DesTipoMensagem write Set_DesTipoMensagem;
    property TxtMensagem: WideString read Get_TxtMensagem write Set_TxtMensagem;
    property TxtIdentificacao: WideString read Get_TxtIdentificacao write Set_TxtIdentificacao;
    property TxtLegendaIdentificacao: WideString read Get_TxtLegendaIdentificacao write Set_TxtLegendaIdentificacao;
  end;

// *********************************************************************//
// DispIntf:  IOcorrenciaSistemaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {98C65F81-DE35-4E9F-B474-3876C0A79619}
// *********************************************************************//
  IOcorrenciaSistemaDisp = dispinterface
    ['{98C65F81-DE35-4E9F-B474-3876C0A79619}']
    property CodOcorrenciaSistema: Integer dispid 201;
    property DtaOcorrenciaSistema: TDateTime dispid 202;
    property IndOcorrenciaTratada: WideString dispid 203;
    property CodAplicativo: Integer dispid 204;
    property NomAplicativo: WideString dispid 205;
    property CodTipoMensagem: Integer dispid 206;
    property DesTipoMensagem: WideString dispid 207;
    property TxtMensagem: WideString dispid 208;
    property TxtIdentificacao: WideString dispid 209;
    property TxtLegendaIdentificacao: WideString dispid 210;
  end;

// *********************************************************************//
// Interface: IOcorrenciasSistema
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8EB77B09-396B-480E-9442-3E3F5C5A539C}
// *********************************************************************//
  IOcorrenciasSistema = interface(IDispatch)
    ['{8EB77B09-396B-480E-9442-3E3F5C5A539C}']
    function Get_OcorrenciaSistema: IOcorrenciaSistema; safecall;
    function Buscar(CodOcorrenciaSistema: Integer): Integer; safecall;
    function Pesquisar(DtaOcorrenciaInicio: TDateTime; DtaOcorrenciaFim: TDateTime; 
                       const IndOcorrenciaTratada: WideString; CodAplicativo: Integer; 
                       CodTipoMensagem: Integer): Integer; safecall;
    function AlterarParaTratada(CodOcorrenciaSistema: Integer): Integer; safecall;
    function AlterarParaNaoTratada(CodOcorrenciaSistema: Integer): Integer; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function NumeroRegistros: Integer; safecall;
    property OcorrenciaSistema: IOcorrenciaSistema read Get_OcorrenciaSistema;
  end;

// *********************************************************************//
// DispIntf:  IOcorrenciasSistemaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8EB77B09-396B-480E-9442-3E3F5C5A539C}
// *********************************************************************//
  IOcorrenciasSistemaDisp = dispinterface
    ['{8EB77B09-396B-480E-9442-3E3F5C5A539C}']
    property OcorrenciaSistema: IOcorrenciaSistema readonly dispid 201;
    function Buscar(CodOcorrenciaSistema: Integer): Integer; dispid 202;
    function Pesquisar(DtaOcorrenciaInicio: TDateTime; DtaOcorrenciaFim: TDateTime; 
                       const IndOcorrenciaTratada: WideString; CodAplicativo: Integer; 
                       CodTipoMensagem: Integer): Integer; dispid 203;
    function AlterarParaTratada(CodOcorrenciaSistema: Integer): Integer; dispid 204;
    function AlterarParaNaoTratada(CodOcorrenciaSistema: Integer): Integer; dispid 205;
    function BOF: WordBool; dispid 206;
    function EOF: WordBool; dispid 207;
    procedure IrAoPrimeiro; dispid 208;
    procedure IrAoUltimo; dispid 209;
    procedure IrAoProximo; dispid 210;
    procedure IrAoAnterior; dispid 211;
    procedure Posicionar(NumPosicao: Integer); dispid 212;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 213;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 214;
    function NumeroRegistros: Integer; dispid 215;
  end;

// *********************************************************************//
// Interface: IFormasPagamentoOS
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {00DD0343-1CC4-44EE-A2A2-75FFF6A1C17B}
// *********************************************************************//
  IFormasPagamentoOS = interface(IDispatch)
    ['{00DD0343-1CC4-44EE-A2A2-75FFF6A1C17B}']
    function Pesquisar: Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  IFormasPagamentoOSDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {00DD0343-1CC4-44EE-A2A2-75FFF6A1C17B}
// *********************************************************************//
  IFormasPagamentoOSDisp = dispinterface
    ['{00DD0343-1CC4-44EE-A2A2-75FFF6A1C17B}']
    function Pesquisar: Integer; dispid 201;
    function EOF: WordBool; dispid 202;
    procedure IrAoProximo; dispid 203;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 204;
    procedure FecharPesquisa; dispid 205;
  end;

// *********************************************************************//
// Interface: IFabricanteIdentificador
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F89A0A0-7218-470C-9893-F199AF640660}
// *********************************************************************//
  IFabricanteIdentificador = interface(IDispatch)
    ['{4F89A0A0-7218-470C-9893-F199AF640660}']
    function Get_CodFabricanteIdentificador: Integer; safecall;
    procedure Set_CodFabricanteIdentificador(Value: Integer); safecall;
    function Get_NomFabricanteIdentificador: WideString; safecall;
    procedure Set_NomFabricanteIdentificador(const Value: WideString); safecall;
    function Get_NomReduzidoFabricante: WideString; safecall;
    procedure Set_NomReduzidoFabricante(const Value: WideString); safecall;
    function Get_NumCNPJFabricante: WideString; safecall;
    procedure Set_NumCNPJFabricante(const Value: WideString); safecall;
    function Get_NumCNPJFabricanteFormatado: WideString; safecall;
    procedure Set_NumCNPJFabricanteFormatado(const Value: WideString); safecall;
    function Get_IndEnvioPedidoEmail: WideString; safecall;
    procedure Set_IndEnvioPedidoEmail(const Value: WideString); safecall;
    function Get_IndEnvioPedidoFTP: WideString; safecall;
    procedure Set_IndEnvioPedidoFTP(const Value: WideString); safecall;
    function Get_IndRetornoSituacaoFTP: WideString; safecall;
    procedure Set_IndRetornoSituacaoFTP(const Value: WideString); safecall;
    function Get_TxtEmailFabricante: WideString; safecall;
    procedure Set_TxtEmailFabricante(const Value: WideString); safecall;
    function Get_CodRotinaFTPEnvio: Integer; safecall;
    procedure Set_CodRotinaFTPEnvio(Value: Integer); safecall;
    function Get_DesRotinaFTPEnvio: WideString; safecall;
    procedure Set_DesRotinaFTPEnvio(const Value: WideString); safecall;
    function Get_CodRotinaFTPRetorno: Integer; safecall;
    procedure Set_CodRotinaFTPRetorno(Value: Integer); safecall;
    function Get_DesRotinaFTPRetorno: WideString; safecall;
    procedure Set_DesRotinaFTPRetorno(const Value: WideString); safecall;
    function Get_NumUltimoPedido: Integer; safecall;
    procedure Set_NumUltimoPedido(Value: Integer); safecall;
    function Get_NumMaximoPedido: Integer; safecall;
    procedure Set_NumMaximoPedido(Value: Integer); safecall;
    function Get_NumUltimaRemessa: Integer; safecall;
    procedure Set_NumUltimaRemessa(Value: Integer); safecall;
    function Get_NumOrdem: Integer; safecall;
    procedure Set_NumOrdem(Value: Integer); safecall;
    property CodFabricanteIdentificador: Integer read Get_CodFabricanteIdentificador write Set_CodFabricanteIdentificador;
    property NomFabricanteIdentificador: WideString read Get_NomFabricanteIdentificador write Set_NomFabricanteIdentificador;
    property NomReduzidoFabricante: WideString read Get_NomReduzidoFabricante write Set_NomReduzidoFabricante;
    property NumCNPJFabricante: WideString read Get_NumCNPJFabricante write Set_NumCNPJFabricante;
    property NumCNPJFabricanteFormatado: WideString read Get_NumCNPJFabricanteFormatado write Set_NumCNPJFabricanteFormatado;
    property IndEnvioPedidoEmail: WideString read Get_IndEnvioPedidoEmail write Set_IndEnvioPedidoEmail;
    property IndEnvioPedidoFTP: WideString read Get_IndEnvioPedidoFTP write Set_IndEnvioPedidoFTP;
    property IndRetornoSituacaoFTP: WideString read Get_IndRetornoSituacaoFTP write Set_IndRetornoSituacaoFTP;
    property TxtEmailFabricante: WideString read Get_TxtEmailFabricante write Set_TxtEmailFabricante;
    property CodRotinaFTPEnvio: Integer read Get_CodRotinaFTPEnvio write Set_CodRotinaFTPEnvio;
    property DesRotinaFTPEnvio: WideString read Get_DesRotinaFTPEnvio write Set_DesRotinaFTPEnvio;
    property CodRotinaFTPRetorno: Integer read Get_CodRotinaFTPRetorno write Set_CodRotinaFTPRetorno;
    property DesRotinaFTPRetorno: WideString read Get_DesRotinaFTPRetorno write Set_DesRotinaFTPRetorno;
    property NumUltimoPedido: Integer read Get_NumUltimoPedido write Set_NumUltimoPedido;
    property NumMaximoPedido: Integer read Get_NumMaximoPedido write Set_NumMaximoPedido;
    property NumUltimaRemessa: Integer read Get_NumUltimaRemessa write Set_NumUltimaRemessa;
    property NumOrdem: Integer read Get_NumOrdem write Set_NumOrdem;
  end;

// *********************************************************************//
// DispIntf:  IFabricanteIdentificadorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4F89A0A0-7218-470C-9893-F199AF640660}
// *********************************************************************//
  IFabricanteIdentificadorDisp = dispinterface
    ['{4F89A0A0-7218-470C-9893-F199AF640660}']
    property CodFabricanteIdentificador: Integer dispid 201;
    property NomFabricanteIdentificador: WideString dispid 202;
    property NomReduzidoFabricante: WideString dispid 203;
    property NumCNPJFabricante: WideString dispid 204;
    property NumCNPJFabricanteFormatado: WideString dispid 205;
    property IndEnvioPedidoEmail: WideString dispid 206;
    property IndEnvioPedidoFTP: WideString dispid 207;
    property IndRetornoSituacaoFTP: WideString dispid 208;
    property TxtEmailFabricante: WideString dispid 209;
    property CodRotinaFTPEnvio: Integer dispid 210;
    property DesRotinaFTPEnvio: WideString dispid 211;
    property CodRotinaFTPRetorno: Integer dispid 212;
    property DesRotinaFTPRetorno: WideString dispid 213;
    property NumUltimoPedido: Integer dispid 214;
    property NumMaximoPedido: Integer dispid 215;
    property NumUltimaRemessa: Integer dispid 216;
    property NumOrdem: Integer dispid 217;
  end;

// *********************************************************************//
// Interface: IFabricantesIdentificador
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B992F8CC-4539-49ED-A920-2527B906ACF5}
// *********************************************************************//
  IFabricantesIdentificador = interface(IDispatch)
    ['{B992F8CC-4539-49ED-A920-2527B906ACF5}']
    function Buscar(CodFabricanteIdentificador: Integer): Integer; safecall;
    function Pesquisar: Integer; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function Get_FabricanteIdentificador: IFabricanteIdentificador; safecall;
    property FabricanteIdentificador: IFabricanteIdentificador read Get_FabricanteIdentificador;
  end;

// *********************************************************************//
// DispIntf:  IFabricantesIdentificadorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B992F8CC-4539-49ED-A920-2527B906ACF5}
// *********************************************************************//
  IFabricantesIdentificadorDisp = dispinterface
    ['{B992F8CC-4539-49ED-A920-2527B906ACF5}']
    function Buscar(CodFabricanteIdentificador: Integer): Integer; dispid 201;
    function Pesquisar: Integer; dispid 202;
    function BOF: WordBool; dispid 203;
    function EOF: WordBool; dispid 204;
    function NumeroRegistros: Integer; dispid 205;
    procedure IrAoPrimeiro; dispid 206;
    procedure IrAoUltimo; dispid 207;
    procedure IrAoProximo; dispid 208;
    procedure IrAoAnterior; dispid 209;
    procedure Posicionar(NumPosicao: Integer); dispid 210;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 211;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 212;
    property FabricanteIdentificador: IFabricanteIdentificador readonly dispid 213;
  end;

// *********************************************************************//
// Interface: IIdentificacoesDuplas
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2836A773-18D9-4552-8F32-3864AC8D0BD6}
// *********************************************************************//
  IIdentificacoesDuplas = interface(IDispatch)
    ['{2836A773-18D9-4552-8F32-3864AC8D0BD6}']
    function Pesquisar(const IndEnviaPedidoIdent: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  IIdentificacoesDuplasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2836A773-18D9-4552-8F32-3864AC8D0BD6}
// *********************************************************************//
  IIdentificacoesDuplasDisp = dispinterface
    ['{2836A773-18D9-4552-8F32-3864AC8D0BD6}']
    function Pesquisar(const IndEnviaPedidoIdent: WideString): Integer; dispid 201;
    function EOF: WordBool; dispid 202;
    procedure IrAoProximo; dispid 203;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 204;
    procedure FecharPesquisa; dispid 205;
  end;

// *********************************************************************//
// Interface: IProdutosAcessorios
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6D5A4601-A66B-47CA-A384-02808189CC57}
// *********************************************************************//
  IProdutosAcessorios = interface(IDispatch)
    ['{6D5A4601-A66B-47CA-A384-02808189CC57}']
    function Pesquisar(CodFabricanteIdentificador: Integer): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    procedure IrAoPrimeiro; safecall;
  end;

// *********************************************************************//
// DispIntf:  IProdutosAcessoriosDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6D5A4601-A66B-47CA-A384-02808189CC57}
// *********************************************************************//
  IProdutosAcessoriosDisp = dispinterface
    ['{6D5A4601-A66B-47CA-A384-02808189CC57}']
    function Pesquisar(CodFabricanteIdentificador: Integer): Integer; dispid 201;
    function EOF: WordBool; dispid 202;
    procedure IrAoProximo; dispid 203;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 204;
    procedure FecharPesquisa; dispid 205;
    procedure IrAoPrimeiro; dispid 206;
  end;

// *********************************************************************//
// Interface: ISituacoesOS
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {26CC2A89-FA66-4806-B234-7DB55E7F7CF8}
// *********************************************************************//
  ISituacoesOS = interface(IDispatch)
    ['{26CC2A89-FA66-4806-B234-7DB55E7F7CF8}']
    function Pesquisar(CodSituacaoOSOrigem: Integer; const IndEnviaPedidoIdent: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  ISituacoesOSDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {26CC2A89-FA66-4806-B234-7DB55E7F7CF8}
// *********************************************************************//
  ISituacoesOSDisp = dispinterface
    ['{26CC2A89-FA66-4806-B234-7DB55E7F7CF8}']
    function Pesquisar(CodSituacaoOSOrigem: Integer; const IndEnviaPedidoIdent: WideString): Integer; dispid 201;
    function EOF: WordBool; dispid 202;
    procedure IrAoProximo; dispid 203;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 204;
    procedure FecharPesquisa; dispid 205;
  end;

// *********************************************************************//
// Interface: IEndereco
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B4D5FA36-ED62-4FCD-94F9-D843A297AF20}
// *********************************************************************//
  IEndereco = interface(IDispatch)
    ['{B4D5FA36-ED62-4FCD-94F9-D843A297AF20}']
    function Get_CodEndereco: Integer; safecall;
    procedure Set_CodEndereco(Value: Integer); safecall;
    function Get_CodTipoEndereco: Integer; safecall;
    procedure Set_CodTipoEndereco(Value: Integer); safecall;
    function Get_SglTipoEndereco: WideString; safecall;
    procedure Set_SglTipoEndereco(const Value: WideString); safecall;
    function Get_DesTipoEndereco: WideString; safecall;
    procedure Set_DesTipoEndereco(const Value: WideString); safecall;
    function Get_NomPessoaContato: WideString; safecall;
    procedure Set_NomPessoaContato(const Value: WideString); safecall;
    function Get_NumTelefone: WideString; safecall;
    procedure Set_NumTelefone(const Value: WideString); safecall;
    function Get_NumFax: WideString; safecall;
    procedure Set_NumFax(const Value: WideString); safecall;
    function Get_TxtEMail: WideString; safecall;
    procedure Set_TxtEMail(const Value: WideString); safecall;
    function Get_NomLogradouro: WideString; safecall;
    procedure Set_NomLogradouro(const Value: WideString); safecall;
    function Get_NumCEP: WideString; safecall;
    procedure Set_NumCEP(const Value: WideString); safecall;
    function Get_NomBairro: WideString; safecall;
    procedure Set_NomBairro(const Value: WideString); safecall;
    function Get_CodDistrito: Integer; safecall;
    procedure Set_CodDistrito(Value: Integer); safecall;
    function Get_NomDistrito: WideString; safecall;
    procedure Set_NomDistrito(const Value: WideString); safecall;
    function Get_CodMunicipio: Integer; safecall;
    procedure Set_CodMunicipio(Value: Integer); safecall;
    function Get_NumMunicipioIBGE: WideString; safecall;
    procedure Set_NumMunicipioIBGE(const Value: WideString); safecall;
    function Get_NomMunicipio: WideString; safecall;
    procedure Set_NomMunicipio(const Value: WideString); safecall;
    function Get_CodEstado: Integer; safecall;
    procedure Set_CodEstado(Value: Integer); safecall;
    function Get_SglEstado: WideString; safecall;
    procedure Set_SglEstado(const Value: WideString); safecall;
    function Get_NomEstado: WideString; safecall;
    procedure Set_NomEstado(const Value: WideString); safecall;
    function Get_CodPais: Integer; safecall;
    procedure Set_CodPais(Value: Integer); safecall;
    function Get_NomPais: WideString; safecall;
    procedure Set_NomPais(const Value: WideString); safecall;
    property CodEndereco: Integer read Get_CodEndereco write Set_CodEndereco;
    property CodTipoEndereco: Integer read Get_CodTipoEndereco write Set_CodTipoEndereco;
    property SglTipoEndereco: WideString read Get_SglTipoEndereco write Set_SglTipoEndereco;
    property DesTipoEndereco: WideString read Get_DesTipoEndereco write Set_DesTipoEndereco;
    property NomPessoaContato: WideString read Get_NomPessoaContato write Set_NomPessoaContato;
    property NumTelefone: WideString read Get_NumTelefone write Set_NumTelefone;
    property NumFax: WideString read Get_NumFax write Set_NumFax;
    property TxtEMail: WideString read Get_TxtEMail write Set_TxtEMail;
    property NomLogradouro: WideString read Get_NomLogradouro write Set_NomLogradouro;
    property NumCEP: WideString read Get_NumCEP write Set_NumCEP;
    property NomBairro: WideString read Get_NomBairro write Set_NomBairro;
    property CodDistrito: Integer read Get_CodDistrito write Set_CodDistrito;
    property NomDistrito: WideString read Get_NomDistrito write Set_NomDistrito;
    property CodMunicipio: Integer read Get_CodMunicipio write Set_CodMunicipio;
    property NumMunicipioIBGE: WideString read Get_NumMunicipioIBGE write Set_NumMunicipioIBGE;
    property NomMunicipio: WideString read Get_NomMunicipio write Set_NomMunicipio;
    property CodEstado: Integer read Get_CodEstado write Set_CodEstado;
    property SglEstado: WideString read Get_SglEstado write Set_SglEstado;
    property NomEstado: WideString read Get_NomEstado write Set_NomEstado;
    property CodPais: Integer read Get_CodPais write Set_CodPais;
    property NomPais: WideString read Get_NomPais write Set_NomPais;
  end;

// *********************************************************************//
// DispIntf:  IEnderecoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B4D5FA36-ED62-4FCD-94F9-D843A297AF20}
// *********************************************************************//
  IEnderecoDisp = dispinterface
    ['{B4D5FA36-ED62-4FCD-94F9-D843A297AF20}']
    property CodEndereco: Integer dispid 201;
    property CodTipoEndereco: Integer dispid 202;
    property SglTipoEndereco: WideString dispid 203;
    property DesTipoEndereco: WideString dispid 204;
    property NomPessoaContato: WideString dispid 205;
    property NumTelefone: WideString dispid 206;
    property NumFax: WideString dispid 207;
    property TxtEMail: WideString dispid 208;
    property NomLogradouro: WideString dispid 209;
    property NumCEP: WideString dispid 211;
    property NomBairro: WideString dispid 210;
    property CodDistrito: Integer dispid 212;
    property NomDistrito: WideString dispid 213;
    property CodMunicipio: Integer dispid 214;
    property NumMunicipioIBGE: WideString dispid 215;
    property NomMunicipio: WideString dispid 216;
    property CodEstado: Integer dispid 217;
    property SglEstado: WideString dispid 218;
    property NomEstado: WideString dispid 219;
    property CodPais: Integer dispid 220;
    property NomPais: WideString dispid 221;
  end;

// *********************************************************************//
// Interface: IOrdemServico
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB87F942-FC34-49D3-B172-C239BCFA9004}
// *********************************************************************//
  IOrdemServico = interface(IDispatch)
    ['{DB87F942-FC34-49D3-B172-C239BCFA9004}']
    function Get_CodOrdemServico: Integer; safecall;
    function Get_CodPessoaProdutor: Integer; safecall;
    function Get_SglProdutor: WideString; safecall;
    function Get_NomProdutor: WideString; safecall;
    function Get_NumCNPJCPFProdutor: WideString; safecall;
    function Get_CodPropriedadeRural: Integer; safecall;
    function Get_NomPropriedadeRural: WideString; safecall;
    function Get_NumImovelReceitaFederal: WideString; safecall;
    function Get_CodPessoaTecnico: Integer; safecall;
    function Get_NomTecnico: WideString; safecall;
    function Get_numCNPJCPFTecnico: WideString; safecall;
    function Get_CodPessoaVendedor: Integer; safecall;
    function Get_NomVendedor: WideString; safecall;
    function Get_NumCNPJCPFVendedor: WideString; safecall;
    function Get_QtdAnimais: Integer; safecall;
    function Get_NumSolicitacaoSISBOV: Integer; safecall;
    function Get_CodPaisSISBOVInicial: Integer; safecall;
    function Get_CodEstadoSISBOVInicial: Integer; safecall;
    function Get_CodMicroRegiaoSISBOVInicial: Integer; safecall;
    function Get_CodAnimalSISBOVInicial: Integer; safecall;
    function Get_NumDVSISBOVInicial: Integer; safecall;
    function Get_CodFormaPagamentoOS: Integer; safecall;
    function Get_EnderecoEntregaCert: IEndereco; safecall;
    function Get_CodIdentificacaoDupla: Integer; safecall;
    function Get_SglIdentificacaoDupla: WideString; safecall;
    function Get_DesIdentificacaoDupla: WideString; safecall;
    function Get_CodFabricanteIdentificador: Integer; safecall;
    function Get_NomReduzidoFabricante: WideString; safecall;
    function Get_CodFormaPagamentoIdent: Integer; safecall;
    function Get_DesFormaPagamentoIdent: WideString; safecall;
    function Get_EnderecoentregaIdent: IEndereco; safecall;
    function Get_EnderecoCobrancaIdent: IEndereco; safecall;
    function Get_CodModeloIdentificador1: Integer; safecall;
    function Get_SglModeloIdentificador1: WideString; safecall;
    function Get_DesModeloIdentificador1: WideString; safecall;
    function Get_SglModeloIdentificador2: WideString; safecall;
    function Get_DesModeloIdentificador2: WideString; safecall;
    function Get_CodProdutoAcessorio1: Integer; safecall;
    function Get_SglProdutoAcessorio1: WideString; safecall;
    function Get_DesProdutoAcessorio1: WideString; safecall;
    function Get_QtdProdutoAcessorio1: Integer; safecall;
    function Get_CodProdutoAcessorio2: Integer; safecall;
    function Get_SglProdutoAcessorio2: WideString; safecall;
    function Get_DesProdutoAcessorio2: WideString; safecall;
    function Get_QtdProdutoAcessorio2: Integer; safecall;
    function Get_CodProdutoAcessorio3: Integer; safecall;
    function Get_SglProdutoAcessorio3: WideString; safecall;
    function Get_DesProdutoAcessorio3: WideString; safecall;
    function Get_QtdProdutoAcessorio3: Integer; safecall;
    function Get_NumPedidoFabricante: Integer; safecall;
    function Get_CodArquivoRemessaPedido: Integer; safecall;
    function Get_NumRemessa: Integer; safecall;
    function Get_DtaCadastramento: TDateTime; safecall;
    function Get_CodUsuarioCadastramento: Integer; safecall;
    function Get_NomUsuarioCadastramento: WideString; safecall;
    function Get_DtaUltimaAlteracao: TDateTime; safecall;
    function Get_CodUsuarioUltimaAlteracao: Integer; safecall;
    function Get_NomUsuarioUltimaAlteracao: WideString; safecall;
    function Get_CodSituacaoOS: Integer; safecall;
    function Get_SglSituacaoOS: WideString; safecall;
    function Get_DesSituacaoOS: WideString; safecall;
    function Get_TxtObservacao: WideString; safecall;
    function Get_CodModeloIdentificador2: Integer; safecall;
    function Get_DesFormaPagamentoOS: WideString; safecall;
    function Get_NumOrdemServico: Integer; safecall;
    function Get_NumCNPJCPFProdutorFormatado: WideString; safecall;
    function Get_NumCNPJCPFTecnicoFormatado: WideString; safecall;
    function Get_NumCNPJCPFVendedorFormatado: WideString; safecall;
    function Get_IndEnviaPedidoIdentificador: WideString; safecall;
    function Get_CodUsuarioPedido: Integer; safecall;
    function Get_DtaPedido: TDateTime; safecall;
    function Get_NomUsuarioPedido: WideString; safecall;
    function Get_TxtObservacaoPedido: WideString; safecall;
    function Get_IndAnimaisRegistrados: WideString; safecall;
    function Get_DtaEnvio: TDateTime; safecall;
    function Get_NomServicoEnvio: WideString; safecall;
    function Get_NumConhecimento: WideString; safecall;
    function Get_CodLocalizacaoSisbov: Integer; safecall;
    function Get_CodBoleto: Integer; safecall;
    function Get_IndTransmissaoSisbov: WideString; safecall;
    property CodOrdemServico: Integer read Get_CodOrdemServico;
    property CodPessoaProdutor: Integer read Get_CodPessoaProdutor;
    property SglProdutor: WideString read Get_SglProdutor;
    property NomProdutor: WideString read Get_NomProdutor;
    property NumCNPJCPFProdutor: WideString read Get_NumCNPJCPFProdutor;
    property CodPropriedadeRural: Integer read Get_CodPropriedadeRural;
    property NomPropriedadeRural: WideString read Get_NomPropriedadeRural;
    property NumImovelReceitaFederal: WideString read Get_NumImovelReceitaFederal;
    property CodPessoaTecnico: Integer read Get_CodPessoaTecnico;
    property NomTecnico: WideString read Get_NomTecnico;
    property numCNPJCPFTecnico: WideString read Get_numCNPJCPFTecnico;
    property CodPessoaVendedor: Integer read Get_CodPessoaVendedor;
    property NomVendedor: WideString read Get_NomVendedor;
    property NumCNPJCPFVendedor: WideString read Get_NumCNPJCPFVendedor;
    property QtdAnimais: Integer read Get_QtdAnimais;
    property NumSolicitacaoSISBOV: Integer read Get_NumSolicitacaoSISBOV;
    property CodPaisSISBOVInicial: Integer read Get_CodPaisSISBOVInicial;
    property CodEstadoSISBOVInicial: Integer read Get_CodEstadoSISBOVInicial;
    property CodMicroRegiaoSISBOVInicial: Integer read Get_CodMicroRegiaoSISBOVInicial;
    property CodAnimalSISBOVInicial: Integer read Get_CodAnimalSISBOVInicial;
    property NumDVSISBOVInicial: Integer read Get_NumDVSISBOVInicial;
    property CodFormaPagamentoOS: Integer read Get_CodFormaPagamentoOS;
    property EnderecoEntregaCert: IEndereco read Get_EnderecoEntregaCert;
    property CodIdentificacaoDupla: Integer read Get_CodIdentificacaoDupla;
    property SglIdentificacaoDupla: WideString read Get_SglIdentificacaoDupla;
    property DesIdentificacaoDupla: WideString read Get_DesIdentificacaoDupla;
    property CodFabricanteIdentificador: Integer read Get_CodFabricanteIdentificador;
    property NomReduzidoFabricante: WideString read Get_NomReduzidoFabricante;
    property CodFormaPagamentoIdent: Integer read Get_CodFormaPagamentoIdent;
    property DesFormaPagamentoIdent: WideString read Get_DesFormaPagamentoIdent;
    property EnderecoentregaIdent: IEndereco read Get_EnderecoentregaIdent;
    property EnderecoCobrancaIdent: IEndereco read Get_EnderecoCobrancaIdent;
    property CodModeloIdentificador1: Integer read Get_CodModeloIdentificador1;
    property SglModeloIdentificador1: WideString read Get_SglModeloIdentificador1;
    property DesModeloIdentificador1: WideString read Get_DesModeloIdentificador1;
    property SglModeloIdentificador2: WideString read Get_SglModeloIdentificador2;
    property DesModeloIdentificador2: WideString read Get_DesModeloIdentificador2;
    property CodProdutoAcessorio1: Integer read Get_CodProdutoAcessorio1;
    property SglProdutoAcessorio1: WideString read Get_SglProdutoAcessorio1;
    property DesProdutoAcessorio1: WideString read Get_DesProdutoAcessorio1;
    property QtdProdutoAcessorio1: Integer read Get_QtdProdutoAcessorio1;
    property CodProdutoAcessorio2: Integer read Get_CodProdutoAcessorio2;
    property SglProdutoAcessorio2: WideString read Get_SglProdutoAcessorio2;
    property DesProdutoAcessorio2: WideString read Get_DesProdutoAcessorio2;
    property QtdProdutoAcessorio2: Integer read Get_QtdProdutoAcessorio2;
    property CodProdutoAcessorio3: Integer read Get_CodProdutoAcessorio3;
    property SglProdutoAcessorio3: WideString read Get_SglProdutoAcessorio3;
    property DesProdutoAcessorio3: WideString read Get_DesProdutoAcessorio3;
    property QtdProdutoAcessorio3: Integer read Get_QtdProdutoAcessorio3;
    property NumPedidoFabricante: Integer read Get_NumPedidoFabricante;
    property CodArquivoRemessaPedido: Integer read Get_CodArquivoRemessaPedido;
    property NumRemessa: Integer read Get_NumRemessa;
    property DtaCadastramento: TDateTime read Get_DtaCadastramento;
    property CodUsuarioCadastramento: Integer read Get_CodUsuarioCadastramento;
    property NomUsuarioCadastramento: WideString read Get_NomUsuarioCadastramento;
    property DtaUltimaAlteracao: TDateTime read Get_DtaUltimaAlteracao;
    property CodUsuarioUltimaAlteracao: Integer read Get_CodUsuarioUltimaAlteracao;
    property NomUsuarioUltimaAlteracao: WideString read Get_NomUsuarioUltimaAlteracao;
    property CodSituacaoOS: Integer read Get_CodSituacaoOS;
    property SglSituacaoOS: WideString read Get_SglSituacaoOS;
    property DesSituacaoOS: WideString read Get_DesSituacaoOS;
    property TxtObservacao: WideString read Get_TxtObservacao;
    property CodModeloIdentificador2: Integer read Get_CodModeloIdentificador2;
    property DesFormaPagamentoOS: WideString read Get_DesFormaPagamentoOS;
    property NumOrdemServico: Integer read Get_NumOrdemServico;
    property NumCNPJCPFProdutorFormatado: WideString read Get_NumCNPJCPFProdutorFormatado;
    property NumCNPJCPFTecnicoFormatado: WideString read Get_NumCNPJCPFTecnicoFormatado;
    property NumCNPJCPFVendedorFormatado: WideString read Get_NumCNPJCPFVendedorFormatado;
    property IndEnviaPedidoIdentificador: WideString read Get_IndEnviaPedidoIdentificador;
    property CodUsuarioPedido: Integer read Get_CodUsuarioPedido;
    property DtaPedido: TDateTime read Get_DtaPedido;
    property NomUsuarioPedido: WideString read Get_NomUsuarioPedido;
    property TxtObservacaoPedido: WideString read Get_TxtObservacaoPedido;
    property IndAnimaisRegistrados: WideString read Get_IndAnimaisRegistrados;
    property DtaEnvio: TDateTime read Get_DtaEnvio;
    property NomServicoEnvio: WideString read Get_NomServicoEnvio;
    property NumConhecimento: WideString read Get_NumConhecimento;
    property CodLocalizacaoSisbov: Integer read Get_CodLocalizacaoSisbov;
    property CodBoleto: Integer read Get_CodBoleto;
    property IndTransmissaoSisbov: WideString read Get_IndTransmissaoSisbov;
  end;

// *********************************************************************//
// DispIntf:  IOrdemServicoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB87F942-FC34-49D3-B172-C239BCFA9004}
// *********************************************************************//
  IOrdemServicoDisp = dispinterface
    ['{DB87F942-FC34-49D3-B172-C239BCFA9004}']
    property CodOrdemServico: Integer readonly dispid 201;
    property CodPessoaProdutor: Integer readonly dispid 202;
    property SglProdutor: WideString readonly dispid 203;
    property NomProdutor: WideString readonly dispid 204;
    property NumCNPJCPFProdutor: WideString readonly dispid 205;
    property CodPropriedadeRural: Integer readonly dispid 206;
    property NomPropriedadeRural: WideString readonly dispid 207;
    property NumImovelReceitaFederal: WideString readonly dispid 208;
    property CodPessoaTecnico: Integer readonly dispid 209;
    property NomTecnico: WideString readonly dispid 210;
    property numCNPJCPFTecnico: WideString readonly dispid 211;
    property CodPessoaVendedor: Integer readonly dispid 212;
    property NomVendedor: WideString readonly dispid 213;
    property NumCNPJCPFVendedor: WideString readonly dispid 214;
    property QtdAnimais: Integer readonly dispid 215;
    property NumSolicitacaoSISBOV: Integer readonly dispid 216;
    property CodPaisSISBOVInicial: Integer readonly dispid 217;
    property CodEstadoSISBOVInicial: Integer readonly dispid 218;
    property CodMicroRegiaoSISBOVInicial: Integer readonly dispid 219;
    property CodAnimalSISBOVInicial: Integer readonly dispid 220;
    property NumDVSISBOVInicial: Integer readonly dispid 221;
    property CodFormaPagamentoOS: Integer readonly dispid 222;
    property EnderecoEntregaCert: IEndereco readonly dispid 223;
    property CodIdentificacaoDupla: Integer readonly dispid 224;
    property SglIdentificacaoDupla: WideString readonly dispid 225;
    property DesIdentificacaoDupla: WideString readonly dispid 226;
    property CodFabricanteIdentificador: Integer readonly dispid 227;
    property NomReduzidoFabricante: WideString readonly dispid 228;
    property CodFormaPagamentoIdent: Integer readonly dispid 229;
    property DesFormaPagamentoIdent: WideString readonly dispid 230;
    property EnderecoentregaIdent: IEndereco readonly dispid 231;
    property EnderecoCobrancaIdent: IEndereco readonly dispid 232;
    property CodModeloIdentificador1: Integer readonly dispid 233;
    property SglModeloIdentificador1: WideString readonly dispid 234;
    property DesModeloIdentificador1: WideString readonly dispid 235;
    property SglModeloIdentificador2: WideString readonly dispid 237;
    property DesModeloIdentificador2: WideString readonly dispid 238;
    property CodProdutoAcessorio1: Integer readonly dispid 239;
    property SglProdutoAcessorio1: WideString readonly dispid 240;
    property DesProdutoAcessorio1: WideString readonly dispid 241;
    property QtdProdutoAcessorio1: Integer readonly dispid 242;
    property CodProdutoAcessorio2: Integer readonly dispid 243;
    property SglProdutoAcessorio2: WideString readonly dispid 244;
    property DesProdutoAcessorio2: WideString readonly dispid 245;
    property QtdProdutoAcessorio2: Integer readonly dispid 246;
    property CodProdutoAcessorio3: Integer readonly dispid 247;
    property SglProdutoAcessorio3: WideString readonly dispid 248;
    property DesProdutoAcessorio3: WideString readonly dispid 249;
    property QtdProdutoAcessorio3: Integer readonly dispid 250;
    property NumPedidoFabricante: Integer readonly dispid 251;
    property CodArquivoRemessaPedido: Integer readonly dispid 252;
    property NumRemessa: Integer readonly dispid 253;
    property DtaCadastramento: TDateTime readonly dispid 254;
    property CodUsuarioCadastramento: Integer readonly dispid 255;
    property NomUsuarioCadastramento: WideString readonly dispid 256;
    property DtaUltimaAlteracao: TDateTime readonly dispid 257;
    property CodUsuarioUltimaAlteracao: Integer readonly dispid 258;
    property NomUsuarioUltimaAlteracao: WideString readonly dispid 259;
    property CodSituacaoOS: Integer readonly dispid 260;
    property SglSituacaoOS: WideString readonly dispid 261;
    property DesSituacaoOS: WideString readonly dispid 262;
    property TxtObservacao: WideString readonly dispid 263;
    property CodModeloIdentificador2: Integer readonly dispid 264;
    property DesFormaPagamentoOS: WideString readonly dispid 265;
    property NumOrdemServico: Integer readonly dispid 266;
    property NumCNPJCPFProdutorFormatado: WideString readonly dispid 267;
    property NumCNPJCPFTecnicoFormatado: WideString readonly dispid 268;
    property NumCNPJCPFVendedorFormatado: WideString readonly dispid 269;
    property IndEnviaPedidoIdentificador: WideString readonly dispid 283;
    property CodUsuarioPedido: Integer readonly dispid 236;
    property DtaPedido: TDateTime readonly dispid 270;
    property NomUsuarioPedido: WideString readonly dispid 271;
    property TxtObservacaoPedido: WideString readonly dispid 272;
    property IndAnimaisRegistrados: WideString readonly dispid 273;
    property DtaEnvio: TDateTime readonly dispid 274;
    property NomServicoEnvio: WideString readonly dispid 275;
    property NumConhecimento: WideString readonly dispid 276;
    property CodLocalizacaoSisbov: Integer readonly dispid 277;
    property CodBoleto: Integer readonly dispid 278;
    property IndTransmissaoSisbov: WideString readonly dispid 279;
  end;

// *********************************************************************//
// Interface: IOrdensServico
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E63D6ADE-E242-4F2A-9BAC-7645DAE7AE01}
// *********************************************************************//
  IOrdensServico = interface(IDispatch)
    ['{E63D6ADE-E242-4F2A-9BAC-7645DAE7AE01}']
    function OrdemServico: IOrdemServico; safecall;
    function Buscar(CodOrdemServico: Integer): Integer; safecall;
    function BuscarResumido(CodOrdemServico: Integer): Integer; safecall;
    function OrdemServicoResumida: IOrdemServicoResumida; safecall;
    function PesquisarHistoricoSituacao(CodOrdemServico: Integer): Integer; safecall;
    function ObterProximoNumero: Integer; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumDeslocamento: Integer); safecall;
    function ValorCampo(const NomCampo: WideString): WideString; safecall;
    function Alterar(CodOrdemServico: Integer; NumOrdemServico: Integer; QtdAnimais: Integer; 
                     CodPessoaTecnico: Integer; CodPessoaVendedor: Integer; 
                     const NumCNPJCPFVendedor: WideString; CodFormaPagamentoOS: Integer; 
                     CodIdentificacaoDupla: Integer; CodFabricanteIdentificador: Integer; 
                     CodFormaPagamentoIdent: Integer; CodProdutoAcessorio1: Integer; 
                     QtdProdutoAcessorio1: Integer; CodProdutoAcessorio2: Integer; 
                     QtdProdutoAcessorio2: Integer; CodProdutoAcessorio3: Integer; 
                     QtdProdutoAcessorio3: Integer; const TxtObservacaoPedido: WideString; 
                     const TxtObservacao: WideString; const IndAnimaisRegistrados: WideString): Integer; safecall;
    function Inserir(NumOrdemServico: Integer; CodPessoaProdutor: Integer; 
                     const SglProdutor: WideString; const NumCNPJCPFProdutor: WideString; 
                     CodPropriedadeRural: Integer; const NumImovelReceitaFederal: WideString; 
                     CodLocalizacaoSisbov: Integer; QtdAnimais: Integer; 
                     const IndEnviaPedidoIdentificador: WideString): Integer; safecall;
    function Pesquisar(NumOrdemServico: Integer; const SglProdutor: WideString; 
                       const NomProdutor: WideString; const NumCNPJCPFProdutor: WideString; 
                       const NumImovelReceitaFederal: WideString; CodLocalizacaoSisbov: Integer; 
                       const NomPropriedadeRural: WideString; const NumCPNJCPFTecnico: WideString; 
                       const NumCNPJCPFVendedor: WideString; QtdAnimaisInicio: Integer; 
                       QtdAnimaisFim: Integer; NumSolicitacaoSISBOV: Integer; 
                       const IndApenasSemEnderecoEntregaCert: WideString; 
                       CodIdentificacaoDupla: Integer; CodFabricanteIdentificador: Integer; 
                       const IndEnviaPedidoIdentificador: WideString; 
                       const IndApenasSemEnderecoEntregaIdent: WideString; 
                       const IndapenasSemEnderecoCobrancaIdent: WideString; 
                       NumPedidoFabricante: Integer; NumRemessa: Integer; 
                       DtaCadastramentoInicio: TDateTime; DtaCadastramentoFim: TDateTime; 
                       DtaMudancaSituacaoInicio: TDateTime; DtaMudancaSituacaoFim: TDateTime; 
                       CodSituacaoOS: Integer; CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                       CodMicroRegiaoSISBOV: Integer; CodAnimalSisbov: Integer; 
                       CodSituacaoSISBOVSimInicio: Integer; CodSituacaoSISBOVNao: Integer; 
                       DtaSituacaoSISBOVSimInicio: TDateTime; DtaSituacaoSISBOVSimFim: TDateTime; 
                       NumDiasBoletoAVencer: Integer; NumDiasBoletoEmAtraso: Integer; 
                       NumDiasBoletoPago: Integer; CodSituacaoBoleto: Integer; 
                       const CodOrdenacao: WideString; const IndOrdenacaoCrescente: WideString): Integer; safecall;
    function DefinirEnderecoEntregaCert2(CodOrdemServico: Integer; CodEndereco: Integer; 
                                         CodPessoa: Integer): Integer; safecall;
    function DefinirEnderecoEntregaCert1(CodOrdemServico: Integer; CodTipoEndereco: Integer; 
                                         const NomPessoaContato: WideString; 
                                         const NumTelefone: WideString; const NumFax: WideString; 
                                         const TxtEMail: WideString; 
                                         const NomLogradouro: WideString; 
                                         const NomBairro: WideString; const NumCEP: WideString; 
                                         CodDistrito: Integer; CodMunicipio: Integer; 
                                         const NomLocalidade: WideString; CodEstado: Integer): Integer; safecall;
    function DefinirEnderecoEntregaIdent2(CodOrdemServico: Integer; CodEndereco: Integer; 
                                          CodPessoa: Integer): Integer; safecall;
    function DefinirEnderecoCobrancaIdent2(CodOrdemServico: Integer; CodEndereco: Integer; 
                                           CodPessoa: Integer): Integer; safecall;
    function DefinirEnderecoEntregaIdent1(CodOrdemServico: Integer; CodTipoEndereco: Integer; 
                                          const NomPessoaContato: WideString; 
                                          const NumTelefone: WideString; const NumFax: WideString; 
                                          const TxtEMail: WideString; 
                                          const NomLogradouro: WideString; 
                                          const NomBairro: WideString; const NumCEP: WideString; 
                                          CodDistrito: Integer; CodMunicipio: Integer; 
                                          const NomLocalidade: WideString; CodEstado: Integer): Integer; safecall;
    function DefinirEnderecoCobrancaIdent1(CodOrdemServico: Integer; CodTipoEndereco: Integer; 
                                           const NomPessoaContato: WideString; 
                                           const NumTelefone: WideString; const NumFax: WideString; 
                                           const TxtEMail: WideString; 
                                           const NomLogradouro: WideString; 
                                           const NomBairro: WideString; const NumCEP: WideString; 
                                           CodDistrito: Integer; CodMunicipio: Integer; 
                                           const NomLocalidade: WideString; CodEstado: Integer): Integer; safecall;
    function MudarSituacao(CodOrdemServico: Integer; CodSituacaoOS: Integer; 
                           const TxtObservacao: WideString): Integer; safecall;
    function DefinirCodigoSISBOVInicio(CodOrdemServico: Integer; CodPaisSISBOVInicio: Integer; 
                                       CodEstadoSISBOVInicio: Integer; 
                                       CodMicroRegiaoSISBOVInicio: Integer; 
                                       CodAnimalSISBOVInicio: Integer; NumDVSISBOVInicio: Integer): Integer; safecall;
    function MudarEnviaPedidoIdentificador(CodOrdemServico: Integer; 
                                           const IndEnviaPedidoIdentificador: WideString): Integer; safecall;
    function PesquisarSituacaoCodigosSISBOV(CodOrdemServico: Integer; 
                                            const IndMostrarDataMudancaSituacao: WideString): Integer; safecall;
    function PesquisarDataLiberacaoAbate(CodOrdemServico: Integer): Integer; safecall;
    function GerarRelatorioFichaOS(CodOrdemServico: Integer; TipoArquivo: Integer): WideString; safecall;
    function Get_IndAcessoNumOrdemServico: WideString; safecall;
    function Get_IndAcessoQtdAnimais: WideString; safecall;
    function Get_IndAcessoPessoaTecnico: WideString; safecall;
    function Get_IndAcessoPessoaVendedor: WideString; safecall;
    function Get_IndAcessoFormaPagamentoOS: WideString; safecall;
    function Get_IndAcessoIdentificacaoDupla: WideString; safecall;
    function Get_IndAcessoFabricanteIdentificador: WideString; safecall;
    function Get_IndAcessoFormaPagamentoIdent: WideString; safecall;
    function Get_IndAcessoCodProdutoAcessorio1: WideString; safecall;
    function Get_IndAcessoQtdProdutoAcessorio1: WideString; safecall;
    function Get_IndAcessoCodProdutoAcessorio2: WideString; safecall;
    function Get_IndAcessoQtdProdutoAcessorio2: WideString; safecall;
    function Get_IndAcessoCodProdutoAcessorio3: WideString; safecall;
    function Get_IndAcessoQtdProdutoAcessorio3: WideString; safecall;
    function Get_IndAcessoIndEnviaPedidoIdent: WideString; safecall;
    function Get_IndAcessoCodigoSISBOVInicio: WideString; safecall;
    function Get_IndAcessoEnderecoEntregaCert: WideString; safecall;
    function Get_IndAcessoEnderecoEntregaIdent: WideString; safecall;
    function Get_IndAcessoEnderecoCobrancaIdent: WideString; safecall;
    function BuscarAcessoAtributos(CodOrdemServico: Integer): Integer; safecall;
    function GerarRelatorio(NumOrdemServico: Integer; const SglProdutor: WideString; 
                            const NomProdutor: WideString; const NumCNPJCPFProdutor: WideString; 
                            const NumImovelReceitaFederal: WideString; 
                            CodLocalizacaoSisbov: Integer; const NomPropriedadeRural: WideString; 
                            const numCNPJCPFTecnico: WideString; 
                            const NumCNPJCPFVendedor: WideString; QtdAnimaisInicio: Integer; 
                            QtdAnimaisFim: Integer; NumSolicitacaoSISBOV: Integer; 
                            const IndApenasSemEnderecoEntregaCert: WideString; 
                            CodIdentificacaoDupla: Integer; CodFabricanteIdentificador: Integer; 
                            const IndEnviaPedidoIdent: WideString; 
                            const IndApenasSemEnderecoEntregaIdent: WideString; 
                            const IndapenasSemEnderecoCobrancaIdent: WideString; 
                            NumPedidoFabricante: Integer; NumRemessa: Integer; 
                            DtaCadastramentoInicio: TDateTime; DtaCadastramentoFim: TDateTime; 
                            DtaMudancaSituacaoInicio: TDateTime; DtaMudancaSituacaoFim: TDateTime; 
                            CodSituacaoOS: Integer; CodPaisSisBov: Integer; 
                            CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                            CodAnimalSisbov: Integer; CodSituacaoSISBOVSim: Integer; 
                            CodSituacaoSISBOVNao: Integer; DtaSituacaoSISBOVSimInicio: TDateTime; 
                            DtaSituacaoSISBOVSimFim: TDateTime; NumDiasBoletoAVencer: Integer; 
                            NumDiasBoletoEmAtraso: Integer; NumDiasBoletoPago: Integer; 
                            CodSituacaoBoleto: Integer; const CodOrdenacao: WideString; 
                            const IndOrdenacaoCrescente: WideString; Tipo: Integer; 
                            QtdQuebraRelatorio: Integer): WideString; safecall;
    function LimparCodigoSISBOVInicio(CodOrdemServico: Integer): Integer; safecall;
    function Get_IndAcessoObservacaoPedido: WideString; safecall;
    function Get_IndAcessoAnimaisRegistrados: WideString; safecall;
    function PesquisarSituacoesFichas(CodOrdemServico: Integer; NumRemessaFicha: Integer): Integer; safecall;
    function AlterarEnvioIdentOS(CodOrdemServico: Integer; DtaEnvioIdent: TDateTime; 
                                 const NomServicoEnvio: WideString; 
                                 const NroConhecimento: WideString): Integer; safecall;
    function IncluirSolicitacaoNumeracao(CodOrdemServico: Integer): Integer; safecall;
    function DefinirNumeroSolicitacao(CodOrdemServico: Integer; NumeroSolicitacao: Integer; 
                                      DataSolicitacao: TDateTime): Integer; safecall;
    function IncluirSolicitacaoNumeracaoReimpressao(CodOrdemServico: Integer): Integer; safecall;
    function TempCancelarSolicitacaoNumeracao(const NumeroSisbov: WideString; 
                                              idpropriedade: Integer; 
                                              const cnpjprodutor: WideString; 
                                              const cpfprodutor: WideString; 
                                              IdMotivoCancelamento: Integer): Integer; safecall;
    function TempSolicitarNumeracaoReimpressao(const cnpjFabrica: WideString; 
                                               const cpfprodutor: WideString; 
                                               const cnpjprodutor: WideString; 
                                               idpropriedade: Integer; qtd: Integer; 
                                               const numero_sisbov: WideString; 
                                               const tipo_identificacao: WideString): Integer; safecall;
    function TempConsultarNumeracaoReimpressao(NumeroSolicitacao: Integer): WideString; safecall;
    function SolicitarNumeracaoReimpressao(CodFabricanteIdentificador: Integer; 
                                           const CodManejo: WideString; 
                                           const TipoIdentificacao: WideString): Integer; safecall;
    property IndAcessoNumOrdemServico: WideString read Get_IndAcessoNumOrdemServico;
    property IndAcessoQtdAnimais: WideString read Get_IndAcessoQtdAnimais;
    property IndAcessoPessoaTecnico: WideString read Get_IndAcessoPessoaTecnico;
    property IndAcessoPessoaVendedor: WideString read Get_IndAcessoPessoaVendedor;
    property IndAcessoFormaPagamentoOS: WideString read Get_IndAcessoFormaPagamentoOS;
    property IndAcessoIdentificacaoDupla: WideString read Get_IndAcessoIdentificacaoDupla;
    property IndAcessoFabricanteIdentificador: WideString read Get_IndAcessoFabricanteIdentificador;
    property IndAcessoFormaPagamentoIdent: WideString read Get_IndAcessoFormaPagamentoIdent;
    property IndAcessoCodProdutoAcessorio1: WideString read Get_IndAcessoCodProdutoAcessorio1;
    property IndAcessoQtdProdutoAcessorio1: WideString read Get_IndAcessoQtdProdutoAcessorio1;
    property IndAcessoCodProdutoAcessorio2: WideString read Get_IndAcessoCodProdutoAcessorio2;
    property IndAcessoQtdProdutoAcessorio2: WideString read Get_IndAcessoQtdProdutoAcessorio2;
    property IndAcessoCodProdutoAcessorio3: WideString read Get_IndAcessoCodProdutoAcessorio3;
    property IndAcessoQtdProdutoAcessorio3: WideString read Get_IndAcessoQtdProdutoAcessorio3;
    property IndAcessoIndEnviaPedidoIdent: WideString read Get_IndAcessoIndEnviaPedidoIdent;
    property IndAcessoCodigoSISBOVInicio: WideString read Get_IndAcessoCodigoSISBOVInicio;
    property IndAcessoEnderecoEntregaCert: WideString read Get_IndAcessoEnderecoEntregaCert;
    property IndAcessoEnderecoEntregaIdent: WideString read Get_IndAcessoEnderecoEntregaIdent;
    property IndAcessoEnderecoCobrancaIdent: WideString read Get_IndAcessoEnderecoCobrancaIdent;
    property IndAcessoObservacaoPedido: WideString read Get_IndAcessoObservacaoPedido;
    property IndAcessoAnimaisRegistrados: WideString read Get_IndAcessoAnimaisRegistrados;
  end;

// *********************************************************************//
// DispIntf:  IOrdensServicoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E63D6ADE-E242-4F2A-9BAC-7645DAE7AE01}
// *********************************************************************//
  IOrdensServicoDisp = dispinterface
    ['{E63D6ADE-E242-4F2A-9BAC-7645DAE7AE01}']
    function OrdemServico: IOrdemServico; dispid 201;
    function Buscar(CodOrdemServico: Integer): Integer; dispid 202;
    function BuscarResumido(CodOrdemServico: Integer): Integer; dispid 203;
    function OrdemServicoResumida: IOrdemServicoResumida; dispid 204;
    function PesquisarHistoricoSituacao(CodOrdemServico: Integer): Integer; dispid 206;
    function ObterProximoNumero: Integer; dispid 205;
    function BOF: WordBool; dispid 207;
    function EOF: WordBool; dispid 208;
    function NumeroRegistros: Integer; dispid 209;
    procedure IrAoPrimeiro; dispid 210;
    procedure IrAoUltimo; dispid 211;
    procedure IrAoProximo; dispid 212;
    procedure IrAoAnterior; dispid 213;
    procedure Posicionar(NumDeslocamento: Integer); dispid 214;
    function ValorCampo(const NomCampo: WideString): WideString; dispid 215;
    function Alterar(CodOrdemServico: Integer; NumOrdemServico: Integer; QtdAnimais: Integer; 
                     CodPessoaTecnico: Integer; CodPessoaVendedor: Integer; 
                     const NumCNPJCPFVendedor: WideString; CodFormaPagamentoOS: Integer; 
                     CodIdentificacaoDupla: Integer; CodFabricanteIdentificador: Integer; 
                     CodFormaPagamentoIdent: Integer; CodProdutoAcessorio1: Integer; 
                     QtdProdutoAcessorio1: Integer; CodProdutoAcessorio2: Integer; 
                     QtdProdutoAcessorio2: Integer; CodProdutoAcessorio3: Integer; 
                     QtdProdutoAcessorio3: Integer; const TxtObservacaoPedido: WideString; 
                     const TxtObservacao: WideString; const IndAnimaisRegistrados: WideString): Integer; dispid 216;
    function Inserir(NumOrdemServico: Integer; CodPessoaProdutor: Integer; 
                     const SglProdutor: WideString; const NumCNPJCPFProdutor: WideString; 
                     CodPropriedadeRural: Integer; const NumImovelReceitaFederal: WideString; 
                     CodLocalizacaoSisbov: Integer; QtdAnimais: Integer; 
                     const IndEnviaPedidoIdentificador: WideString): Integer; dispid 217;
    function Pesquisar(NumOrdemServico: Integer; const SglProdutor: WideString; 
                       const NomProdutor: WideString; const NumCNPJCPFProdutor: WideString; 
                       const NumImovelReceitaFederal: WideString; CodLocalizacaoSisbov: Integer; 
                       const NomPropriedadeRural: WideString; const NumCPNJCPFTecnico: WideString; 
                       const NumCNPJCPFVendedor: WideString; QtdAnimaisInicio: Integer; 
                       QtdAnimaisFim: Integer; NumSolicitacaoSISBOV: Integer; 
                       const IndApenasSemEnderecoEntregaCert: WideString; 
                       CodIdentificacaoDupla: Integer; CodFabricanteIdentificador: Integer; 
                       const IndEnviaPedidoIdentificador: WideString; 
                       const IndApenasSemEnderecoEntregaIdent: WideString; 
                       const IndapenasSemEnderecoCobrancaIdent: WideString; 
                       NumPedidoFabricante: Integer; NumRemessa: Integer; 
                       DtaCadastramentoInicio: TDateTime; DtaCadastramentoFim: TDateTime; 
                       DtaMudancaSituacaoInicio: TDateTime; DtaMudancaSituacaoFim: TDateTime; 
                       CodSituacaoOS: Integer; CodPaisSisBov: Integer; CodEstadoSISBOV: Integer; 
                       CodMicroRegiaoSISBOV: Integer; CodAnimalSisbov: Integer; 
                       CodSituacaoSISBOVSimInicio: Integer; CodSituacaoSISBOVNao: Integer; 
                       DtaSituacaoSISBOVSimInicio: TDateTime; DtaSituacaoSISBOVSimFim: TDateTime; 
                       NumDiasBoletoAVencer: Integer; NumDiasBoletoEmAtraso: Integer; 
                       NumDiasBoletoPago: Integer; CodSituacaoBoleto: Integer; 
                       const CodOrdenacao: WideString; const IndOrdenacaoCrescente: WideString): Integer; dispid 218;
    function DefinirEnderecoEntregaCert2(CodOrdemServico: Integer; CodEndereco: Integer; 
                                         CodPessoa: Integer): Integer; dispid 219;
    function DefinirEnderecoEntregaCert1(CodOrdemServico: Integer; CodTipoEndereco: Integer; 
                                         const NomPessoaContato: WideString; 
                                         const NumTelefone: WideString; const NumFax: WideString; 
                                         const TxtEMail: WideString; 
                                         const NomLogradouro: WideString; 
                                         const NomBairro: WideString; const NumCEP: WideString; 
                                         CodDistrito: Integer; CodMunicipio: Integer; 
                                         const NomLocalidade: WideString; CodEstado: Integer): Integer; dispid 220;
    function DefinirEnderecoEntregaIdent2(CodOrdemServico: Integer; CodEndereco: Integer; 
                                          CodPessoa: Integer): Integer; dispid 221;
    function DefinirEnderecoCobrancaIdent2(CodOrdemServico: Integer; CodEndereco: Integer; 
                                           CodPessoa: Integer): Integer; dispid 222;
    function DefinirEnderecoEntregaIdent1(CodOrdemServico: Integer; CodTipoEndereco: Integer; 
                                          const NomPessoaContato: WideString; 
                                          const NumTelefone: WideString; const NumFax: WideString; 
                                          const TxtEMail: WideString; 
                                          const NomLogradouro: WideString; 
                                          const NomBairro: WideString; const NumCEP: WideString; 
                                          CodDistrito: Integer; CodMunicipio: Integer; 
                                          const NomLocalidade: WideString; CodEstado: Integer): Integer; dispid 223;
    function DefinirEnderecoCobrancaIdent1(CodOrdemServico: Integer; CodTipoEndereco: Integer; 
                                           const NomPessoaContato: WideString; 
                                           const NumTelefone: WideString; const NumFax: WideString; 
                                           const TxtEMail: WideString; 
                                           const NomLogradouro: WideString; 
                                           const NomBairro: WideString; const NumCEP: WideString; 
                                           CodDistrito: Integer; CodMunicipio: Integer; 
                                           const NomLocalidade: WideString; CodEstado: Integer): Integer; dispid 224;
    function MudarSituacao(CodOrdemServico: Integer; CodSituacaoOS: Integer; 
                           const TxtObservacao: WideString): Integer; dispid 225;
    function DefinirCodigoSISBOVInicio(CodOrdemServico: Integer; CodPaisSISBOVInicio: Integer; 
                                       CodEstadoSISBOVInicio: Integer; 
                                       CodMicroRegiaoSISBOVInicio: Integer; 
                                       CodAnimalSISBOVInicio: Integer; NumDVSISBOVInicio: Integer): Integer; dispid 227;
    function MudarEnviaPedidoIdentificador(CodOrdemServico: Integer; 
                                           const IndEnviaPedidoIdentificador: WideString): Integer; dispid 228;
    function PesquisarSituacaoCodigosSISBOV(CodOrdemServico: Integer; 
                                            const IndMostrarDataMudancaSituacao: WideString): Integer; dispid 229;
    function PesquisarDataLiberacaoAbate(CodOrdemServico: Integer): Integer; dispid 230;
    function GerarRelatorioFichaOS(CodOrdemServico: Integer; TipoArquivo: Integer): WideString; dispid 231;
    property IndAcessoNumOrdemServico: WideString readonly dispid 232;
    property IndAcessoQtdAnimais: WideString readonly dispid 233;
    property IndAcessoPessoaTecnico: WideString readonly dispid 234;
    property IndAcessoPessoaVendedor: WideString readonly dispid 235;
    property IndAcessoFormaPagamentoOS: WideString readonly dispid 236;
    property IndAcessoIdentificacaoDupla: WideString readonly dispid 237;
    property IndAcessoFabricanteIdentificador: WideString readonly dispid 238;
    property IndAcessoFormaPagamentoIdent: WideString readonly dispid 239;
    property IndAcessoCodProdutoAcessorio1: WideString readonly dispid 240;
    property IndAcessoQtdProdutoAcessorio1: WideString readonly dispid 241;
    property IndAcessoCodProdutoAcessorio2: WideString readonly dispid 242;
    property IndAcessoQtdProdutoAcessorio2: WideString readonly dispid 243;
    property IndAcessoCodProdutoAcessorio3: WideString readonly dispid 244;
    property IndAcessoQtdProdutoAcessorio3: WideString readonly dispid 245;
    property IndAcessoIndEnviaPedidoIdent: WideString readonly dispid 246;
    property IndAcessoCodigoSISBOVInicio: WideString readonly dispid 247;
    property IndAcessoEnderecoEntregaCert: WideString readonly dispid 248;
    property IndAcessoEnderecoEntregaIdent: WideString readonly dispid 249;
    property IndAcessoEnderecoCobrancaIdent: WideString readonly dispid 250;
    function BuscarAcessoAtributos(CodOrdemServico: Integer): Integer; dispid 251;
    function GerarRelatorio(NumOrdemServico: Integer; const SglProdutor: WideString; 
                            const NomProdutor: WideString; const NumCNPJCPFProdutor: WideString; 
                            const NumImovelReceitaFederal: WideString; 
                            CodLocalizacaoSisbov: Integer; const NomPropriedadeRural: WideString; 
                            const numCNPJCPFTecnico: WideString; 
                            const NumCNPJCPFVendedor: WideString; QtdAnimaisInicio: Integer; 
                            QtdAnimaisFim: Integer; NumSolicitacaoSISBOV: Integer; 
                            const IndApenasSemEnderecoEntregaCert: WideString; 
                            CodIdentificacaoDupla: Integer; CodFabricanteIdentificador: Integer; 
                            const IndEnviaPedidoIdent: WideString; 
                            const IndApenasSemEnderecoEntregaIdent: WideString; 
                            const IndapenasSemEnderecoCobrancaIdent: WideString; 
                            NumPedidoFabricante: Integer; NumRemessa: Integer; 
                            DtaCadastramentoInicio: TDateTime; DtaCadastramentoFim: TDateTime; 
                            DtaMudancaSituacaoInicio: TDateTime; DtaMudancaSituacaoFim: TDateTime; 
                            CodSituacaoOS: Integer; CodPaisSisBov: Integer; 
                            CodEstadoSISBOV: Integer; CodMicroRegiaoSISBOV: Integer; 
                            CodAnimalSisbov: Integer; CodSituacaoSISBOVSim: Integer; 
                            CodSituacaoSISBOVNao: Integer; DtaSituacaoSISBOVSimInicio: TDateTime; 
                            DtaSituacaoSISBOVSimFim: TDateTime; NumDiasBoletoAVencer: Integer; 
                            NumDiasBoletoEmAtraso: Integer; NumDiasBoletoPago: Integer; 
                            CodSituacaoBoleto: Integer; const CodOrdenacao: WideString; 
                            const IndOrdenacaoCrescente: WideString; Tipo: Integer; 
                            QtdQuebraRelatorio: Integer): WideString; dispid 252;
    function LimparCodigoSISBOVInicio(CodOrdemServico: Integer): Integer; dispid 253;
    property IndAcessoObservacaoPedido: WideString readonly dispid 254;
    property IndAcessoAnimaisRegistrados: WideString readonly dispid 226;
    function PesquisarSituacoesFichas(CodOrdemServico: Integer; NumRemessaFicha: Integer): Integer; dispid 277;
    function AlterarEnvioIdentOS(CodOrdemServico: Integer; DtaEnvioIdent: TDateTime; 
                                 const NomServicoEnvio: WideString; 
                                 const NroConhecimento: WideString): Integer; dispid 255;
    function IncluirSolicitacaoNumeracao(CodOrdemServico: Integer): Integer; dispid 256;
    function DefinirNumeroSolicitacao(CodOrdemServico: Integer; NumeroSolicitacao: Integer; 
                                      DataSolicitacao: TDateTime): Integer; dispid 257;
    function IncluirSolicitacaoNumeracaoReimpressao(CodOrdemServico: Integer): Integer; dispid 258;
    function TempCancelarSolicitacaoNumeracao(const NumeroSisbov: WideString; 
                                              idpropriedade: Integer; 
                                              const cnpjprodutor: WideString; 
                                              const cpfprodutor: WideString; 
                                              IdMotivoCancelamento: Integer): Integer; dispid 259;
    function TempSolicitarNumeracaoReimpressao(const cnpjFabrica: WideString; 
                                               const cpfprodutor: WideString; 
                                               const cnpjprodutor: WideString; 
                                               idpropriedade: Integer; qtd: Integer; 
                                               const numero_sisbov: WideString; 
                                               const tipo_identificacao: WideString): Integer; dispid 260;
    function TempConsultarNumeracaoReimpressao(NumeroSolicitacao: Integer): WideString; dispid 261;
    function SolicitarNumeracaoReimpressao(CodFabricanteIdentificador: Integer; 
                                           const CodManejo: WideString; 
                                           const TipoIdentificacao: WideString): Integer; dispid 262;
  end;

// *********************************************************************//
// Interface: IOrdemServicoResumida
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {663ED8CF-70ED-4F65-8FE4-CB20859A3604}
// *********************************************************************//
  IOrdemServicoResumida = interface(IDispatch)
    ['{663ED8CF-70ED-4F65-8FE4-CB20859A3604}']
    function Get_CodOrdemServico: Integer; safecall;
    procedure Set_CodOrdemServico(Value: Integer); safecall;
    function Get_NumOrdemServico: Integer; safecall;
    procedure Set_NumOrdemServico(Value: Integer); safecall;
    function Get_NomProdutor: WideString; safecall;
    procedure Set_NomProdutor(const Value: WideString); safecall;
    function Get_NumCNPJCPFProdutorFormatado: WideString; safecall;
    procedure Set_NumCNPJCPFProdutorFormatado(const Value: WideString); safecall;
    function Get_NomPropriedadeRural: WideString; safecall;
    procedure Set_NomPropriedadeRural(const Value: WideString); safecall;
    function Get_NumImovelReceitaFederal: WideString; safecall;
    procedure Set_NumImovelReceitaFederal(const Value: WideString); safecall;
    function Get_QtdAnimais: Integer; safecall;
    procedure Set_QtdAnimais(Value: Integer); safecall;
    function Get_CodPessoaProdutor: Integer; safecall;
    procedure Set_CodPessoaProdutor(Value: Integer); safecall;
    function Get_SglProdutor: WideString; safecall;
    procedure Set_SglProdutor(const Value: WideString); safecall;
    function Get_CodPropriedadeRural: Integer; safecall;
    procedure Set_CodPropriedadeRural(Value: Integer); safecall;
    function Get_CodSituacaoOS: Integer; safecall;
    procedure Set_CodSituacaoOS(Value: Integer); safecall;
    function Get_SglSituacaoOS: WideString; safecall;
    procedure Set_SglSituacaoOS(const Value: WideString); safecall;
    function Get_DesSituacaoOS: WideString; safecall;
    procedure Set_DesSituacaoOS(const Value: WideString); safecall;
    function Get_CodLocalizacaoSisbov: Integer; safecall;
    procedure Set_CodLocalizacaoSisbov(Value: Integer); safecall;
    function Get_DtaEnvioPedido: TDateTime; safecall;
    procedure Set_DtaEnvioPedido(Value: TDateTime); safecall;
    function Get_NomServico: WideString; safecall;
    procedure Set_NomServico(const Value: WideString); safecall;
    function Get_NroConhecimento: WideString; safecall;
    procedure Set_NroConhecimento(const Value: WideString); safecall;
    property CodOrdemServico: Integer read Get_CodOrdemServico write Set_CodOrdemServico;
    property NumOrdemServico: Integer read Get_NumOrdemServico write Set_NumOrdemServico;
    property NomProdutor: WideString read Get_NomProdutor write Set_NomProdutor;
    property NumCNPJCPFProdutorFormatado: WideString read Get_NumCNPJCPFProdutorFormatado write Set_NumCNPJCPFProdutorFormatado;
    property NomPropriedadeRural: WideString read Get_NomPropriedadeRural write Set_NomPropriedadeRural;
    property NumImovelReceitaFederal: WideString read Get_NumImovelReceitaFederal write Set_NumImovelReceitaFederal;
    property QtdAnimais: Integer read Get_QtdAnimais write Set_QtdAnimais;
    property CodPessoaProdutor: Integer read Get_CodPessoaProdutor write Set_CodPessoaProdutor;
    property SglProdutor: WideString read Get_SglProdutor write Set_SglProdutor;
    property CodPropriedadeRural: Integer read Get_CodPropriedadeRural write Set_CodPropriedadeRural;
    property CodSituacaoOS: Integer read Get_CodSituacaoOS write Set_CodSituacaoOS;
    property SglSituacaoOS: WideString read Get_SglSituacaoOS write Set_SglSituacaoOS;
    property DesSituacaoOS: WideString read Get_DesSituacaoOS write Set_DesSituacaoOS;
    property CodLocalizacaoSisbov: Integer read Get_CodLocalizacaoSisbov write Set_CodLocalizacaoSisbov;
    property DtaEnvioPedido: TDateTime read Get_DtaEnvioPedido write Set_DtaEnvioPedido;
    property NomServico: WideString read Get_NomServico write Set_NomServico;
    property NroConhecimento: WideString read Get_NroConhecimento write Set_NroConhecimento;
  end;

// *********************************************************************//
// DispIntf:  IOrdemServicoResumidaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {663ED8CF-70ED-4F65-8FE4-CB20859A3604}
// *********************************************************************//
  IOrdemServicoResumidaDisp = dispinterface
    ['{663ED8CF-70ED-4F65-8FE4-CB20859A3604}']
    property CodOrdemServico: Integer dispid 201;
    property NumOrdemServico: Integer dispid 202;
    property NomProdutor: WideString dispid 203;
    property NumCNPJCPFProdutorFormatado: WideString dispid 204;
    property NomPropriedadeRural: WideString dispid 205;
    property NumImovelReceitaFederal: WideString dispid 206;
    property QtdAnimais: Integer dispid 207;
    property CodPessoaProdutor: Integer dispid 208;
    property SglProdutor: WideString dispid 209;
    property CodPropriedadeRural: Integer dispid 210;
    property CodSituacaoOS: Integer dispid 211;
    property SglSituacaoOS: WideString dispid 212;
    property DesSituacaoOS: WideString dispid 213;
    property CodLocalizacaoSisbov: Integer dispid 214;
    property DtaEnvioPedido: TDateTime dispid 216;
    property NomServico: WideString dispid 215;
    property NroConhecimento: WideString dispid 217;
  end;

// *********************************************************************//
// Interface: IArquivoRemessaPedido
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {99550757-4903-4ACC-998F-32CC9643D466}
// *********************************************************************//
  IArquivoRemessaPedido = interface(IDispatch)
    ['{99550757-4903-4ACC-998F-32CC9643D466}']
    function Get_CodArquivoRemessaPedido: Integer; safecall;
    procedure Set_CodArquivoRemessaPedido(Value: Integer); safecall;
    function Get_NomArquivoRemessaPedido: WideString; safecall;
    procedure Set_NomArquivoRemessaPedido(const Value: WideString); safecall;
    function Get_DtaCriacaoArquivo: TDateTime; safecall;
    procedure Set_DtaCriacaoArquivo(Value: TDateTime); safecall;
    function Get_QtdBytesArquivoRemessa: Integer; safecall;
    procedure Set_QtdBytesArquivoRemessa(Value: Integer); safecall;
    function Get_CodFabricanteIdentificador: Integer; safecall;
    procedure Set_CodFabricanteIdentificador(Value: Integer); safecall;
    function Get_NomReduzidoFabricante: WideString; safecall;
    procedure Set_NomReduzidoFabricante(const Value: WideString); safecall;
    function Get_NumRemessaFabricante: Integer; safecall;
    procedure Set_NumRemessaFabricante(Value: Integer); safecall;
    function Get_IndEnvioPedidoEmail: WideString; safecall;
    procedure Set_IndEnvioPedidoEmail(const Value: WideString); safecall;
    function Get_CodEmailEnvio: Integer; safecall;
    procedure Set_CodEmailEnvio(Value: Integer); safecall;
    function Get_DtaUltimoEnvio: TDateTime; safecall;
    procedure Set_DtaUltimoEnvio(Value: TDateTime); safecall;
    function Get_CodSituacaoEmail: Integer; safecall;
    procedure Set_CodSituacaoEmail(Value: Integer); safecall;
    function Get_SglSituacaoEmail: WideString; safecall;
    procedure Set_SglSituacaoEmail(const Value: WideString); safecall;
    function Get_DesSituacaoEmail: WideString; safecall;
    procedure Set_DesSituacaoEmail(const Value: WideString); safecall;
    function Get_IndEnvioPedidoFTP: WideString; safecall;
    procedure Set_IndEnvioPedidoFTP(const Value: WideString); safecall;
    function Get_CodArquivoFTPEnvio: Integer; safecall;
    procedure Set_CodArquivoFTPEnvio(Value: Integer); safecall;
    function Get_DtaUltimaTransferencia: TDateTime; safecall;
    procedure Set_DtaUltimaTransferencia(Value: TDateTime); safecall;
    function Get_CodSituacaoArquivoFTP: Integer; safecall;
    procedure Set_CodSituacaoArquivoFTP(Value: Integer); safecall;
    function Get_SglSituacaoArquivoFTP: WideString; safecall;
    procedure Set_SglSituacaoArquivoFTP(const Value: WideString); safecall;
    function Get_DesSituacaoArquivoFTP: WideString; safecall;
    procedure Set_DesSituacaoArquivoFTP(const Value: WideString); safecall;
    function Get_NumPedidoFabricanteInicio: Integer; safecall;
    procedure Set_NumPedidoFabricanteInicio(Value: Integer); safecall;
    function Get_QtdPedidosRemessa: Integer; safecall;
    procedure Set_QtdPedidosRemessa(Value: Integer); safecall;
    function Get_CodUsuarioCriacao: Integer; safecall;
    procedure Set_CodUsuarioCriacao(Value: Integer); safecall;
    function Get_NomUsuarioCriacao: WideString; safecall;
    procedure Set_NomUsuarioCriacao(const Value: WideString); safecall;
    function Get_QtdBytesArquivoFicha: Integer; safecall;
    procedure Set_QtdBytesArquivoFicha(Value: Integer); safecall;
    function Get_NomArquivoFichaPedido: WideString; safecall;
    procedure Set_NomArquivoFichaPedido(const Value: WideString); safecall;
    function Get_TxtCaminho: WideString; safecall;
    procedure Set_TxtCaminho(const Value: WideString); safecall;
    function Get_CodTipoArquivoRemessa: Integer; safecall;
    procedure Set_CodTipoArquivoRemessa(Value: Integer); safecall;
    function Get_DesTipoArquivoRemessa: WideString; safecall;
    procedure Set_DesTipoArquivoRemessa(const Value: WideString); safecall;
    property CodArquivoRemessaPedido: Integer read Get_CodArquivoRemessaPedido write Set_CodArquivoRemessaPedido;
    property NomArquivoRemessaPedido: WideString read Get_NomArquivoRemessaPedido write Set_NomArquivoRemessaPedido;
    property DtaCriacaoArquivo: TDateTime read Get_DtaCriacaoArquivo write Set_DtaCriacaoArquivo;
    property QtdBytesArquivoRemessa: Integer read Get_QtdBytesArquivoRemessa write Set_QtdBytesArquivoRemessa;
    property CodFabricanteIdentificador: Integer read Get_CodFabricanteIdentificador write Set_CodFabricanteIdentificador;
    property NomReduzidoFabricante: WideString read Get_NomReduzidoFabricante write Set_NomReduzidoFabricante;
    property NumRemessaFabricante: Integer read Get_NumRemessaFabricante write Set_NumRemessaFabricante;
    property IndEnvioPedidoEmail: WideString read Get_IndEnvioPedidoEmail write Set_IndEnvioPedidoEmail;
    property CodEmailEnvio: Integer read Get_CodEmailEnvio write Set_CodEmailEnvio;
    property DtaUltimoEnvio: TDateTime read Get_DtaUltimoEnvio write Set_DtaUltimoEnvio;
    property CodSituacaoEmail: Integer read Get_CodSituacaoEmail write Set_CodSituacaoEmail;
    property SglSituacaoEmail: WideString read Get_SglSituacaoEmail write Set_SglSituacaoEmail;
    property DesSituacaoEmail: WideString read Get_DesSituacaoEmail write Set_DesSituacaoEmail;
    property IndEnvioPedidoFTP: WideString read Get_IndEnvioPedidoFTP write Set_IndEnvioPedidoFTP;
    property CodArquivoFTPEnvio: Integer read Get_CodArquivoFTPEnvio write Set_CodArquivoFTPEnvio;
    property DtaUltimaTransferencia: TDateTime read Get_DtaUltimaTransferencia write Set_DtaUltimaTransferencia;
    property CodSituacaoArquivoFTP: Integer read Get_CodSituacaoArquivoFTP write Set_CodSituacaoArquivoFTP;
    property SglSituacaoArquivoFTP: WideString read Get_SglSituacaoArquivoFTP write Set_SglSituacaoArquivoFTP;
    property DesSituacaoArquivoFTP: WideString read Get_DesSituacaoArquivoFTP write Set_DesSituacaoArquivoFTP;
    property NumPedidoFabricanteInicio: Integer read Get_NumPedidoFabricanteInicio write Set_NumPedidoFabricanteInicio;
    property QtdPedidosRemessa: Integer read Get_QtdPedidosRemessa write Set_QtdPedidosRemessa;
    property CodUsuarioCriacao: Integer read Get_CodUsuarioCriacao write Set_CodUsuarioCriacao;
    property NomUsuarioCriacao: WideString read Get_NomUsuarioCriacao write Set_NomUsuarioCriacao;
    property QtdBytesArquivoFicha: Integer read Get_QtdBytesArquivoFicha write Set_QtdBytesArquivoFicha;
    property NomArquivoFichaPedido: WideString read Get_NomArquivoFichaPedido write Set_NomArquivoFichaPedido;
    property TxtCaminho: WideString read Get_TxtCaminho write Set_TxtCaminho;
    property CodTipoArquivoRemessa: Integer read Get_CodTipoArquivoRemessa write Set_CodTipoArquivoRemessa;
    property DesTipoArquivoRemessa: WideString read Get_DesTipoArquivoRemessa write Set_DesTipoArquivoRemessa;
  end;

// *********************************************************************//
// DispIntf:  IArquivoRemessaPedidoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {99550757-4903-4ACC-998F-32CC9643D466}
// *********************************************************************//
  IArquivoRemessaPedidoDisp = dispinterface
    ['{99550757-4903-4ACC-998F-32CC9643D466}']
    property CodArquivoRemessaPedido: Integer dispid 201;
    property NomArquivoRemessaPedido: WideString dispid 202;
    property DtaCriacaoArquivo: TDateTime dispid 203;
    property QtdBytesArquivoRemessa: Integer dispid 204;
    property CodFabricanteIdentificador: Integer dispid 205;
    property NomReduzidoFabricante: WideString dispid 206;
    property NumRemessaFabricante: Integer dispid 207;
    property IndEnvioPedidoEmail: WideString dispid 208;
    property CodEmailEnvio: Integer dispid 209;
    property DtaUltimoEnvio: TDateTime dispid 210;
    property CodSituacaoEmail: Integer dispid 211;
    property SglSituacaoEmail: WideString dispid 212;
    property DesSituacaoEmail: WideString dispid 213;
    property IndEnvioPedidoFTP: WideString dispid 214;
    property CodArquivoFTPEnvio: Integer dispid 215;
    property DtaUltimaTransferencia: TDateTime dispid 216;
    property CodSituacaoArquivoFTP: Integer dispid 217;
    property SglSituacaoArquivoFTP: WideString dispid 218;
    property DesSituacaoArquivoFTP: WideString dispid 219;
    property NumPedidoFabricanteInicio: Integer dispid 220;
    property QtdPedidosRemessa: Integer dispid 221;
    property CodUsuarioCriacao: Integer dispid 222;
    property NomUsuarioCriacao: WideString dispid 223;
    property QtdBytesArquivoFicha: Integer dispid 224;
    property NomArquivoFichaPedido: WideString dispid 225;
    property TxtCaminho: WideString dispid 226;
    property CodTipoArquivoRemessa: Integer dispid 227;
    property DesTipoArquivoRemessa: WideString dispid 228;
  end;

// *********************************************************************//
// Interface: IArquivosRemessaPedido
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FAA118AC-8A1F-4036-A65F-98F6D28A9A6C}
// *********************************************************************//
  IArquivosRemessaPedido = interface(IDispatch)
    ['{FAA118AC-8A1F-4036-A65F-98F6D28A9A6C}']
    function Buscar(CodArquivoRemessaPedido: Integer): Integer; safecall;
    function Pesquisar(DtaCriacaoArquivoInicio: TDateTime; DtaCriacaoArquivoFim: TDateTime; 
                       CodFabricanteIdentificador: Integer; NumRemessaFabricante: Integer; 
                       NumPedidoFabricante: Integer; const IndEnvioPedidoEmail: WideString; 
                       CodSituacaoEmail: Integer; const IndEnvioPedidoFTP: WideString; 
                       CodSituacaoArquivoFTP: Integer): Integer; safecall;
    function EOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function BOF: WordBool; safecall;
    function Get_ArquivoRemessaPedido: IArquivoRemessaPedido; safecall;
    function GerarNovaRemessa(CodFabricanteIdentificador: Integer): Integer; safecall;
    function ValorCampo(const NomCampo: WideString): WideString; safecall;
    property ArquivoRemessaPedido: IArquivoRemessaPedido read Get_ArquivoRemessaPedido;
  end;

// *********************************************************************//
// DispIntf:  IArquivosRemessaPedidoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FAA118AC-8A1F-4036-A65F-98F6D28A9A6C}
// *********************************************************************//
  IArquivosRemessaPedidoDisp = dispinterface
    ['{FAA118AC-8A1F-4036-A65F-98F6D28A9A6C}']
    function Buscar(CodArquivoRemessaPedido: Integer): Integer; dispid 201;
    function Pesquisar(DtaCriacaoArquivoInicio: TDateTime; DtaCriacaoArquivoFim: TDateTime; 
                       CodFabricanteIdentificador: Integer; NumRemessaFabricante: Integer; 
                       NumPedidoFabricante: Integer; const IndEnvioPedidoEmail: WideString; 
                       CodSituacaoEmail: Integer; const IndEnvioPedidoFTP: WideString; 
                       CodSituacaoArquivoFTP: Integer): Integer; dispid 202;
    function EOF: WordBool; dispid 203;
    function NumeroRegistros: Integer; dispid 204;
    procedure IrAoProximo; dispid 205;
    procedure IrAoAnterior; dispid 206;
    procedure IrAoPrimeiro; dispid 207;
    procedure IrAoUltimo; dispid 208;
    procedure Posicionar(NumPosicao: Integer); dispid 209;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 210;
    function BOF: WordBool; dispid 211;
    property ArquivoRemessaPedido: IArquivoRemessaPedido readonly dispid 212;
    function GerarNovaRemessa(CodFabricanteIdentificador: Integer): Integer; dispid 213;
    function ValorCampo(const NomCampo: WideString): WideString; dispid 214;
  end;

// *********************************************************************//
// Interface: IArquivoFTPRetorno
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FD4C1CD5-ADF3-409A-8EBB-4E07BFFBD5CF}
// *********************************************************************//
  IArquivoFTPRetorno = interface(IDispatch)
    ['{FD4C1CD5-ADF3-409A-8EBB-4E07BFFBD5CF}']
    function Get_CodArquivoFTPRetorno: Integer; safecall;
    procedure Set_CodArquivoFTPRetorno(Value: Integer); safecall;
    function Get_CodRotinaFTPRetorno: Integer; safecall;
    procedure Set_CodRotinaFTPRetorno(Value: Integer); safecall;
    function Get_DesRotinaFTPRetorno: WideString; safecall;
    procedure Set_DesRotinaFTPRetorno(const Value: WideString); safecall;
    function Get_NomArquivoLocal: WideString; safecall;
    procedure Set_NomArquivoLocal(const Value: WideString); safecall;
    function Get_NomArquivoRemoto: WideString; safecall;
    procedure Set_NomArquivoRemoto(const Value: WideString); safecall;
    function Get_DtaCriacaoArquivo: TDateTime; safecall;
    procedure Set_DtaCriacaoArquivo(Value: TDateTime); safecall;
    function Get_QtdBytesArquivo: Integer; safecall;
    procedure Set_QtdBytesArquivo(Value: Integer); safecall;
    function Get_CodTipoMensagem: Integer; safecall;
    procedure Set_CodTipoMensagem(Value: Integer); safecall;
    function Get_DesTipoMensagem: WideString; safecall;
    procedure Set_DesTipoMensagem(const Value: WideString); safecall;
    function Get_TxtMensagem: WideString; safecall;
    procedure Set_TxtMensagem(const Value: WideString); safecall;
    function Get_CodSituacaoArquivoFTP: Integer; safecall;
    procedure Set_CodSituacaoArquivoFTP(Value: Integer); safecall;
    function Get_DesSituacaoArquivoFTP: WideString; safecall;
    procedure Set_DesSituacaoArquivoFTP(const Value: WideString); safecall;
    function Get_DtaUltimaTransferencia: TDateTime; safecall;
    procedure Set_DtaUltimaTransferencia(Value: TDateTime); safecall;
    function Get_QtdDuracaoTransferencia: Integer; safecall;
    procedure Set_QtdDuracaoTransferencia(Value: Integer); safecall;
    function Get_QtdVezesTransferencia: Integer; safecall;
    procedure Set_QtdVezesTransferencia(Value: Integer); safecall;
    function Get_SglSituacaoArquivoFTP: WideString; safecall;
    procedure Set_SglSituacaoArquivoFTP(const Value: WideString); safecall;
    property CodArquivoFTPRetorno: Integer read Get_CodArquivoFTPRetorno write Set_CodArquivoFTPRetorno;
    property CodRotinaFTPRetorno: Integer read Get_CodRotinaFTPRetorno write Set_CodRotinaFTPRetorno;
    property DesRotinaFTPRetorno: WideString read Get_DesRotinaFTPRetorno write Set_DesRotinaFTPRetorno;
    property NomArquivoLocal: WideString read Get_NomArquivoLocal write Set_NomArquivoLocal;
    property NomArquivoRemoto: WideString read Get_NomArquivoRemoto write Set_NomArquivoRemoto;
    property DtaCriacaoArquivo: TDateTime read Get_DtaCriacaoArquivo write Set_DtaCriacaoArquivo;
    property QtdBytesArquivo: Integer read Get_QtdBytesArquivo write Set_QtdBytesArquivo;
    property CodTipoMensagem: Integer read Get_CodTipoMensagem write Set_CodTipoMensagem;
    property DesTipoMensagem: WideString read Get_DesTipoMensagem write Set_DesTipoMensagem;
    property TxtMensagem: WideString read Get_TxtMensagem write Set_TxtMensagem;
    property CodSituacaoArquivoFTP: Integer read Get_CodSituacaoArquivoFTP write Set_CodSituacaoArquivoFTP;
    property DesSituacaoArquivoFTP: WideString read Get_DesSituacaoArquivoFTP write Set_DesSituacaoArquivoFTP;
    property DtaUltimaTransferencia: TDateTime read Get_DtaUltimaTransferencia write Set_DtaUltimaTransferencia;
    property QtdDuracaoTransferencia: Integer read Get_QtdDuracaoTransferencia write Set_QtdDuracaoTransferencia;
    property QtdVezesTransferencia: Integer read Get_QtdVezesTransferencia write Set_QtdVezesTransferencia;
    property SglSituacaoArquivoFTP: WideString read Get_SglSituacaoArquivoFTP write Set_SglSituacaoArquivoFTP;
  end;

// *********************************************************************//
// DispIntf:  IArquivoFTPRetornoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FD4C1CD5-ADF3-409A-8EBB-4E07BFFBD5CF}
// *********************************************************************//
  IArquivoFTPRetornoDisp = dispinterface
    ['{FD4C1CD5-ADF3-409A-8EBB-4E07BFFBD5CF}']
    property CodArquivoFTPRetorno: Integer dispid 201;
    property CodRotinaFTPRetorno: Integer dispid 202;
    property DesRotinaFTPRetorno: WideString dispid 203;
    property NomArquivoLocal: WideString dispid 204;
    property NomArquivoRemoto: WideString dispid 205;
    property DtaCriacaoArquivo: TDateTime dispid 206;
    property QtdBytesArquivo: Integer dispid 207;
    property CodTipoMensagem: Integer dispid 208;
    property DesTipoMensagem: WideString dispid 209;
    property TxtMensagem: WideString dispid 210;
    property CodSituacaoArquivoFTP: Integer dispid 211;
    property DesSituacaoArquivoFTP: WideString dispid 212;
    property DtaUltimaTransferencia: TDateTime dispid 213;
    property QtdDuracaoTransferencia: Integer dispid 214;
    property QtdVezesTransferencia: Integer dispid 215;
    property SglSituacaoArquivoFTP: WideString dispid 216;
  end;

// *********************************************************************//
// Interface: IArquivosFTPRetorno
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A270C216-328D-4379-AA8B-2EBC3A3A61AC}
// *********************************************************************//
  IArquivosFTPRetorno = interface(IDispatch)
    ['{A270C216-328D-4379-AA8B-2EBC3A3A61AC}']
    function Get_ArquivoFTPRetorno: IArquivoFTPRetorno; safecall;
    function Buscar(CodArquivoFTPRetorno: Integer): Integer; safecall;
    function Pesquisar(CodRotinaFTPRetorno: Integer; const NomArquivoRemoto: WideString; 
                       CodTipoMensagem: Integer; CodSituacaoArquivoFTP: Integer; 
                       DtaTransferenciaArquivoInicio: TDateTime; 
                       DtaTransferenciaArquivoFim: TDateTime; 
                       const IndAindaSemTransferencia: WideString): Integer; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function NumeroRegistros: Integer; safecall;
    function AlterarSituacaoParaPendente(CodArquivoFTPRetorno: Integer): Integer; safecall;
    property ArquivoFTPRetorno: IArquivoFTPRetorno read Get_ArquivoFTPRetorno;
  end;

// *********************************************************************//
// DispIntf:  IArquivosFTPRetornoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A270C216-328D-4379-AA8B-2EBC3A3A61AC}
// *********************************************************************//
  IArquivosFTPRetornoDisp = dispinterface
    ['{A270C216-328D-4379-AA8B-2EBC3A3A61AC}']
    property ArquivoFTPRetorno: IArquivoFTPRetorno readonly dispid 201;
    function Buscar(CodArquivoFTPRetorno: Integer): Integer; dispid 202;
    function Pesquisar(CodRotinaFTPRetorno: Integer; const NomArquivoRemoto: WideString; 
                       CodTipoMensagem: Integer; CodSituacaoArquivoFTP: Integer; 
                       DtaTransferenciaArquivoInicio: TDateTime; 
                       DtaTransferenciaArquivoFim: TDateTime; 
                       const IndAindaSemTransferencia: WideString): Integer; dispid 203;
    function BOF: WordBool; dispid 204;
    function EOF: WordBool; dispid 205;
    procedure IrAoPrimeiro; dispid 206;
    procedure IrAoUltimo; dispid 207;
    procedure IrAoProximo; dispid 208;
    procedure IrAoAnterior; dispid 209;
    procedure Posicionar(NumPosicao: Integer); dispid 210;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 211;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 212;
    function NumeroRegistros: Integer; dispid 213;
    function AlterarSituacaoParaPendente(CodArquivoFTPRetorno: Integer): Integer; dispid 214;
  end;

// *********************************************************************//
// Interface: IEnderecos
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C757BCBF-2E45-4487-AE9C-D9FD623B43E9}
// *********************************************************************//
  IEnderecos = interface(IDispatch)
    ['{C757BCBF-2E45-4487-AE9C-D9FD623B43E9}']
    function Buscar(CodEndereco: Integer): Integer; safecall;
    function Get_Endereco: IEndereco; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    function EOF: WordBool; safecall;
    function ValorCampo(const CodCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    property Endereco: IEndereco read Get_Endereco;
  end;

// *********************************************************************//
// DispIntf:  IEnderecosDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C757BCBF-2E45-4487-AE9C-D9FD623B43E9}
// *********************************************************************//
  IEnderecosDisp = dispinterface
    ['{C757BCBF-2E45-4487-AE9C-D9FD623B43E9}']
    function Buscar(CodEndereco: Integer): Integer; dispid 201;
    property Endereco: IEndereco readonly dispid 202;
    procedure IrAoPrimeiro; dispid 203;
    procedure IrAoProximo; dispid 204;
    function EOF: WordBool; dispid 205;
    function ValorCampo(const CodCampo: WideString): OleVariant; dispid 206;
    procedure FecharPesquisa; dispid 207;
  end;

// *********************************************************************//
// Interface: IRotinasFTPRetorno
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4EACFFAA-9263-4BC7-8D5F-BCC6FDA0229C}
// *********************************************************************//
  IRotinasFTPRetorno = interface(IDispatch)
    ['{4EACFFAA-9263-4BC7-8D5F-BCC6FDA0229C}']
    function Pesquisar: Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRotinasFTPRetornoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4EACFFAA-9263-4BC7-8D5F-BCC6FDA0229C}
// *********************************************************************//
  IRotinasFTPRetornoDisp = dispinterface
    ['{4EACFFAA-9263-4BC7-8D5F-BCC6FDA0229C}']
    function Pesquisar: Integer; dispid 201;
    function EOF: WordBool; dispid 202;
    procedure IrAoProximo; dispid 203;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 204;
    procedure FecharPesquisa; dispid 205;
  end;

// *********************************************************************//
// Interface: IEmailEnvio
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C535830-D1AA-4951-92CD-91F316E016A3}
// *********************************************************************//
  IEmailEnvio = interface(IDispatch)
    ['{6C535830-D1AA-4951-92CD-91F316E016A3}']
    function Get_CodEmailEnvio: Integer; safecall;
    procedure Set_CodEmailEnvio(Value: Integer); safecall;
    function Get_CodTipoEmail: Integer; safecall;
    procedure Set_CodTipoEmail(Value: Integer); safecall;
    function Get_DesTipoEmail: WideString; safecall;
    procedure Set_DesTipoEmail(const Value: WideString); safecall;
    function Get_TxtAssunto: WideString; safecall;
    procedure Set_TxtAssunto(const Value: WideString); safecall;
    function Get_TxtCorpoEmail: WideString; safecall;
    procedure Set_TxtCorpoEmail(const Value: WideString); safecall;
    function Get_CodTipoMensagem: Integer; safecall;
    procedure Set_CodTipoMensagem(Value: Integer); safecall;
    function Get_DesTipoMensagem: WideString; safecall;
    procedure Set_DesTipoMensagem(const Value: WideString); safecall;
    function Get_TxtMensagem: WideString; safecall;
    procedure Set_TxtMensagem(const Value: WideString); safecall;
    function Get_CodSituacaoEmail: Integer; safecall;
    procedure Set_CodSituacaoEmail(Value: Integer); safecall;
    function Get_SglSituacaoEmail: WideString; safecall;
    procedure Set_SglSituacaoEmail(const Value: WideString); safecall;
    function Get_DesSituacaoEmail: WideString; safecall;
    procedure Set_DesSituacaoEmail(const Value: WideString); safecall;
    function Get_DtaUltimoEnvio: TDateTime; safecall;
    procedure Set_DtaUltimoEnvio(Value: TDateTime); safecall;
    function Get_QtdVezesEnvio: Integer; safecall;
    procedure Set_QtdVezesEnvio(Value: Integer); safecall;
    function Get_QtdDuracaoEnvio: Integer; safecall;
    procedure Set_QtdDuracaoEnvio(Value: Integer); safecall;
    property CodEmailEnvio: Integer read Get_CodEmailEnvio write Set_CodEmailEnvio;
    property CodTipoEmail: Integer read Get_CodTipoEmail write Set_CodTipoEmail;
    property DesTipoEmail: WideString read Get_DesTipoEmail write Set_DesTipoEmail;
    property TxtAssunto: WideString read Get_TxtAssunto write Set_TxtAssunto;
    property TxtCorpoEmail: WideString read Get_TxtCorpoEmail write Set_TxtCorpoEmail;
    property CodTipoMensagem: Integer read Get_CodTipoMensagem write Set_CodTipoMensagem;
    property DesTipoMensagem: WideString read Get_DesTipoMensagem write Set_DesTipoMensagem;
    property TxtMensagem: WideString read Get_TxtMensagem write Set_TxtMensagem;
    property CodSituacaoEmail: Integer read Get_CodSituacaoEmail write Set_CodSituacaoEmail;
    property SglSituacaoEmail: WideString read Get_SglSituacaoEmail write Set_SglSituacaoEmail;
    property DesSituacaoEmail: WideString read Get_DesSituacaoEmail write Set_DesSituacaoEmail;
    property DtaUltimoEnvio: TDateTime read Get_DtaUltimoEnvio write Set_DtaUltimoEnvio;
    property QtdVezesEnvio: Integer read Get_QtdVezesEnvio write Set_QtdVezesEnvio;
    property QtdDuracaoEnvio: Integer read Get_QtdDuracaoEnvio write Set_QtdDuracaoEnvio;
  end;

// *********************************************************************//
// DispIntf:  IEmailEnvioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C535830-D1AA-4951-92CD-91F316E016A3}
// *********************************************************************//
  IEmailEnvioDisp = dispinterface
    ['{6C535830-D1AA-4951-92CD-91F316E016A3}']
    property CodEmailEnvio: Integer dispid 201;
    property CodTipoEmail: Integer dispid 202;
    property DesTipoEmail: WideString dispid 203;
    property TxtAssunto: WideString dispid 204;
    property TxtCorpoEmail: WideString dispid 205;
    property CodTipoMensagem: Integer dispid 206;
    property DesTipoMensagem: WideString dispid 207;
    property TxtMensagem: WideString dispid 208;
    property CodSituacaoEmail: Integer dispid 209;
    property SglSituacaoEmail: WideString dispid 210;
    property DesSituacaoEmail: WideString dispid 211;
    property DtaUltimoEnvio: TDateTime dispid 212;
    property QtdVezesEnvio: Integer dispid 213;
    property QtdDuracaoEnvio: Integer dispid 214;
  end;

// *********************************************************************//
// Interface: IEmailsEnvio
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F07FCC5B-959F-44FF-A862-23EBCE1AB90B}
// *********************************************************************//
  IEmailsEnvio = interface(IDispatch)
    ['{F07FCC5B-959F-44FF-A862-23EBCE1AB90B}']
    function Get_EmailEnvio: IEmailEnvio; safecall;
    function Buscar(CodEmailEnvio: Integer): Integer; safecall;
    function Pesquisar(const TxtEmailDestinatario: WideString; const NomPessoa: WideString; 
                       CodEmailEnvio: Integer; CodTipoEmail: Integer; const TxtAssunto: WideString; 
                       CodTipoMensagem: Integer; CodSituacaoEmail: Integer; 
                       DtaUltimoEnvioInicio: TDateTime; DtaUltimoEnvioFim: TDateTime; 
                       const IndAindaSemEnvio: WideString): Integer; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function NumeroRegistros: Integer; safecall;
    function PesquisarDestinatarios(CodEmailEnvio: Integer): Integer; safecall;
    function PesquisarArquivosAnexos(CodEmailEnvio: Integer): Integer; safecall;
    function AlterarSituacaoParaPendente(CodEmailEnvio: Integer): Integer; safecall;
    property EmailEnvio: IEmailEnvio read Get_EmailEnvio;
  end;

// *********************************************************************//
// DispIntf:  IEmailsEnvioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F07FCC5B-959F-44FF-A862-23EBCE1AB90B}
// *********************************************************************//
  IEmailsEnvioDisp = dispinterface
    ['{F07FCC5B-959F-44FF-A862-23EBCE1AB90B}']
    property EmailEnvio: IEmailEnvio readonly dispid 201;
    function Buscar(CodEmailEnvio: Integer): Integer; dispid 202;
    function Pesquisar(const TxtEmailDestinatario: WideString; const NomPessoa: WideString; 
                       CodEmailEnvio: Integer; CodTipoEmail: Integer; const TxtAssunto: WideString; 
                       CodTipoMensagem: Integer; CodSituacaoEmail: Integer; 
                       DtaUltimoEnvioInicio: TDateTime; DtaUltimoEnvioFim: TDateTime; 
                       const IndAindaSemEnvio: WideString): Integer; dispid 203;
    function BOF: WordBool; dispid 204;
    function EOF: WordBool; dispid 205;
    procedure IrAoPrimeiro; dispid 206;
    procedure IrAoUltimo; dispid 207;
    procedure IrAoProximo; dispid 208;
    procedure IrAoAnterior; dispid 209;
    procedure Posicionar(NumPosicao: Integer); dispid 210;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 211;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 212;
    function NumeroRegistros: Integer; dispid 213;
    function PesquisarDestinatarios(CodEmailEnvio: Integer): Integer; dispid 214;
    function PesquisarArquivosAnexos(CodEmailEnvio: Integer): Integer; dispid 215;
    function AlterarSituacaoParaPendente(CodEmailEnvio: Integer): Integer; dispid 216;
  end;

// *********************************************************************//
// Interface: ISituacoesCodigoSISBOV
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0EDD9CA7-576C-406F-B758-F64DEA3019BE}
// *********************************************************************//
  ISituacoesCodigoSISBOV = interface(IDispatch)
    ['{0EDD9CA7-576C-406F-B758-F64DEA3019BE}']
    function Pesquisar(const IndSituacaoAplicavel: WideString; const IndFiltroPesquisaOS: WideString): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    function ValorCampo(const NomeColuna: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    procedure IrAoProximo; safecall;
  end;

// *********************************************************************//
// DispIntf:  ISituacoesCodigoSISBOVDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0EDD9CA7-576C-406F-B758-F64DEA3019BE}
// *********************************************************************//
  ISituacoesCodigoSISBOVDisp = dispinterface
    ['{0EDD9CA7-576C-406F-B758-F64DEA3019BE}']
    function Pesquisar(const IndSituacaoAplicavel: WideString; const IndFiltroPesquisaOS: WideString): Integer; dispid 201;
    function EOF: WordBool; dispid 202;
    procedure IrAoPrimeiro; dispid 203;
    function ValorCampo(const NomeColuna: WideString): OleVariant; dispid 204;
    procedure FecharPesquisa; dispid 205;
    procedure IrAoProximo; dispid 206;
  end;

// *********************************************************************//
// Interface: ITiposEmail
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {805EC0EA-909E-4756-830F-B96FD341011B}
// *********************************************************************//
  ITiposEmail = interface(IDispatch)
    ['{805EC0EA-909E-4756-830F-B96FD341011B}']
    function Pesquisar: Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoPrimeiro; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposEmailDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {805EC0EA-909E-4756-830F-B96FD341011B}
// *********************************************************************//
  ITiposEmailDisp = dispinterface
    ['{805EC0EA-909E-4756-830F-B96FD341011B}']
    function Pesquisar: Integer; dispid 201;
    function EOF: WordBool; dispid 202;
    procedure IrAoProximo; dispid 203;
    procedure IrAoPrimeiro; dispid 204;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 205;
    procedure FecharPesquisa; dispid 206;
  end;

// *********************************************************************//
// Interface: ISituacoesEmail
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6F51F637-1E21-41A6-9C11-47DE67632F65}
// *********************************************************************//
  ISituacoesEmail = interface(IDispatch)
    ['{6F51F637-1E21-41A6-9C11-47DE67632F65}']
    function Pesquisar: Integer; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoPrimeiro; safecall;
    function EOF: WordBool; safecall;
    procedure FecharPesquisa; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
  end;

// *********************************************************************//
// DispIntf:  ISituacoesEmailDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6F51F637-1E21-41A6-9C11-47DE67632F65}
// *********************************************************************//
  ISituacoesEmailDisp = dispinterface
    ['{6F51F637-1E21-41A6-9C11-47DE67632F65}']
    function Pesquisar: Integer; dispid 201;
    procedure IrAoProximo; dispid 202;
    procedure IrAoPrimeiro; dispid 203;
    function EOF: WordBool; dispid 204;
    procedure FecharPesquisa; dispid 205;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 206;
  end;

// *********************************************************************//
// Interface: ISituacoesFTP
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D7398834-4FDD-418B-AFD0-1EFB5A81B704}
// *********************************************************************//
  ISituacoesFTP = interface(IDispatch)
    ['{D7398834-4FDD-418B-AFD0-1EFB5A81B704}']
    function Pesquisar: Integer; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoPrimeiro; safecall;
    function EOF: WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  ISituacoesFTPDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D7398834-4FDD-418B-AFD0-1EFB5A81B704}
// *********************************************************************//
  ISituacoesFTPDisp = dispinterface
    ['{D7398834-4FDD-418B-AFD0-1EFB5A81B704}']
    function Pesquisar: Integer; dispid 201;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 202;
    procedure FecharPesquisa; dispid 203;
    procedure IrAoProximo; dispid 204;
    procedure IrAoPrimeiro; dispid 205;
    function EOF: WordBool; dispid 206;
  end;

// *********************************************************************//
// Interface: ITiposMensagem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6F7046A0-1A55-4219-8EF5-1017E3CAF68B}
// *********************************************************************//
  ITiposMensagem = interface(IDispatch)
    ['{6F7046A0-1A55-4219-8EF5-1017E3CAF68B}']
    function Pesquisar: Integer; safecall;
    function EOF: WordBool; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposMensagemDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6F7046A0-1A55-4219-8EF5-1017E3CAF68B}
// *********************************************************************//
  ITiposMensagemDisp = dispinterface
    ['{6F7046A0-1A55-4219-8EF5-1017E3CAF68B}']
    function Pesquisar: Integer; dispid 201;
    function EOF: WordBool; dispid 202;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 203;
    procedure IrAoPrimeiro; dispid 204;
    procedure IrAoProximo; dispid 205;
    procedure FecharPesquisa; dispid 206;
  end;

// *********************************************************************//
// Interface: IRotinasFTPEnvio
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C7E4E3B-6455-4B52-98F2-60CA99A547FB}
// *********************************************************************//
  IRotinasFTPEnvio = interface(IDispatch)
    ['{6C7E4E3B-6455-4B52-98F2-60CA99A547FB}']
    function Pesquisar: Integer; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    function EOF: WordBool; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  IRotinasFTPEnvioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6C7E4E3B-6455-4B52-98F2-60CA99A547FB}
// *********************************************************************//
  IRotinasFTPEnvioDisp = dispinterface
    ['{6C7E4E3B-6455-4B52-98F2-60CA99A547FB}']
    function Pesquisar: Integer; dispid 201;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 202;
    procedure IrAoPrimeiro; dispid 203;
    procedure IrAoProximo; dispid 204;
    function EOF: WordBool; dispid 205;
    procedure FecharPesquisa; dispid 206;
  end;

// *********************************************************************//
// Interface: IAplicativos
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {04C035A7-CFDF-4CFA-AC93-194F6B731FE4}
// *********************************************************************//
  IAplicativos = interface(IDispatch)
    ['{04C035A7-CFDF-4CFA-AC93-194F6B731FE4}']
    function Pesquisar: Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  IAplicativosDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {04C035A7-CFDF-4CFA-AC93-194F6B731FE4}
// *********************************************************************//
  IAplicativosDisp = dispinterface
    ['{04C035A7-CFDF-4CFA-AC93-194F6B731FE4}']
    function Pesquisar: Integer; dispid 201;
    function EOF: WordBool; dispid 202;
    procedure IrAoPrimeiro; dispid 203;
    procedure IrAoProximo; dispid 204;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 205;
    procedure FecharPesquisa; dispid 206;
  end;

// *********************************************************************//
// Interface: IImportacoesFabricante
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93591B3A-0513-416B-942B-D90956DA8D87}
// *********************************************************************//
  IImportacoesFabricante = interface(IDispatch)
    ['{93591B3A-0513-416B-942B-D90956DA8D87}']
    function ArmazenarArquivoUpload(CodTipoOrigemArqImport: Integer; const NomArqUpload: WideString): Integer; safecall;
    function Buscar(CodArqImportFabricante: Integer): Integer; safecall;
    function Pesquisar(const NomArqUpload: WideString; DtaImportacaoInicio: TDateTime; 
                       DtaImportacaoFim: TDateTime; const NomUsuarioUpload: WideString; 
                       CodTipoOrigemArqImport: Integer; const CodSituacaoArqImport: WideString; 
                       DtaProcessamentoInicio: TDateTime; DtaProcessamentoFim: TDateTime; 
                       const NomUsuarioProc: WideString): Integer; safecall;
    function Excluir(CodArqImportFabricante: Integer): Integer; safecall;
    function ProcessarArquivo(CodArqImportDadoGeral: Integer): Integer; safecall;
    function PesquisarOcorrencias(CodArqImportFabricante: Integer; CodTipoMensagem: Integer): Integer; safecall;
    function BOF: WordBool; safecall;
    function EOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    function Deslocar(NumDeslocamento: Integer): Integer; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function Get_ImportacaoFabricante: IImportacaoFabricante; safecall;
    property ImportacaoFabricante: IImportacaoFabricante read Get_ImportacaoFabricante;
  end;

// *********************************************************************//
// DispIntf:  IImportacoesFabricanteDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93591B3A-0513-416B-942B-D90956DA8D87}
// *********************************************************************//
  IImportacoesFabricanteDisp = dispinterface
    ['{93591B3A-0513-416B-942B-D90956DA8D87}']
    function ArmazenarArquivoUpload(CodTipoOrigemArqImport: Integer; const NomArqUpload: WideString): Integer; dispid 201;
    function Buscar(CodArqImportFabricante: Integer): Integer; dispid 202;
    function Pesquisar(const NomArqUpload: WideString; DtaImportacaoInicio: TDateTime; 
                       DtaImportacaoFim: TDateTime; const NomUsuarioUpload: WideString; 
                       CodTipoOrigemArqImport: Integer; const CodSituacaoArqImport: WideString; 
                       DtaProcessamentoInicio: TDateTime; DtaProcessamentoFim: TDateTime; 
                       const NomUsuarioProc: WideString): Integer; dispid 203;
    function Excluir(CodArqImportFabricante: Integer): Integer; dispid 204;
    function ProcessarArquivo(CodArqImportDadoGeral: Integer): Integer; dispid 205;
    function PesquisarOcorrencias(CodArqImportFabricante: Integer; CodTipoMensagem: Integer): Integer; dispid 206;
    function BOF: WordBool; dispid 207;
    function EOF: WordBool; dispid 208;
    function NumeroRegistros: Integer; dispid 209;
    procedure IrAoPrimeiro; dispid 210;
    procedure IrAoUltimo; dispid 211;
    procedure IrAoProximo; dispid 212;
    procedure IrAoAnterior; dispid 213;
    procedure Posicionar(NumPosicao: Integer); dispid 214;
    function Deslocar(NumDeslocamento: Integer): Integer; dispid 215;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 216;
    property ImportacaoFabricante: IImportacaoFabricante readonly dispid 217;
  end;

// *********************************************************************//
// Interface: IImportacaoFabricante
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0460F646-3496-4285-96F2-93F31B04C85D}
// *********************************************************************//
  IImportacaoFabricante = interface(IDispatch)
    ['{0460F646-3496-4285-96F2-93F31B04C85D}']
    function Get_CodArqImportFabricante: Integer; safecall;
    function Get_NomArqUpload: WideString; safecall;
    function Get_NomArqImportFabricante: WideString; safecall;
    function Get_DtaImportacao: TDateTime; safecall;
    function Get_CodFabricanteIdentificador: Integer; safecall;
    function Get_NomFabricanteIdentificador: WideString; safecall;
    function Get_NomReduzidoFabricanteIdentificador: WideString; safecall;
    function Get_CodTipoArqImportFabricante: Integer; safecall;
    function Get_SglTipoArqImportFabricante: WideString; safecall;
    function Get_DesTipoArqImportFabricante: WideString; safecall;
    function Get_CodUsuarioUpload: Integer; safecall;
    function Get_NomUsuarioUpload: WideString; safecall;
    function Get_CodTipoOrigemArqImport: Integer; safecall;
    function Get_SglTipoOrigemArqImport: WideString; safecall;
    function Get_DesTipoOrigemArqImport: WideString; safecall;
    function Get_CodSituacaoArqImport: WideString; safecall;
    function Get_DesSituacaoArqImport: WideString; safecall;
    function Get_QtdRegistrosTotal: Integer; safecall;
    function Get_QtdRegistrosErrados: Integer; safecall;
    function Get_QtdRegistrosProcessados: Integer; safecall;
    function Get_QtdOcorrencias: Integer; safecall;
    function Get_DtaProcessamento: TDateTime; safecall;
    function Get_CodUsuarioProc: Integer; safecall;
    function Get_NomUsuarioProc: WideString; safecall;
    function Get_CodTarefa: Integer; safecall;
    function Get_CodSituacaoTarefa: WideString; safecall;
    function Get_DesSituacaoTarefa: WideString; safecall;
    function Get_DtaInicioPrevistoTarefa: TDateTime; safecall;
    function Get_DtaInicioRealTarefa: TDateTime; safecall;
    function Get_DtaFimRealTarefa: TDateTime; safecall;
    function Get_TxtMensagem: WideString; safecall;
    property CodArqImportFabricante: Integer read Get_CodArqImportFabricante;
    property NomArqUpload: WideString read Get_NomArqUpload;
    property NomArqImportFabricante: WideString read Get_NomArqImportFabricante;
    property DtaImportacao: TDateTime read Get_DtaImportacao;
    property CodFabricanteIdentificador: Integer read Get_CodFabricanteIdentificador;
    property NomFabricanteIdentificador: WideString read Get_NomFabricanteIdentificador;
    property NomReduzidoFabricanteIdentificador: WideString read Get_NomReduzidoFabricanteIdentificador;
    property CodTipoArqImportFabricante: Integer read Get_CodTipoArqImportFabricante;
    property SglTipoArqImportFabricante: WideString read Get_SglTipoArqImportFabricante;
    property DesTipoArqImportFabricante: WideString read Get_DesTipoArqImportFabricante;
    property CodUsuarioUpload: Integer read Get_CodUsuarioUpload;
    property NomUsuarioUpload: WideString read Get_NomUsuarioUpload;
    property CodTipoOrigemArqImport: Integer read Get_CodTipoOrigemArqImport;
    property SglTipoOrigemArqImport: WideString read Get_SglTipoOrigemArqImport;
    property DesTipoOrigemArqImport: WideString read Get_DesTipoOrigemArqImport;
    property CodSituacaoArqImport: WideString read Get_CodSituacaoArqImport;
    property DesSituacaoArqImport: WideString read Get_DesSituacaoArqImport;
    property QtdRegistrosTotal: Integer read Get_QtdRegistrosTotal;
    property QtdRegistrosErrados: Integer read Get_QtdRegistrosErrados;
    property QtdRegistrosProcessados: Integer read Get_QtdRegistrosProcessados;
    property QtdOcorrencias: Integer read Get_QtdOcorrencias;
    property DtaProcessamento: TDateTime read Get_DtaProcessamento;
    property CodUsuarioProc: Integer read Get_CodUsuarioProc;
    property NomUsuarioProc: WideString read Get_NomUsuarioProc;
    property CodTarefa: Integer read Get_CodTarefa;
    property CodSituacaoTarefa: WideString read Get_CodSituacaoTarefa;
    property DesSituacaoTarefa: WideString read Get_DesSituacaoTarefa;
    property DtaInicioPrevistoTarefa: TDateTime read Get_DtaInicioPrevistoTarefa;
    property DtaInicioRealTarefa: TDateTime read Get_DtaInicioRealTarefa;
    property DtaFimRealTarefa: TDateTime read Get_DtaFimRealTarefa;
    property TxtMensagem: WideString read Get_TxtMensagem;
  end;

// *********************************************************************//
// DispIntf:  IImportacaoFabricanteDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0460F646-3496-4285-96F2-93F31B04C85D}
// *********************************************************************//
  IImportacaoFabricanteDisp = dispinterface
    ['{0460F646-3496-4285-96F2-93F31B04C85D}']
    property CodArqImportFabricante: Integer readonly dispid 201;
    property NomArqUpload: WideString readonly dispid 202;
    property NomArqImportFabricante: WideString readonly dispid 203;
    property DtaImportacao: TDateTime readonly dispid 204;
    property CodFabricanteIdentificador: Integer readonly dispid 205;
    property NomFabricanteIdentificador: WideString readonly dispid 206;
    property NomReduzidoFabricanteIdentificador: WideString readonly dispid 207;
    property CodTipoArqImportFabricante: Integer readonly dispid 208;
    property SglTipoArqImportFabricante: WideString readonly dispid 209;
    property DesTipoArqImportFabricante: WideString readonly dispid 210;
    property CodUsuarioUpload: Integer readonly dispid 211;
    property NomUsuarioUpload: WideString readonly dispid 212;
    property CodTipoOrigemArqImport: Integer readonly dispid 213;
    property SglTipoOrigemArqImport: WideString readonly dispid 214;
    property DesTipoOrigemArqImport: WideString readonly dispid 215;
    property CodSituacaoArqImport: WideString readonly dispid 216;
    property DesSituacaoArqImport: WideString readonly dispid 217;
    property QtdRegistrosTotal: Integer readonly dispid 218;
    property QtdRegistrosErrados: Integer readonly dispid 219;
    property QtdRegistrosProcessados: Integer readonly dispid 220;
    property QtdOcorrencias: Integer readonly dispid 221;
    property DtaProcessamento: TDateTime readonly dispid 222;
    property CodUsuarioProc: Integer readonly dispid 223;
    property NomUsuarioProc: WideString readonly dispid 224;
    property CodTarefa: Integer readonly dispid 225;
    property CodSituacaoTarefa: WideString readonly dispid 226;
    property DesSituacaoTarefa: WideString readonly dispid 227;
    property DtaInicioPrevistoTarefa: TDateTime readonly dispid 228;
    property DtaInicioRealTarefa: TDateTime readonly dispid 229;
    property DtaFimRealTarefa: TDateTime readonly dispid 230;
    property TxtMensagem: WideString readonly dispid 231;
  end;

// *********************************************************************//
// Interface: ISituacoesArqImport
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E948FC93-C358-4FA3-8CA2-60A16F7EE6EE}
// *********************************************************************//
  ISituacoesArqImport = interface(IDispatch)
    ['{E948FC93-C358-4FA3-8CA2-60A16F7EE6EE}']
    function Pesquisar: Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  ISituacoesArqImportDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E948FC93-C358-4FA3-8CA2-60A16F7EE6EE}
// *********************************************************************//
  ISituacoesArqImportDisp = dispinterface
    ['{E948FC93-C358-4FA3-8CA2-60A16F7EE6EE}']
    function Pesquisar: Integer; dispid 201;
    function EOF: WordBool; dispid 202;
    procedure IrAoPrimeiro; dispid 203;
    procedure IrAoProximo; dispid 204;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 205;
    procedure FecharPesquisa; dispid 206;
  end;

// *********************************************************************//
// Interface: IMenus
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CAD9D2C3-0799-49AE-BDCC-3F0E0EA323F9}
// *********************************************************************//
  IMenus = interface(IDispatch)
    ['{CAD9D2C3-0799-49AE-BDCC-3F0E0EA323F9}']
    function Pesquisar(CodPapel: Integer): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  IMenusDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CAD9D2C3-0799-49AE-BDCC-3F0E0EA323F9}
// *********************************************************************//
  IMenusDisp = dispinterface
    ['{CAD9D2C3-0799-49AE-BDCC-3F0E0EA323F9}']
    function Pesquisar(CodPapel: Integer): Integer; dispid 201;
    function EOF: WordBool; dispid 203;
    procedure IrAoPrimeiro; dispid 204;
    procedure IrAoProximo; dispid 205;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 206;
    procedure FecharPesquisa; dispid 202;
  end;

// *********************************************************************//
// Interface: IBoletoBancario
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC500A10-6DD3-4D89-982E-5CA9A3C9B0E8}
// *********************************************************************//
  IBoletoBancario = interface(IDispatch)
    ['{CC500A10-6DD3-4D89-982E-5CA9A3C9B0E8}']
    function Get_CodOrdemServico: Integer; safecall;
    procedure Set_CodOrdemServico(Value: Integer); safecall;
    function Get_CodBoletoBancario: Integer; safecall;
    procedure Set_CodBoletoBancario(Value: Integer); safecall;
    function Get_CodIdentificacaoBancaria: Integer; safecall;
    procedure Set_CodIdentificacaoBancaria(Value: Integer); safecall;
    function Get_NomBanco: WideString; safecall;
    procedure Set_NomBanco(const Value: WideString); safecall;
    function Get_CodSituacaoBoleto: WideString; safecall;
    procedure Set_CodSituacaoBoleto(const Value: WideString); safecall;
    function Get_SglSituacaoBoleto: WideString; safecall;
    procedure Set_SglSituacaoBoleto(const Value: WideString); safecall;
    function Get_DesSituacaoBoleto: WideString; safecall;
    procedure Set_DesSituacaoBoleto(const Value: WideString); safecall;
    function Get_NomPessoaProdutor: WideString; safecall;
    procedure Set_NomPessoaProdutor(const Value: WideString); safecall;
    function Get_NumCNPJCPFFormatado: WideString; safecall;
    procedure Set_NumCNPJCPFFormatado(const Value: WideString); safecall;
    function Get_NumCNPJCPF: WideString; safecall;
    procedure Set_NumCNPJCPF(const Value: WideString); safecall;
    function Get_NomPropriedadeRural: WideString; safecall;
    procedure Set_NomPropriedadeRural(const Value: WideString); safecall;
    function Get_NumImovelReceitaFederal: WideString; safecall;
    procedure Set_NumImovelReceitaFederal(const Value: WideString); safecall;
    function Get_DtaGeracaoRemessa: TDateTime; safecall;
    procedure Set_DtaGeracaoRemessa(Value: TDateTime); safecall;
    function Get_EnderecoCobranca: Endereco; safecall;
    procedure Set_EnderecoCobranca(const Value: Endereco); safecall;
    function Get_DtaVencimentoBoleto: TDateTime; safecall;
    procedure Set_DtaVencimentoBoleto(Value: TDateTime); safecall;
    function Get_NumParcela: Integer; safecall;
    procedure Set_NumParcela(Value: Integer); safecall;
    function Get_ValTotalBoleto: Double; safecall;
    procedure Set_ValTotalBoleto(Value: Double); safecall;
    function Get_QtdAnimais: Integer; safecall;
    procedure Set_QtdAnimais(Value: Integer); safecall;
    function Get_ValUnitarioVendedor: Double; safecall;
    procedure Set_ValUnitarioVendedor(Value: Double); safecall;
    function Get_ValUnitarioTecnico: Double; safecall;
    procedure Set_ValUnitarioTecnico(Value: Double); safecall;
    function Get_ValUnitarioCertificadora: Double; safecall;
    procedure Set_ValUnitarioCertificadora(Value: Double); safecall;
    function Get_ValTotalOS: Double; safecall;
    procedure Set_ValTotalOS(Value: Double); safecall;
    function Get_QtdParcelas: Integer; safecall;
    procedure Set_QtdParcelas(Value: Integer); safecall;
    function Get_ValPagoBoleto: Double; safecall;
    procedure Set_ValPagoBoleto(Value: Double); safecall;
    function Get_DtaCreditoEfetivado: TDateTime; safecall;
    procedure Set_DtaCreditoEfetivado(Value: TDateTime); safecall;
    function Get_CodUsuarioUltimaAlteracao: Integer; safecall;
    procedure Set_CodUsuarioUltimaAlteracao(Value: Integer); safecall;
    function Get_NomUsuarioUltimaAlteracao: WideString; safecall;
    procedure Set_NomUsuarioUltimaAlteracao(const Value: WideString); safecall;
    function Get_CodUsuarioCancelamento: Integer; safecall;
    procedure Set_CodUsuarioCancelamento(Value: Integer); safecall;
    function Get_NomUsuarioCancelamento: WideString; safecall;
    procedure Set_NomUsuarioCancelamento(const Value: WideString); safecall;
    function Get_DtaUltimaAlteracao: TDateTime; safecall;
    procedure Set_DtaUltimaAlteracao(Value: TDateTime); safecall;
    function Get_TxtMensagem3: WideString; safecall;
    procedure Set_TxtMensagem3(const Value: WideString); safecall;
    function Get_TxtMensagem4: WideString; safecall;
    procedure Set_TxtMensagem4(const Value: WideString); safecall;
    function Get_NomReduzidoBanco: WideString; safecall;
    procedure Set_NomReduzidoBanco(const Value: WideString); safecall;
    function Get_CodArqImportBoleto: Integer; safecall;
    procedure Set_CodArqImportBoleto(Value: Integer); safecall;
    function Get_NomArqUpload: WideString; safecall;
    procedure Set_NomArqUpload(const Value: WideString); safecall;
    function Get_NomArqImportBoleto: WideString; safecall;
    procedure Set_NomArqImportBoleto(const Value: WideString); safecall;
    function Get_DtaImportacao: TDateTime; safecall;
    procedure Set_DtaImportacao(Value: TDateTime); safecall;
    function Get_QtdRegistrosTotal: Integer; safecall;
    procedure Set_QtdRegistrosTotal(Value: Integer); safecall;
    function Get_QtdRegistrosErrados: Integer; safecall;
    procedure Set_QtdRegistrosErrados(Value: Integer); safecall;
    function Get_QtdRegistrosProcessados: Integer; safecall;
    procedure Set_QtdRegistrosProcessados(Value: Integer); safecall;
    function Get_DtaProcessamento: TDateTime; safecall;
    procedure Set_DtaProcessamento(Value: TDateTime); safecall;
    function Get_CodUsuarioUpload: Integer; safecall;
    procedure Set_CodUsuarioUpload(Value: Integer); safecall;
    function Get_NomUsuarioUpload: WideString; safecall;
    procedure Set_NomUsuarioUpload(const Value: WideString); safecall;
    function Get_CodTarefa: Integer; safecall;
    procedure Set_CodTarefa(Value: Integer); safecall;
    function Get_CodTipoArquivoBoleto: Integer; safecall;
    procedure Set_CodTipoArquivoBoleto(Value: Integer); safecall;
    function Get_DesTipoArquivoBoleto: WideString; safecall;
    procedure Set_DesTipoArquivoBoleto(const Value: WideString); safecall;
    function Get_CodSituacaoArqImport: WideString; safecall;
    procedure Set_CodSituacaoArqImport(const Value: WideString); safecall;
    function Get_DesSituacaoArqImport: WideString; safecall;
    procedure Set_DesSituacaoArqImport(const Value: WideString); safecall;
    function Get_TxtMensagem: WideString; safecall;
    procedure Set_TxtMensagem(const Value: WideString); safecall;
    function Get_DesSituacaoTarefa: WideString; safecall;
    procedure Set_DesSituacaoTarefa(const Value: WideString); safecall;
    function Get_DtaInicioPrevistoTarefa: TDateTime; safecall;
    procedure Set_DtaInicioPrevistoTarefa(Value: TDateTime); safecall;
    function Get_DtaInicioRealTarefa: TDateTime; safecall;
    procedure Set_DtaInicioRealTarefa(Value: TDateTime); safecall;
    function Get_DtaFimReal: TDateTime; safecall;
    procedure Set_DtaFimReal(Value: TDateTime); safecall;
    function Get_NomUsuarioTarefaProcessamento: WideString; safecall;
    procedure Set_NomUsuarioTarefaProcessamento(const Value: WideString); safecall;
    function Get_CodFormaPagamentoBoleto: Integer; safecall;
    procedure Set_CodFormaPagamentoBoleto(Value: Integer); safecall;
    function Get_SglFormaPagamentoBoleto: WideString; safecall;
    procedure Set_SglFormaPagamentoBoleto(const Value: WideString); safecall;
    function Get_DesFormaPagamentoBoleto: WideString; safecall;
    procedure Set_DesFormaPagamentoBoleto(const Value: WideString); safecall;
    function Get_ValVistoria: Double; safecall;
    procedure Set_ValVistoria(Value: Double); safecall;
    property CodOrdemServico: Integer read Get_CodOrdemServico write Set_CodOrdemServico;
    property CodBoletoBancario: Integer read Get_CodBoletoBancario write Set_CodBoletoBancario;
    property CodIdentificacaoBancaria: Integer read Get_CodIdentificacaoBancaria write Set_CodIdentificacaoBancaria;
    property NomBanco: WideString read Get_NomBanco write Set_NomBanco;
    property CodSituacaoBoleto: WideString read Get_CodSituacaoBoleto write Set_CodSituacaoBoleto;
    property SglSituacaoBoleto: WideString read Get_SglSituacaoBoleto write Set_SglSituacaoBoleto;
    property DesSituacaoBoleto: WideString read Get_DesSituacaoBoleto write Set_DesSituacaoBoleto;
    property NomPessoaProdutor: WideString read Get_NomPessoaProdutor write Set_NomPessoaProdutor;
    property NumCNPJCPFFormatado: WideString read Get_NumCNPJCPFFormatado write Set_NumCNPJCPFFormatado;
    property NumCNPJCPF: WideString read Get_NumCNPJCPF write Set_NumCNPJCPF;
    property NomPropriedadeRural: WideString read Get_NomPropriedadeRural write Set_NomPropriedadeRural;
    property NumImovelReceitaFederal: WideString read Get_NumImovelReceitaFederal write Set_NumImovelReceitaFederal;
    property DtaGeracaoRemessa: TDateTime read Get_DtaGeracaoRemessa write Set_DtaGeracaoRemessa;
    property EnderecoCobranca: Endereco read Get_EnderecoCobranca write Set_EnderecoCobranca;
    property DtaVencimentoBoleto: TDateTime read Get_DtaVencimentoBoleto write Set_DtaVencimentoBoleto;
    property NumParcela: Integer read Get_NumParcela write Set_NumParcela;
    property ValTotalBoleto: Double read Get_ValTotalBoleto write Set_ValTotalBoleto;
    property QtdAnimais: Integer read Get_QtdAnimais write Set_QtdAnimais;
    property ValUnitarioVendedor: Double read Get_ValUnitarioVendedor write Set_ValUnitarioVendedor;
    property ValUnitarioTecnico: Double read Get_ValUnitarioTecnico write Set_ValUnitarioTecnico;
    property ValUnitarioCertificadora: Double read Get_ValUnitarioCertificadora write Set_ValUnitarioCertificadora;
    property ValTotalOS: Double read Get_ValTotalOS write Set_ValTotalOS;
    property QtdParcelas: Integer read Get_QtdParcelas write Set_QtdParcelas;
    property ValPagoBoleto: Double read Get_ValPagoBoleto write Set_ValPagoBoleto;
    property DtaCreditoEfetivado: TDateTime read Get_DtaCreditoEfetivado write Set_DtaCreditoEfetivado;
    property CodUsuarioUltimaAlteracao: Integer read Get_CodUsuarioUltimaAlteracao write Set_CodUsuarioUltimaAlteracao;
    property NomUsuarioUltimaAlteracao: WideString read Get_NomUsuarioUltimaAlteracao write Set_NomUsuarioUltimaAlteracao;
    property CodUsuarioCancelamento: Integer read Get_CodUsuarioCancelamento write Set_CodUsuarioCancelamento;
    property NomUsuarioCancelamento: WideString read Get_NomUsuarioCancelamento write Set_NomUsuarioCancelamento;
    property DtaUltimaAlteracao: TDateTime read Get_DtaUltimaAlteracao write Set_DtaUltimaAlteracao;
    property TxtMensagem3: WideString read Get_TxtMensagem3 write Set_TxtMensagem3;
    property TxtMensagem4: WideString read Get_TxtMensagem4 write Set_TxtMensagem4;
    property NomReduzidoBanco: WideString read Get_NomReduzidoBanco write Set_NomReduzidoBanco;
    property CodArqImportBoleto: Integer read Get_CodArqImportBoleto write Set_CodArqImportBoleto;
    property NomArqUpload: WideString read Get_NomArqUpload write Set_NomArqUpload;
    property NomArqImportBoleto: WideString read Get_NomArqImportBoleto write Set_NomArqImportBoleto;
    property DtaImportacao: TDateTime read Get_DtaImportacao write Set_DtaImportacao;
    property QtdRegistrosTotal: Integer read Get_QtdRegistrosTotal write Set_QtdRegistrosTotal;
    property QtdRegistrosErrados: Integer read Get_QtdRegistrosErrados write Set_QtdRegistrosErrados;
    property QtdRegistrosProcessados: Integer read Get_QtdRegistrosProcessados write Set_QtdRegistrosProcessados;
    property DtaProcessamento: TDateTime read Get_DtaProcessamento write Set_DtaProcessamento;
    property CodUsuarioUpload: Integer read Get_CodUsuarioUpload write Set_CodUsuarioUpload;
    property NomUsuarioUpload: WideString read Get_NomUsuarioUpload write Set_NomUsuarioUpload;
    property CodTarefa: Integer read Get_CodTarefa write Set_CodTarefa;
    property CodTipoArquivoBoleto: Integer read Get_CodTipoArquivoBoleto write Set_CodTipoArquivoBoleto;
    property DesTipoArquivoBoleto: WideString read Get_DesTipoArquivoBoleto write Set_DesTipoArquivoBoleto;
    property CodSituacaoArqImport: WideString read Get_CodSituacaoArqImport write Set_CodSituacaoArqImport;
    property DesSituacaoArqImport: WideString read Get_DesSituacaoArqImport write Set_DesSituacaoArqImport;
    property TxtMensagem: WideString read Get_TxtMensagem write Set_TxtMensagem;
    property DesSituacaoTarefa: WideString read Get_DesSituacaoTarefa write Set_DesSituacaoTarefa;
    property DtaInicioPrevistoTarefa: TDateTime read Get_DtaInicioPrevistoTarefa write Set_DtaInicioPrevistoTarefa;
    property DtaInicioRealTarefa: TDateTime read Get_DtaInicioRealTarefa write Set_DtaInicioRealTarefa;
    property DtaFimReal: TDateTime read Get_DtaFimReal write Set_DtaFimReal;
    property NomUsuarioTarefaProcessamento: WideString read Get_NomUsuarioTarefaProcessamento write Set_NomUsuarioTarefaProcessamento;
    property CodFormaPagamentoBoleto: Integer read Get_CodFormaPagamentoBoleto write Set_CodFormaPagamentoBoleto;
    property SglFormaPagamentoBoleto: WideString read Get_SglFormaPagamentoBoleto write Set_SglFormaPagamentoBoleto;
    property DesFormaPagamentoBoleto: WideString read Get_DesFormaPagamentoBoleto write Set_DesFormaPagamentoBoleto;
    property ValVistoria: Double read Get_ValVistoria write Set_ValVistoria;
  end;

// *********************************************************************//
// DispIntf:  IBoletoBancarioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC500A10-6DD3-4D89-982E-5CA9A3C9B0E8}
// *********************************************************************//
  IBoletoBancarioDisp = dispinterface
    ['{CC500A10-6DD3-4D89-982E-5CA9A3C9B0E8}']
    property CodOrdemServico: Integer dispid 201;
    property CodBoletoBancario: Integer dispid 202;
    property CodIdentificacaoBancaria: Integer dispid 203;
    property NomBanco: WideString dispid 204;
    property CodSituacaoBoleto: WideString dispid 205;
    property SglSituacaoBoleto: WideString dispid 206;
    property DesSituacaoBoleto: WideString dispid 207;
    property NomPessoaProdutor: WideString dispid 208;
    property NumCNPJCPFFormatado: WideString dispid 209;
    property NumCNPJCPF: WideString dispid 210;
    property NomPropriedadeRural: WideString dispid 211;
    property NumImovelReceitaFederal: WideString dispid 212;
    property DtaGeracaoRemessa: TDateTime dispid 214;
    property EnderecoCobranca: Endereco dispid 216;
    property DtaVencimentoBoleto: TDateTime dispid 217;
    property NumParcela: Integer dispid 218;
    property ValTotalBoleto: Double dispid 219;
    property QtdAnimais: Integer dispid 220;
    property ValUnitarioVendedor: Double dispid 221;
    property ValUnitarioTecnico: Double dispid 222;
    property ValUnitarioCertificadora: Double dispid 223;
    property ValTotalOS: Double dispid 224;
    property QtdParcelas: Integer dispid 225;
    property ValPagoBoleto: Double dispid 226;
    property DtaCreditoEfetivado: TDateTime dispid 227;
    property CodUsuarioUltimaAlteracao: Integer dispid 228;
    property NomUsuarioUltimaAlteracao: WideString dispid 229;
    property CodUsuarioCancelamento: Integer dispid 230;
    property NomUsuarioCancelamento: WideString dispid 231;
    property DtaUltimaAlteracao: TDateTime dispid 232;
    property TxtMensagem3: WideString dispid 233;
    property TxtMensagem4: WideString dispid 234;
    property NomReduzidoBanco: WideString dispid 215;
    property CodArqImportBoleto: Integer dispid 213;
    property NomArqUpload: WideString dispid 235;
    property NomArqImportBoleto: WideString dispid 236;
    property DtaImportacao: TDateTime dispid 237;
    property QtdRegistrosTotal: Integer dispid 238;
    property QtdRegistrosErrados: Integer dispid 239;
    property QtdRegistrosProcessados: Integer dispid 240;
    property DtaProcessamento: TDateTime dispid 241;
    property CodUsuarioUpload: Integer dispid 242;
    property NomUsuarioUpload: WideString dispid 243;
    property CodTarefa: Integer dispid 244;
    property CodTipoArquivoBoleto: Integer dispid 245;
    property DesTipoArquivoBoleto: WideString dispid 246;
    property CodSituacaoArqImport: WideString dispid 247;
    property DesSituacaoArqImport: WideString dispid 248;
    property TxtMensagem: WideString dispid 249;
    property DesSituacaoTarefa: WideString dispid 250;
    property DtaInicioPrevistoTarefa: TDateTime dispid 251;
    property DtaInicioRealTarefa: TDateTime dispid 252;
    property DtaFimReal: TDateTime dispid 253;
    property NomUsuarioTarefaProcessamento: WideString dispid 254;
    property CodFormaPagamentoBoleto: Integer dispid 255;
    property SglFormaPagamentoBoleto: WideString dispid 256;
    property DesFormaPagamentoBoleto: WideString dispid 257;
    property ValVistoria: Double dispid 258;
  end;

// *********************************************************************//
// Interface: IBoletosBancario
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7CD17E2C-02F4-47E4-9A0F-E2E96125D539}
// *********************************************************************//
  IBoletosBancario = interface(IDispatch)
    ['{7CD17E2C-02F4-47E4-9A0F-E2E96125D539}']
    function Inserir(CodIdentificacaoBancaria: Integer; CodOrdemServico: Integer; 
                     CodEnderecoCobranca: Integer; QtdParcelas: Integer; 
                     ValUnitarioVendedor: Double; ValUnitarioTecnico: Double; ValVistoria: Double; 
                     ValUnitarioCertificadora: Double; const DtaVencimentoBoleto: WideString; 
                     const TxtMensagem3: WideString; const TxtMensagem4: WideString; 
                     CodFormaPagamentoBoleto: Integer): Integer; safecall;
    function Alterar(CodBoletoBancario: Integer; NumParcela: Integer; CodEnderecoCobranca: Integer; 
                     DtaVencimentoBoleto: TDateTime; const TxtMensagem3: WideString; 
                     const TxtMensagem4: WideString): Integer; safecall;
    function MudarSituacao(CodBoletoBancario: Integer; NumParcela: Integer; 
                           CodSituacaoBoleto: Integer; const TxtObservacao: WideString): Integer; safecall;
    function Pesquisar(CodOrdemServico: Integer): Integer; safecall;
    function Buscar(CodBoletoBancario: Integer; NumParcela: Integer): Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    function EOF: WordBool; safecall;
    function BOF: WordBool; safecall;
    procedure Posicionar(NumPosicao: Integer); safecall;
    procedure Deslocar(NumDeslocamento: Integer); safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function NumeroRegistros: Integer; safecall;
    function Get_BoletoBancario: IBoletoBancario; safecall;
    function PesquisarRemessa(CodArquivoRemessa: Integer; CodTipoArquivoRemessa: Integer; 
                              DtaCriacaoArquivoInicial: TDateTime; 
                              DtaCriacaoArquivoFinal: TDateTime; const IndPossuiLogErro: WideString): Integer; safecall;
    function PesquisarErroRemessa(CodArquivoRemessa: Integer): Integer; safecall;
    function PesquisarTipoArquivoRemessa: Integer; safecall;
    function GerarRemessa: Integer; safecall;
    function DefinirEnderecoCobrancaBoleto(CodTipoEndereco: Integer; 
                                           const NomLogradouro: WideString; 
                                           const NomBairro: WideString; const NumCEP: WideString; 
                                           CodDistrito: Integer; CodMunicipio: Integer; 
                                           const NomLocalidade: WideString; CodEstado: Integer): Integer; safecall;
    function DefinirEnderecoCobrancaOS(CodOrdemServico: Integer): Integer; safecall;
    function PesquisarSituacaoBoleto(CodSituacaoBoleto: Integer; const IndOrdenacao: WideString): Integer; safecall;
    function ArmazenarArquivoUpload(const NomArquivoUpload: WideString): Integer; safecall;
    function PesquisarImportacaoBoleto(const CodSituacaoArquivo: WideString; 
                                       const NomArquivoUpload: WideString; 
                                       const NomUsuario: WideString; 
                                       DtaImportacaoInicio: TDateTime; DtaImportacaoFim: TDateTime; 
                                       DtaProcessamentoInicio: TDateTime; 
                                       DtaProcessamentoFim: TDateTime): Integer; safecall;
    function ProcessarArquivoRetorno(CodArquivoImportacao: Integer): Integer; safecall;
    function BuscarArquivoImportacao(CodArquivoImportacao: Integer): Integer; safecall;
    function PesquisarErrosImportacao(CodArquivoImportacao: Integer): Integer; safecall;
    function GerarRelatorioFichaBoletos(CodBoleto: Integer; NumParcela: Integer; 
                                        CodTipoArquivo: Integer): WideString; safecall;
    function PesquisarHistoricoMudancaSituacao(CodBoleto: Integer; NumParcela: Integer): Integer; safecall;
    function PesquisarFormaPagamentoBoleto(CodFormaPagamentoBoleto: Integer): Integer; safecall;
    property BoletoBancario: IBoletoBancario read Get_BoletoBancario;
  end;

// *********************************************************************//
// DispIntf:  IBoletosBancarioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7CD17E2C-02F4-47E4-9A0F-E2E96125D539}
// *********************************************************************//
  IBoletosBancarioDisp = dispinterface
    ['{7CD17E2C-02F4-47E4-9A0F-E2E96125D539}']
    function Inserir(CodIdentificacaoBancaria: Integer; CodOrdemServico: Integer; 
                     CodEnderecoCobranca: Integer; QtdParcelas: Integer; 
                     ValUnitarioVendedor: Double; ValUnitarioTecnico: Double; ValVistoria: Double; 
                     ValUnitarioCertificadora: Double; const DtaVencimentoBoleto: WideString; 
                     const TxtMensagem3: WideString; const TxtMensagem4: WideString; 
                     CodFormaPagamentoBoleto: Integer): Integer; dispid 201;
    function Alterar(CodBoletoBancario: Integer; NumParcela: Integer; CodEnderecoCobranca: Integer; 
                     DtaVencimentoBoleto: TDateTime; const TxtMensagem3: WideString; 
                     const TxtMensagem4: WideString): Integer; dispid 202;
    function MudarSituacao(CodBoletoBancario: Integer; NumParcela: Integer; 
                           CodSituacaoBoleto: Integer; const TxtObservacao: WideString): Integer; dispid 203;
    function Pesquisar(CodOrdemServico: Integer): Integer; dispid 204;
    function Buscar(CodBoletoBancario: Integer; NumParcela: Integer): Integer; dispid 205;
    procedure IrAoPrimeiro; dispid 206;
    procedure IrAoProximo; dispid 207;
    function EOF: WordBool; dispid 208;
    function BOF: WordBool; dispid 209;
    procedure Posicionar(NumPosicao: Integer); dispid 211;
    procedure Deslocar(NumDeslocamento: Integer); dispid 210;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 212;
    function NumeroRegistros: Integer; dispid 213;
    property BoletoBancario: IBoletoBancario readonly dispid 214;
    function PesquisarRemessa(CodArquivoRemessa: Integer; CodTipoArquivoRemessa: Integer; 
                              DtaCriacaoArquivoInicial: TDateTime; 
                              DtaCriacaoArquivoFinal: TDateTime; const IndPossuiLogErro: WideString): Integer; dispid 215;
    function PesquisarErroRemessa(CodArquivoRemessa: Integer): Integer; dispid 216;
    function PesquisarTipoArquivoRemessa: Integer; dispid 217;
    function GerarRemessa: Integer; dispid 218;
    function DefinirEnderecoCobrancaBoleto(CodTipoEndereco: Integer; 
                                           const NomLogradouro: WideString; 
                                           const NomBairro: WideString; const NumCEP: WideString; 
                                           CodDistrito: Integer; CodMunicipio: Integer; 
                                           const NomLocalidade: WideString; CodEstado: Integer): Integer; dispid 219;
    function DefinirEnderecoCobrancaOS(CodOrdemServico: Integer): Integer; dispid 220;
    function PesquisarSituacaoBoleto(CodSituacaoBoleto: Integer; const IndOrdenacao: WideString): Integer; dispid 221;
    function ArmazenarArquivoUpload(const NomArquivoUpload: WideString): Integer; dispid 222;
    function PesquisarImportacaoBoleto(const CodSituacaoArquivo: WideString; 
                                       const NomArquivoUpload: WideString; 
                                       const NomUsuario: WideString; 
                                       DtaImportacaoInicio: TDateTime; DtaImportacaoFim: TDateTime; 
                                       DtaProcessamentoInicio: TDateTime; 
                                       DtaProcessamentoFim: TDateTime): Integer; dispid 223;
    function ProcessarArquivoRetorno(CodArquivoImportacao: Integer): Integer; dispid 224;
    function BuscarArquivoImportacao(CodArquivoImportacao: Integer): Integer; dispid 225;
    function PesquisarErrosImportacao(CodArquivoImportacao: Integer): Integer; dispid 226;
    function GerarRelatorioFichaBoletos(CodBoleto: Integer; NumParcela: Integer; 
                                        CodTipoArquivo: Integer): WideString; dispid 227;
    function PesquisarHistoricoMudancaSituacao(CodBoleto: Integer; NumParcela: Integer): Integer; dispid 228;
    function PesquisarFormaPagamentoBoleto(CodFormaPagamentoBoleto: Integer): Integer; dispid 229;
  end;

// *********************************************************************//
// Interface: IIdentificacoesBancarias
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A3D8EC70-3F61-4A72-AC02-86D9428FC709}
// *********************************************************************//
  IIdentificacoesBancarias = interface(IDispatch)
    ['{A3D8EC70-3F61-4A72-AC02-86D9428FC709}']
    function Pesquisar(CodIdentificacaoBancaria: Integer): Integer; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    function EOF: WordBool; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
  end;

// *********************************************************************//
// DispIntf:  IIdentificacoesBancariasDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A3D8EC70-3F61-4A72-AC02-86D9428FC709}
// *********************************************************************//
  IIdentificacoesBancariasDisp = dispinterface
    ['{A3D8EC70-3F61-4A72-AC02-86D9428FC709}']
    function Pesquisar(CodIdentificacaoBancaria: Integer): Integer; dispid 201;
    procedure IrAoPrimeiro; dispid 202;
    procedure IrAoProximo; dispid 203;
    function EOF: WordBool; dispid 204;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 208;
  end;

// *********************************************************************//
// Interface: IDownloads
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93A7C3EF-2EBB-48AA-B105-1C344F221457}
// *********************************************************************//
  IDownloads = interface(IDispatch)
    ['{93A7C3EF-2EBB-48AA-B105-1C344F221457}']
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function EOF: WordBool; safecall;
    function Pesquisar: Integer; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  IDownloadsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93A7C3EF-2EBB-48AA-B105-1C344F221457}
// *********************************************************************//
  IDownloadsDisp = dispinterface
    ['{93A7C3EF-2EBB-48AA-B105-1C344F221457}']
    procedure IrAoPrimeiro; dispid 201;
    procedure IrAoProximo; dispid 202;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 203;
    function EOF: WordBool; dispid 204;
    function Pesquisar: Integer; dispid 205;
    procedure FecharPesquisa; dispid 206;
  end;

// *********************************************************************//
// Interface: ITiposPropriedades
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {80C187F5-5256-45B2-A359-C5E98234D218}
// *********************************************************************//
  ITiposPropriedades = interface(IDispatch)
    ['{80C187F5-5256-45B2-A359-C5E98234D218}']
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function EOF: WordBool; safecall;
    function Pesquisar: Integer; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITiposPropriedadesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {80C187F5-5256-45B2-A359-C5E98234D218}
// *********************************************************************//
  ITiposPropriedadesDisp = dispinterface
    ['{80C187F5-5256-45B2-A359-C5E98234D218}']
    procedure IrAoPrimeiro; dispid 207;
    procedure IrAoProximo; dispid 208;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 209;
    function EOF: WordBool; dispid 210;
    function Pesquisar: Integer; dispid 211;
    procedure FecharPesquisa; dispid 212;
  end;

// *********************************************************************//
// Interface: IInventariosAnimais
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {943AAC96-4D7A-4766-B070-F047DF7F3ED7}
// *********************************************************************//
  IInventariosAnimais = interface(IDispatch)
    ['{943AAC96-4D7A-4766-B070-F047DF7F3ED7}']
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function EOF: WordBool; safecall;
    function Pesquisar(const NomProdutor: WideString; const SglProdutor: WideString; 
                       const NomPropriedadeRural: WideString; 
                       DtaLancamentoInventarioIni: TDateTime; 
                       DtaLancamentoInventarioFim: TDateTime; DtaTransmissaoSisbovIni: TDateTime; 
                       DtaTransmissaoSisbovFim: TDateTime; const IndTransmissaoSisbov: WideString; 
                       Tipo: Integer): Integer; safecall;
    function Excluir(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer; 
                     const CodSisBov: WideString; CodAnimal: Integer): Integer; safecall;
    function Transmitir: Integer; safecall;
    function BOF: WordBool; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure FecharPesquisa; safecall;
    function Inserir(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer; 
                     const CodSisBov: WideString; CodAnimal: Integer): Integer; safecall;
    function InserirIntervalo(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer; 
                              const CodSisbovInicial: WideString; const CodSisbovFinal: WideString): Integer; safecall;
    function PesquisarEfetivados(const SglProdutor: WideString; const NomProdutor: WideString; 
                                 const NomPropriedadeRural: WideString; CodIDPropriedade: Integer; 
                                 DtaEfetivacaoInicio: TDateTime; DtaEfetivacaoFinal: TDateTime; 
                                 const IndTransmissaoSisbov: WideString): Integer; safecall;
    function EfetivarInventario(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer): Integer; safecall;
    function ExcluirIntervalo(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer; 
                              const CodSisbovInicial: WideString; const CodSisbovFinal: WideString): Integer; safecall;
    function CancelarEfetivacao(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer): Integer; safecall;
    function GerarRelatorioInventario(const NomProdutor: WideString; const SglProdutor: WideString; 
                                      const NomPropriedadeRural: WideString; 
                                      DtaLancamentoInventarioIni: TDateTime; 
                                      DtaLancamentoInventarioFim: TDateTime; 
                                      DtaTransmissaoSisbovIni: TDateTime; 
                                      DtaTransmissaoSisbovFim: TDateTime; 
                                      const IndTransmissaoSisbov: WideString; Tipo: Integer): WideString; safecall;
    function ExcluirAnimalErro(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IInventariosAnimaisDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {943AAC96-4D7A-4766-B070-F047DF7F3ED7}
// *********************************************************************//
  IInventariosAnimaisDisp = dispinterface
    ['{943AAC96-4D7A-4766-B070-F047DF7F3ED7}']
    procedure IrAoPrimeiro; dispid 207;
    procedure IrAoProximo; dispid 208;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 209;
    function EOF: WordBool; dispid 210;
    function Pesquisar(const NomProdutor: WideString; const SglProdutor: WideString; 
                       const NomPropriedadeRural: WideString; 
                       DtaLancamentoInventarioIni: TDateTime; 
                       DtaLancamentoInventarioFim: TDateTime; DtaTransmissaoSisbovIni: TDateTime; 
                       DtaTransmissaoSisbovFim: TDateTime; const IndTransmissaoSisbov: WideString; 
                       Tipo: Integer): Integer; dispid 201;
    function Excluir(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer; 
                     const CodSisBov: WideString; CodAnimal: Integer): Integer; dispid 203;
    function Transmitir: Integer; dispid 204;
    function BOF: WordBool; dispid 1;
    procedure Posicionar(NumRegistro: Integer); dispid 7;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 8;
    function NumeroRegistros: Integer; dispid 9;
    procedure FecharPesquisa; dispid 11;
    function Inserir(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer; 
                     const CodSisBov: WideString; CodAnimal: Integer): Integer; dispid 202;
    function InserirIntervalo(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer; 
                              const CodSisbovInicial: WideString; const CodSisbovFinal: WideString): Integer; dispid 380;
    function PesquisarEfetivados(const SglProdutor: WideString; const NomProdutor: WideString; 
                                 const NomPropriedadeRural: WideString; CodIDPropriedade: Integer; 
                                 DtaEfetivacaoInicio: TDateTime; DtaEfetivacaoFinal: TDateTime; 
                                 const IndTransmissaoSisbov: WideString): Integer; dispid 205;
    function EfetivarInventario(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer): Integer; dispid 206;
    function ExcluirIntervalo(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer; 
                              const CodSisbovInicial: WideString; const CodSisbovFinal: WideString): Integer; dispid 211;
    function CancelarEfetivacao(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer): Integer; dispid 212;
    function GerarRelatorioInventario(const NomProdutor: WideString; const SglProdutor: WideString; 
                                      const NomPropriedadeRural: WideString; 
                                      DtaLancamentoInventarioIni: TDateTime; 
                                      DtaLancamentoInventarioFim: TDateTime; 
                                      DtaTransmissaoSisbovIni: TDateTime; 
                                      DtaTransmissaoSisbovFim: TDateTime; 
                                      const IndTransmissaoSisbov: WideString; Tipo: Integer): WideString; dispid 213;
    function ExcluirAnimalErro(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer): Integer; dispid 214;
  end;

// *********************************************************************//
// Interface: IInventariosCodigosSisbov
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E290A53E-1181-4A35-B172-5120AC6748C5}
// *********************************************************************//
  IInventariosCodigosSisbov = interface(IDispatch)
    ['{E290A53E-1181-4A35-B172-5120AC6748C5}']
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function EOF: WordBool; safecall;
    function Pesquisar(const NomProdutor: WideString; const SglProdutor: WideString; 
                       const NomPropriedadeRural: WideString; 
                       DtaLancamentoInventarioIni: TDateTime; 
                       DtaLancamentoInventarioFim: TDateTime; DtaTransmissaoSisbovIni: TDateTime; 
                       DtaTransmissaoSisbovFim: TDateTime; const IndTransmissaoSisbov: WideString): Integer; safecall;
    function Excluir(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer; 
                     NumSolicitacaoCodigo: Integer): Integer; safecall;
    function Transmitir: Integer; safecall;
    function BOF: WordBool; safecall;
    procedure Posicionar(NumRegistro: Integer); safecall;
    function Deslocar(QtdRegistros: Integer): Integer; safecall;
    function NumeroRegistros: Integer; safecall;
    procedure FecharPesquisa; safecall;
    function Inserir(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer; 
                     NumSolicitacaoCodigo: Integer; CodTipoIdentificacaoSisbov: Integer): Integer; safecall;
    function GerarRelatorio(const NomProdutor: WideString; const SglProdutor: WideString; 
                            const NomPropriedadeRural: WideString; 
                            DtaLancamentoInventarioIni: TDateTime; 
                            DtaLancamentoInventarioFim: TDateTime; 
                            DtaTransmissaoSisbovIni: TDateTime; DtaTransmissaoSisbovFim: TDateTime; 
                            const IndTransmissaoSisbov: WideString; QtdQuebraRelatorio: Integer; 
                            Tipo: Integer): WideString; safecall;
  end;

// *********************************************************************//
// DispIntf:  IInventariosCodigosSisbovDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E290A53E-1181-4A35-B172-5120AC6748C5}
// *********************************************************************//
  IInventariosCodigosSisbovDisp = dispinterface
    ['{E290A53E-1181-4A35-B172-5120AC6748C5}']
    procedure IrAoPrimeiro; dispid 407;
    procedure IrAoProximo; dispid 408;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 409;
    function EOF: WordBool; dispid 410;
    function Pesquisar(const NomProdutor: WideString; const SglProdutor: WideString; 
                       const NomPropriedadeRural: WideString; 
                       DtaLancamentoInventarioIni: TDateTime; 
                       DtaLancamentoInventarioFim: TDateTime; DtaTransmissaoSisbovIni: TDateTime; 
                       DtaTransmissaoSisbovFim: TDateTime; const IndTransmissaoSisbov: WideString): Integer; dispid 411;
    function Excluir(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer; 
                     NumSolicitacaoCodigo: Integer): Integer; dispid 412;
    function Transmitir: Integer; dispid 413;
    function BOF: WordBool; dispid 414;
    procedure Posicionar(NumRegistro: Integer); dispid 415;
    function Deslocar(QtdRegistros: Integer): Integer; dispid 416;
    function NumeroRegistros: Integer; dispid 417;
    procedure FecharPesquisa; dispid 418;
    function Inserir(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer; 
                     NumSolicitacaoCodigo: Integer; CodTipoIdentificacaoSisbov: Integer): Integer; dispid 419;
    function GerarRelatorio(const NomProdutor: WideString; const SglProdutor: WideString; 
                            const NomPropriedadeRural: WideString; 
                            DtaLancamentoInventarioIni: TDateTime; 
                            DtaLancamentoInventarioFim: TDateTime; 
                            DtaTransmissaoSisbovIni: TDateTime; DtaTransmissaoSisbovFim: TDateTime; 
                            const IndTransmissaoSisbov: WideString; QtdQuebraRelatorio: Integer; 
                            Tipo: Integer): WideString; dispid 201;
  end;

// *********************************************************************//
// Interface: ITmpAplicaEvento
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9635C176-DB3E-4CD4-83DF-5C42DD0CDAF6}
// *********************************************************************//
  ITmpAplicaEvento = interface(IDispatch)
    ['{9635C176-DB3E-4CD4-83DF-5C42DD0CDAF6}']
    procedure IrAoPrimeiro; safecall;
    procedure IrAoProximo; safecall;
    function ValorCampo(const NomCampo: WideString): OleVariant; safecall;
    function EOF: WordBool; safecall;
    function BOF: WordBool; safecall;
    function NumeroRegistros: Integer; safecall;
    function Pesquisar(CodPessoaProdutor: Integer; CodAnimal: Integer; CodEvento: Integer; 
                       CodSessao: Integer): Integer; safecall;
    procedure FecharPesquisa; safecall;
  end;

// *********************************************************************//
// DispIntf:  ITmpAplicaEventoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9635C176-DB3E-4CD4-83DF-5C42DD0CDAF6}
// *********************************************************************//
  ITmpAplicaEventoDisp = dispinterface
    ['{9635C176-DB3E-4CD4-83DF-5C42DD0CDAF6}']
    procedure IrAoPrimeiro; dispid 201;
    procedure IrAoProximo; dispid 202;
    function ValorCampo(const NomCampo: WideString): OleVariant; dispid 203;
    function EOF: WordBool; dispid 204;
    function BOF: WordBool; dispid 205;
    function NumeroRegistros: Integer; dispid 206;
    function Pesquisar(CodPessoaProdutor: Integer; CodAnimal: Integer; CodEvento: Integer; 
                       CodSessao: Integer): Integer; dispid 207;
    procedure FecharPesquisa; dispid 208;
  end;

// *********************************************************************//
// Interface: ITipoPropriedade
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B26FDC43-7142-4E59-870D-F0C663B7D90D}
// *********************************************************************//
  ITipoPropriedade = interface(IDispatch)
    ['{B26FDC43-7142-4E59-870D-F0C663B7D90D}']
    function Get_CodTipoPropriedade: Integer; safecall;
    procedure Set_CodTipoPropriedade(Value: Integer); safecall;
    function Get_DesTipoPropriedade: WideString; safecall;
    procedure Set_DesTipoPropriedade(const Value: WideString); safecall;
    function Get_QtdDiasProxVistoria: Integer; safecall;
    procedure Set_QtdDiasProxVistoria(Value: Integer); safecall;
    property CodTipoPropriedade: Integer read Get_CodTipoPropriedade write Set_CodTipoPropriedade;
    property DesTipoPropriedade: WideString read Get_DesTipoPropriedade write Set_DesTipoPropriedade;
    property QtdDiasProxVistoria: Integer read Get_QtdDiasProxVistoria write Set_QtdDiasProxVistoria;
  end;

// *********************************************************************//
// DispIntf:  ITipoPropriedadeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B26FDC43-7142-4E59-870D-F0C663B7D90D}
// *********************************************************************//
  ITipoPropriedadeDisp = dispinterface
    ['{B26FDC43-7142-4E59-870D-F0C663B7D90D}']
    property CodTipoPropriedade: Integer dispid 201;
    property DesTipoPropriedade: WideString dispid 202;
    property QtdDiasProxVistoria: Integer dispid 203;
  end;

// *********************************************************************//
// Interface: ITipoPropriedades
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51BA265A-A505-428D-B55C-1E47A3961BBF}
// *********************************************************************//
  ITipoPropriedades = interface(IDispatch)
    ['{51BA265A-A505-428D-B55C-1E47A3961BBF}']
    function Pesquisar(CodTipoPropriedade: Integer; const des_tipo_propriedade: WideString): Integer; safecall;
    function Inserir(CodTipoPropriedade: Integer; const des_tipo_propriedade: WideString; 
                     qtd_dias_prox_vistoria: Integer): Integer; safecall;
    function Alterar(CodTipoPropriedade: Integer; const des_tipo_propriedade: WideString; 
                     qtd_dias_prox_vistoria: Integer): Integer; safecall;
    function Excluir(CodTipoPropriedade: Integer): Integer; safecall;
    function EOF: WordBool; safecall;
    procedure IrAoProximo; safecall;
    procedure IrAoAnterior; safecall;
    procedure IrAoPrimeiro; safecall;
    procedure IrAoUltimo; safecall;
    function Get_TipoPropriedade: ITipoPropriedade; safecall;
    property TipoPropriedade: ITipoPropriedade read Get_TipoPropriedade;
  end;

// *********************************************************************//
// DispIntf:  ITipoPropriedadesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51BA265A-A505-428D-B55C-1E47A3961BBF}
// *********************************************************************//
  ITipoPropriedadesDisp = dispinterface
    ['{51BA265A-A505-428D-B55C-1E47A3961BBF}']
    function Pesquisar(CodTipoPropriedade: Integer; const des_tipo_propriedade: WideString): Integer; dispid 201;
    function Inserir(CodTipoPropriedade: Integer; const des_tipo_propriedade: WideString; 
                     qtd_dias_prox_vistoria: Integer): Integer; dispid 202;
    function Alterar(CodTipoPropriedade: Integer; const des_tipo_propriedade: WideString; 
                     qtd_dias_prox_vistoria: Integer): Integer; dispid 203;
    function Excluir(CodTipoPropriedade: Integer): Integer; dispid 204;
    function EOF: WordBool; dispid 205;
    procedure IrAoProximo; dispid 206;
    procedure IrAoAnterior; dispid 207;
    procedure IrAoPrimeiro; dispid 208;
    procedure IrAoUltimo; dispid 209;
    property TipoPropriedade: ITipoPropriedade readonly dispid 210;
  end;

// *********************************************************************//
// Interface: ISolicitacaoReimpressao
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8351D2FA-E97E-4BB7-81FC-1C7463B159B9}
// *********************************************************************//
  ISolicitacaoReimpressao = interface(IDispatch)
    ['{8351D2FA-E97E-4BB7-81FC-1C7463B159B9}']
    function ObterProximoNumero: Integer; safecall;
    function Inserir(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer; 
                     CodFabricanteIdentificador: Integer; const CodAnimais: WideString; 
                     const CodIdentificacoes: WideString): Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  ISolicitacaoReimpressaoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8351D2FA-E97E-4BB7-81FC-1C7463B159B9}
// *********************************************************************//
  ISolicitacaoReimpressaoDisp = dispinterface
    ['{8351D2FA-E97E-4BB7-81FC-1C7463B159B9}']
    function ObterProximoNumero: Integer; dispid 208;
    function Inserir(CodPessoaProdutor: Integer; CodPropriedadeRural: Integer; 
                     CodFabricanteIdentificador: Integer; const CodAnimais: WideString; 
                     const CodIdentificacoes: WideString): Integer; dispid 209;
  end;

// *********************************************************************//
// Interface: ICriptografia
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0FCA780A-760E-4D7C-8964-25CF6CD7EF81}
// *********************************************************************//
  ICriptografia = interface(IDispatch)
    ['{0FCA780A-760E-4D7C-8964-25CF6CD7EF81}']
  end;

// *********************************************************************//
// DispIntf:  ICriptografiaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0FCA780A-760E-4D7C-8964-25CF6CD7EF81}
// *********************************************************************//
  ICriptografiaDisp = dispinterface
    ['{0FCA780A-760E-4D7C-8964-25CF6CD7EF81}']
  end;

// *********************************************************************//
// The Class CoSessao provides a Create and CreateRemote method to          
// create instances of the default interface ISessao exposed by              
// the CoClass Sessao. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSessao = class
    class function Create: ISessao;
    class function CreateRemote(const MachineName: string): ISessao;
  end;

// *********************************************************************//
// The Class CoVisita provides a Create and CreateRemote method to          
// create instances of the default interface IVisita exposed by              
// the CoClass Visita. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoVisita = class
    class function Create: IVisita;
    class function CreateRemote(const MachineName: string): IVisita;
  end;

// *********************************************************************//
// The Class CoMensagem provides a Create and CreateRemote method to          
// create instances of the default interface IMensagem exposed by              
// the CoClass Mensagem. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoMensagem = class
    class function Create: IMensagem;
    class function CreateRemote(const MachineName: string): IMensagem;
  end;

// *********************************************************************//
// The Class CoMensagens provides a Create and CreateRemote method to          
// create instances of the default interface IMensagens exposed by              
// the CoClass Mensagens. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoMensagens = class
    class function Create: IMensagens;
    class function CreateRemote(const MachineName: string): IMensagens;
  end;

// *********************************************************************//
// The Class CoBanner provides a Create and CreateRemote method to          
// create instances of the default interface IBanner exposed by              
// the CoClass Banner. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoBanner = class
    class function Create: IBanner;
    class function CreateRemote(const MachineName: string): IBanner;
  end;

// *********************************************************************//
// The Class CoBanners provides a Create and CreateRemote method to          
// create instances of the default interface IBanners exposed by              
// the CoClass Banners. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoBanners = class
    class function Create: IBanners;
    class function CreateRemote(const MachineName: string): IBanners;
  end;

// *********************************************************************//
// The Class CoBannersVisita provides a Create and CreateRemote method to          
// create instances of the default interface IBannersVisita exposed by              
// the CoClass BannersVisita. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoBannersVisita = class
    class function Create: IBannersVisita;
    class function CreateRemote(const MachineName: string): IBannersVisita;
  end;

// *********************************************************************//
// The Class CoTiposBanner provides a Create and CreateRemote method to          
// create instances of the default interface ITiposBanner exposed by              
// the CoClass TiposBanner. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposBanner = class
    class function Create: ITiposBanner;
    class function CreateRemote(const MachineName: string): ITiposBanner;
  end;

// *********************************************************************//
// The Class CoTiposPagina provides a Create and CreateRemote method to          
// create instances of the default interface ITiposPagina exposed by              
// the CoClass TiposPagina. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposPagina = class
    class function Create: ITiposPagina;
    class function CreateRemote(const MachineName: string): ITiposPagina;
  end;

// *********************************************************************//
// The Class CoLayoutsPagina provides a Create and CreateRemote method to          
// create instances of the default interface ILayoutsPagina exposed by              
// the CoClass LayoutsPagina. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoLayoutsPagina = class
    class function Create: ILayoutsPagina;
    class function CreateRemote(const MachineName: string): ILayoutsPagina;
  end;

// *********************************************************************//
// The Class CoGrupoPaginas provides a Create and CreateRemote method to          
// create instances of the default interface IGrupoPaginas exposed by              
// the CoClass GrupoPaginas. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoGrupoPaginas = class
    class function Create: IGrupoPaginas;
    class function CreateRemote(const MachineName: string): IGrupoPaginas;
  end;

// *********************************************************************//
// The Class CoGruposPaginas provides a Create and CreateRemote method to          
// create instances of the default interface IGruposPaginas exposed by              
// the CoClass GruposPaginas. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoGruposPaginas = class
    class function Create: IGruposPaginas;
    class function CreateRemote(const MachineName: string): IGruposPaginas;
  end;

// *********************************************************************//
// The Class CoBannersDefault provides a Create and CreateRemote method to          
// create instances of the default interface IBannersDefault exposed by              
// the CoClass BannersDefault. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoBannersDefault = class
    class function Create: IBannersDefault;
    class function CreateRemote(const MachineName: string): IBannersDefault;
  end;

// *********************************************************************//
// The Class CoPaginas provides a Create and CreateRemote method to          
// create instances of the default interface IPaginas exposed by              
// the CoClass Paginas. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPaginas = class
    class function Create: IPaginas;
    class function CreateRemote(const MachineName: string): IPaginas;
  end;

// *********************************************************************//
// The Class CoTiposTarget provides a Create and CreateRemote method to          
// create instances of the default interface ITiposTarget exposed by              
// the CoClass TiposTarget. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposTarget = class
    class function Create: ITiposTarget;
    class function CreateRemote(const MachineName: string): ITiposTarget;
  end;

// *********************************************************************//
// The Class CoAnunciante provides a Create and CreateRemote method to          
// create instances of the default interface IAnunciante exposed by              
// the CoClass Anunciante. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAnunciante = class
    class function Create: IAnunciante;
    class function CreateRemote(const MachineName: string): IAnunciante;
  end;

// *********************************************************************//
// The Class CoAnunciantes provides a Create and CreateRemote method to          
// create instances of the default interface IAnunciantes exposed by              
// the CoClass Anunciantes. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAnunciantes = class
    class function Create: IAnunciantes;
    class function CreateRemote(const MachineName: string): IAnunciantes;
  end;

// *********************************************************************//
// The Class CoPrograma provides a Create and CreateRemote method to          
// create instances of the default interface IPrograma exposed by              
// the CoClass Programa. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPrograma = class
    class function Create: IPrograma;
    class function CreateRemote(const MachineName: string): IPrograma;
  end;

// *********************************************************************//
// The Class CoProgramas provides a Create and CreateRemote method to          
// create instances of the default interface IProgramas exposed by              
// the CoClass Programas. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoProgramas = class
    class function Create: IProgramas;
    class function CreateRemote(const MachineName: string): IProgramas;
  end;

// *********************************************************************//
// The Class CoResultadosAnuncio provides a Create and CreateRemote method to          
// create instances of the default interface IResultadosAnuncio exposed by              
// the CoClass ResultadosAnuncio. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoResultadosAnuncio = class
    class function Create: IResultadosAnuncio;
    class function CreateRemote(const MachineName: string): IResultadosAnuncio;
  end;

// *********************************************************************//
// The Class CoUsuario provides a Create and CreateRemote method to          
// create instances of the default interface IUsuario exposed by              
// the CoClass Usuario. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoUsuario = class
    class function Create: IUsuario;
    class function CreateRemote(const MachineName: string): IUsuario;
  end;

// *********************************************************************//
// The Class CoItemMenu provides a Create and CreateRemote method to          
// create instances of the default interface IItemMenu exposed by              
// the CoClass ItemMenu. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoItemMenu = class
    class function Create: IItemMenu;
    class function CreateRemote(const MachineName: string): IItemMenu;
  end;

// *********************************************************************//
// The Class CoBloqueio provides a Create and CreateRemote method to          
// create instances of the default interface IBloqueio exposed by              
// the CoClass Bloqueio. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoBloqueio = class
    class function Create: IBloqueio;
    class function CreateRemote(const MachineName: string): IBloqueio;
  end;

// *********************************************************************//
// The Class CoProdutor provides a Create and CreateRemote method to          
// create instances of the default interface IProdutor exposed by              
// the CoClass Produtor. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoProdutor = class
    class function Create: IProdutor;
    class function CreateRemote(const MachineName: string): IProdutor;
  end;

// *********************************************************************//
// The Class CoAcesso provides a Create and CreateRemote method to          
// create instances of the default interface IAcesso exposed by              
// the CoClass Acesso. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAcesso = class
    class function Create: IAcesso;
    class function CreateRemote(const MachineName: string): IAcesso;
  end;

// *********************************************************************//
// The Class CoPessoas provides a Create and CreateRemote method to          
// create instances of the default interface IPessoas exposed by              
// the CoClass Pessoas. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPessoas = class
    class function Create: IPessoas;
    class function CreateRemote(const MachineName: string): IPessoas;
  end;

// *********************************************************************//
// The Class CoPapeis provides a Create and CreateRemote method to          
// create instances of the default interface IPapeis exposed by              
// the CoClass Papeis. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPapeis = class
    class function Create: IPapeis;
    class function CreateRemote(const MachineName: string): IPapeis;
  end;

// *********************************************************************//
// The Class CoUsuarios provides a Create and CreateRemote method to          
// create instances of the default interface IUsuarios exposed by              
// the CoClass Usuarios. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoUsuarios = class
    class function Create: IUsuarios;
    class function CreateRemote(const MachineName: string): IUsuarios;
  end;

// *********************************************************************//
// The Class CoComunicado provides a Create and CreateRemote method to          
// create instances of the default interface IComunicado exposed by              
// the CoClass Comunicado. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoComunicado = class
    class function Create: IComunicado;
    class function CreateRemote(const MachineName: string): IComunicado;
  end;

// *********************************************************************//
// The Class CoComunicados provides a Create and CreateRemote method to          
// create instances of the default interface IComunicados exposed by              
// the CoClass Comunicados. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoComunicados = class
    class function Create: IComunicados;
    class function CreateRemote(const MachineName: string): IComunicados;
  end;

// *********************************************************************//
// The Class CoBloqueios provides a Create and CreateRemote method to          
// create instances of the default interface IBloqueios exposed by              
// the CoClass Bloqueios. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoBloqueios = class
    class function Create: IBloqueios;
    class function CreateRemote(const MachineName: string): IBloqueios;
  end;

// *********************************************************************//
// The Class CoPerfil provides a Create and CreateRemote method to          
// create instances of the default interface IPerfil exposed by              
// the CoClass Perfil. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPerfil = class
    class function Create: IPerfil;
    class function CreateRemote(const MachineName: string): IPerfil;
  end;

// *********************************************************************//
// The Class CoAcessoTecnicoProdutor provides a Create and CreateRemote method to          
// create instances of the default interface IAcessoTecnicoProdutor exposed by              
// the CoClass AcessoTecnicoProdutor. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAcessoTecnicoProdutor = class
    class function Create: IAcessoTecnicoProdutor;
    class function CreateRemote(const MachineName: string): IAcessoTecnicoProdutor;
  end;

// *********************************************************************//
// The Class CoAcessoAssociacaoProdutor provides a Create and CreateRemote method to          
// create instances of the default interface IAcessoAssociacaoProdutor exposed by              
// the CoClass AcessoAssociacaoProdutor. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAcessoAssociacaoProdutor = class
    class function Create: IAcessoAssociacaoProdutor;
    class function CreateRemote(const MachineName: string): IAcessoAssociacaoProdutor;
  end;

// *********************************************************************//
// The Class CoPerfis provides a Create and CreateRemote method to          
// create instances of the default interface IPerfis exposed by              
// the CoClass Perfis. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPerfis = class
    class function Create: IPerfis;
    class function CreateRemote(const MachineName: string): IPerfis;
  end;

// *********************************************************************//
// The Class CoMotivoBloqueio provides a Create and CreateRemote method to          
// create instances of the default interface IMotivoBloqueio exposed by              
// the CoClass MotivoBloqueio. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoMotivoBloqueio = class
    class function Create: IMotivoBloqueio;
    class function CreateRemote(const MachineName: string): IMotivoBloqueio;
  end;

// *********************************************************************//
// The Class CoMotivosBloqueio provides a Create and CreateRemote method to          
// create instances of the default interface IMotivosBloqueio exposed by              
// the CoClass MotivosBloqueio. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoMotivosBloqueio = class
    class function Create: IMotivosBloqueio;
    class function CreateRemote(const MachineName: string): IMotivosBloqueio;
  end;

// *********************************************************************//
// The Class CoPaises provides a Create and CreateRemote method to          
// create instances of the default interface IPaises exposed by              
// the CoClass Paises. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPaises = class
    class function Create: IPaises;
    class function CreateRemote(const MachineName: string): IPaises;
  end;

// *********************************************************************//
// The Class CoCodigosSisbov provides a Create and CreateRemote method to          
// create instances of the default interface ICodigosSisbov exposed by              
// the CoClass CodigosSisbov. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCodigosSisbov = class
    class function Create: ICodigosSisbov;
    class function CreateRemote(const MachineName: string): ICodigosSisbov;
  end;

// *********************************************************************//
// The Class CoEstados provides a Create and CreateRemote method to          
// create instances of the default interface IEstados exposed by              
// the CoClass Estados. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoEstados = class
    class function Create: IEstados;
    class function CreateRemote(const MachineName: string): IEstados;
  end;

// *********************************************************************//
// The Class CoMicroRegioes provides a Create and CreateRemote method to          
// create instances of the default interface IMicroRegioes exposed by              
// the CoClass MicroRegioes. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoMicroRegioes = class
    class function Create: IMicroRegioes;
    class function CreateRemote(const MachineName: string): IMicroRegioes;
  end;

// *********************************************************************//
// The Class CoRacas provides a Create and CreateRemote method to          
// create instances of the default interface IRacas exposed by              
// the CoClass Racas. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRacas = class
    class function Create: IRacas;
    class function CreateRemote(const MachineName: string): IRacas;
  end;

// *********************************************************************//
// The Class CoPelagens provides a Create and CreateRemote method to          
// create instances of the default interface IPelagens exposed by              
// the CoClass Pelagens. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPelagens = class
    class function Create: IPelagens;
    class function CreateRemote(const MachineName: string): IPelagens;
  end;

// *********************************************************************//
// The Class CoLocal provides a Create and CreateRemote method to          
// create instances of the default interface ILocal exposed by              
// the CoClass Local. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoLocal = class
    class function Create: ILocal;
    class function CreateRemote(const MachineName: string): ILocal;
  end;

// *********************************************************************//
// The Class CoLocais provides a Create and CreateRemote method to          
// create instances of the default interface ILocais exposed by              
// the CoClass Locais. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoLocais = class
    class function Create: ILocais;
    class function CreateRemote(const MachineName: string): ILocais;
  end;

// *********************************************************************//
// The Class CoTiposOrigem provides a Create and CreateRemote method to          
// create instances of the default interface ITiposOrigem exposed by              
// the CoClass TiposOrigem. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposOrigem = class
    class function Create: ITiposOrigem;
    class function CreateRemote(const MachineName: string): ITiposOrigem;
  end;

// *********************************************************************//
// The Class CoFazendas provides a Create and CreateRemote method to          
// create instances of the default interface IFazendas exposed by              
// the CoClass Fazendas. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoFazendas = class
    class function Create: IFazendas;
    class function CreateRemote(const MachineName: string): IFazendas;
  end;

// *********************************************************************//
// The Class CoFazenda provides a Create and CreateRemote method to          
// create instances of the default interface IFazenda exposed by              
// the CoClass Fazenda. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoFazenda = class
    class function Create: IFazenda;
    class function CreateRemote(const MachineName: string): IFazenda;
  end;

// *********************************************************************//
// The Class CoRegimesAlimentares provides a Create and CreateRemote method to          
// create instances of the default interface IRegimesAlimentares exposed by              
// the CoClass RegimesAlimentares. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRegimesAlimentares = class
    class function Create: IRegimesAlimentares;
    class function CreateRemote(const MachineName: string): IRegimesAlimentares;
  end;

// *********************************************************************//
// The Class CoAssociacoesRaca provides a Create and CreateRemote method to          
// create instances of the default interface IAssociacoesRaca exposed by              
// the CoClass AssociacoesRaca. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAssociacoesRaca = class
    class function Create: IAssociacoesRaca;
    class function CreateRemote(const MachineName: string): IAssociacoesRaca;
  end;

// *********************************************************************//
// The Class CoGrausSangue provides a Create and CreateRemote method to          
// create instances of the default interface IGrausSangue exposed by              
// the CoClass GrausSangue. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoGrausSangue = class
    class function Create: IGrausSangue;
    class function CreateRemote(const MachineName: string): IGrausSangue;
  end;

// *********************************************************************//
// The Class CoTiposIdentificador provides a Create and CreateRemote method to          
// create instances of the default interface ITiposIdentificador exposed by              
// the CoClass TiposIdentificador. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposIdentificador = class
    class function Create: ITiposIdentificador;
    class function CreateRemote(const MachineName: string): ITiposIdentificador;
  end;

// *********************************************************************//
// The Class CoCategoriasAnimal provides a Create and CreateRemote method to          
// create instances of the default interface ICategoriasAnimal exposed by              
// the CoClass CategoriasAnimal. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCategoriasAnimal = class
    class function Create: ICategoriasAnimal;
    class function CreateRemote(const MachineName: string): ICategoriasAnimal;
  end;

// *********************************************************************//
// The Class CoTiposFonteAgua provides a Create and CreateRemote method to          
// create instances of the default interface ITiposFonteAgua exposed by              
// the CoClass TiposFonteAgua. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposFonteAgua = class
    class function Create: ITiposFonteAgua;
    class function CreateRemote(const MachineName: string): ITiposFonteAgua;
  end;

// *********************************************************************//
// The Class CoAnimal provides a Create and CreateRemote method to          
// create instances of the default interface IAnimal exposed by              
// the CoClass Animal. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAnimal = class
    class function Create: IAnimal;
    class function CreateRemote(const MachineName: string): IAnimal;
  end;

// *********************************************************************//
// The Class CoAnimais provides a Create and CreateRemote method to          
// create instances of the default interface IAnimais exposed by              
// the CoClass Animais. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAnimais = class
    class function Create: IAnimais;
    class function CreateRemote(const MachineName: string): IAnimais;
  end;

// *********************************************************************//
// The Class CoLote provides a Create and CreateRemote method to          
// create instances of the default interface ILote exposed by              
// the CoClass Lote. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoLote = class
    class function Create: ILote;
    class function CreateRemote(const MachineName: string): ILote;
  end;

// *********************************************************************//
// The Class CoLotes provides a Create and CreateRemote method to          
// create instances of the default interface ILotes exposed by              
// the CoClass Lotes. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoLotes = class
    class function Create: ILotes;
    class function CreateRemote(const MachineName: string): ILotes;
  end;

// *********************************************************************//
// The Class CoRaca provides a Create and CreateRemote method to          
// create instances of the default interface IRaca exposed by              
// the CoClass Raca. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRaca = class
    class function Create: IRaca;
    class function CreateRemote(const MachineName: string): IRaca;
  end;

// *********************************************************************//
// The Class CoLocalidade provides a Create and CreateRemote method to          
// create instances of the default interface ILocalidade exposed by              
// the CoClass Localidade. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoLocalidade = class
    class function Create: ILocalidade;
    class function CreateRemote(const MachineName: string): ILocalidade;
  end;

// *********************************************************************//
// The Class CoLocalidades provides a Create and CreateRemote method to          
// create instances of the default interface ILocalidades exposed by              
// the CoClass Localidades. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoLocalidades = class
    class function Create: ILocalidades;
    class function CreateRemote(const MachineName: string): ILocalidades;
  end;

// *********************************************************************//
// The Class CoPelagem provides a Create and CreateRemote method to          
// create instances of the default interface IPelagem exposed by              
// the CoClass Pelagem. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPelagem = class
    class function Create: IPelagem;
    class function CreateRemote(const MachineName: string): IPelagem;
  end;

// *********************************************************************//
// The Class CoPessoaSecundaria provides a Create and CreateRemote method to          
// create instances of the default interface IPessoaSecundaria exposed by              
// the CoClass PessoaSecundaria. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPessoaSecundaria = class
    class function Create: IPessoaSecundaria;
    class function CreateRemote(const MachineName: string): IPessoaSecundaria;
  end;

// *********************************************************************//
// The Class CoPapeisSecundarios provides a Create and CreateRemote method to          
// create instances of the default interface IPapeisSecundarios exposed by              
// the CoClass PapeisSecundarios. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPapeisSecundarios = class
    class function Create: IPapeisSecundarios;
    class function CreateRemote(const MachineName: string): IPapeisSecundarios;
  end;

// *********************************************************************//
// The Class CoPessoasSecundarias provides a Create and CreateRemote method to          
// create instances of the default interface IPessoasSecundarias exposed by              
// the CoClass PessoasSecundarias. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPessoasSecundarias = class
    class function Create: IPessoasSecundarias;
    class function CreateRemote(const MachineName: string): IPessoasSecundarias;
  end;

// *********************************************************************//
// The Class CoFazendaTrabalho provides a Create and CreateRemote method to          
// create instances of the default interface IFazendaTrabalho exposed by              
// the CoClass FazendaTrabalho. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoFazendaTrabalho = class
    class function Create: IFazendaTrabalho;
    class function CreateRemote(const MachineName: string): IFazendaTrabalho;
  end;

// *********************************************************************//
// The Class CoOpcoesEnvioComunicado provides a Create and CreateRemote method to          
// create instances of the default interface IOpcoesEnvioComunicado exposed by              
// the CoClass OpcoesEnvioComunicado. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoOpcoesEnvioComunicado = class
    class function Create: IOpcoesEnvioComunicado;
    class function CreateRemote(const MachineName: string): IOpcoesEnvioComunicado;
  end;

// *********************************************************************//
// The Class CoPessoa provides a Create and CreateRemote method to          
// create instances of the default interface IPessoa exposed by              
// the CoClass Pessoa. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPessoa = class
    class function Create: IPessoa;
    class function CreateRemote(const MachineName: string): IPessoa;
  end;

// *********************************************************************//
// The Class CoPais provides a Create and CreateRemote method to          
// create instances of the default interface IPais exposed by              
// the CoClass Pais. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPais = class
    class function Create: IPais;
    class function CreateRemote(const MachineName: string): IPais;
  end;

// *********************************************************************//
// The Class CoEstado provides a Create and CreateRemote method to          
// create instances of the default interface IEstado exposed by              
// the CoClass Estado. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoEstado = class
    class function Create: IEstado;
    class function CreateRemote(const MachineName: string): IEstado;
  end;

// *********************************************************************//
// The Class CoTiposContato provides a Create and CreateRemote method to          
// create instances of the default interface ITiposContato exposed by              
// the CoClass TiposContato. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposContato = class
    class function Create: ITiposContato;
    class function CreateRemote(const MachineName: string): ITiposContato;
  end;

// *********************************************************************//
// The Class CoTiposEndereco provides a Create and CreateRemote method to          
// create instances of the default interface ITiposEndereco exposed by              
// the CoClass TiposEndereco. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposEndereco = class
    class function Create: ITiposEndereco;
    class function CreateRemote(const MachineName: string): ITiposEndereco;
  end;

// *********************************************************************//
// The Class CoMicroRegiao provides a Create and CreateRemote method to          
// create instances of the default interface IMicroRegiao exposed by              
// the CoClass MicroRegiao. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoMicroRegiao = class
    class function Create: IMicroRegiao;
    class function CreateRemote(const MachineName: string): IMicroRegiao;
  end;

// *********************************************************************//
// The Class CoPropriedadeRural provides a Create and CreateRemote method to          
// create instances of the default interface IPropriedadeRural exposed by              
// the CoClass PropriedadeRural. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPropriedadeRural = class
    class function Create: IPropriedadeRural;
    class function CreateRemote(const MachineName: string): IPropriedadeRural;
  end;

// *********************************************************************//
// The Class CoPropriedadesRurais provides a Create and CreateRemote method to          
// create instances of the default interface IPropriedadesRurais exposed by              
// the CoClass PropriedadesRurais. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPropriedadesRurais = class
    class function Create: IPropriedadesRurais;
    class function CreateRemote(const MachineName: string): IPropriedadesRurais;
  end;

// *********************************************************************//
// The Class CoAptidoes provides a Create and CreateRemote method to          
// create instances of the default interface IAptidoes exposed by              
// the CoClass Aptidoes. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAptidoes = class
    class function Create: IAptidoes;
    class function CreateRemote(const MachineName: string): IAptidoes;
  end;

// *********************************************************************//
// The Class CoEspecies provides a Create and CreateRemote method to          
// create instances of the default interface IEspecies exposed by              
// the CoClass Especies. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoEspecies = class
    class function Create: IEspecies;
    class function CreateRemote(const MachineName: string): IEspecies;
  end;

// *********************************************************************//
// The Class CoTiposMorte provides a Create and CreateRemote method to          
// create instances of the default interface ITiposMorte exposed by              
// the CoClass TiposMorte. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposMorte = class
    class function Create: ITiposMorte;
    class function CreateRemote(const MachineName: string): ITiposMorte;
  end;

// *********************************************************************//
// The Class CoCausasMorte provides a Create and CreateRemote method to          
// create instances of the default interface ICausasMorte exposed by              
// the CoClass CausasMorte. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCausasMorte = class
    class function Create: ICausasMorte;
    class function CreateRemote(const MachineName: string): ICausasMorte;
  end;

// *********************************************************************//
// The Class CoGrausInstrucao provides a Create and CreateRemote method to          
// create instances of the default interface IGrausInstrucao exposed by              
// the CoClass GrausInstrucao. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoGrausInstrucao = class
    class function Create: IGrausInstrucao;
    class function CreateRemote(const MachineName: string): IGrausInstrucao;
  end;

// *********************************************************************//
// The Class CoPosicoesIdentificador provides a Create and CreateRemote method to          
// create instances of the default interface IPosicoesIdentificador exposed by              
// the CoClass PosicoesIdentificador. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPosicoesIdentificador = class
    class function Create: IPosicoesIdentificador;
    class function CreateRemote(const MachineName: string): IPosicoesIdentificador;
  end;

// *********************************************************************//
// The Class CoAnimalResumido provides a Create and CreateRemote method to          
// create instances of the default interface IAnimalResumido exposed by              
// the CoClass AnimalResumido. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAnimalResumido = class
    class function Create: IAnimalResumido;
    class function CreateRemote(const MachineName: string): IAnimalResumido;
  end;

// *********************************************************************//
// The Class CoFiliacao provides a Create and CreateRemote method to          
// create instances of the default interface IFiliacao exposed by              
// the CoClass Filiacao. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoFiliacao = class
    class function Create: IFiliacao;
    class function CreateRemote(const MachineName: string): IFiliacao;
  end;

// *********************************************************************//
// The Class CoRegistro provides a Create and CreateRemote method to          
// create instances of the default interface IRegistro exposed by              
// the CoClass Registro. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRegistro = class
    class function Create: IRegistro;
    class function CreateRemote(const MachineName: string): IRegistro;
  end;

// *********************************************************************//
// The Class CoAssociacaoRaca provides a Create and CreateRemote method to          
// create instances of the default interface IAssociacaoRaca exposed by              
// the CoClass AssociacaoRaca. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAssociacaoRaca = class
    class function Create: IAssociacaoRaca;
    class function CreateRemote(const MachineName: string): IAssociacaoRaca;
  end;

// *********************************************************************//
// The Class CoGrauSangue provides a Create and CreateRemote method to          
// create instances of the default interface IGrauSangue exposed by              
// the CoClass GrauSangue. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoGrauSangue = class
    class function Create: IGrauSangue;
    class function CreateRemote(const MachineName: string): IGrauSangue;
  end;

// *********************************************************************//
// The Class CoTiposLugar provides a Create and CreateRemote method to          
// create instances of the default interface ITiposLugar exposed by              
// the CoClass TiposLugar. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposLugar = class
    class function Create: ITiposLugar;
    class function CreateRemote(const MachineName: string): ITiposLugar;
  end;

// *********************************************************************//
// The Class CoSituacoesSisBov provides a Create and CreateRemote method to          
// create instances of the default interface ISituacoesSisBov exposed by              
// the CoClass SituacoesSisBov. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSituacoesSisBov = class
    class function Create: ISituacoesSisBov;
    class function CreateRemote(const MachineName: string): ISituacoesSisBov;
  end;

// *********************************************************************//
// The Class CoPessoasContatos provides a Create and CreateRemote method to          
// create instances of the default interface IPessoasContatos exposed by              
// the CoClass PessoasContatos. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPessoasContatos = class
    class function Create: IPessoasContatos;
    class function CreateRemote(const MachineName: string): IPessoasContatos;
  end;

// *********************************************************************//
// The Class CoIdentificadorDoProdutor provides a Create and CreateRemote method to          
// create instances of the default interface IIdentificadorDoProdutor exposed by              
// the CoClass IdentificadorDoProdutor. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoIdentificadorDoProdutor = class
    class function Create: IIdentificadorDoProdutor;
    class function CreateRemote(const MachineName: string): IIdentificadorDoProdutor;
  end;

// *********************************************************************//
// The Class CoParametro provides a Create and CreateRemote method to          
// create instances of the default interface IParametro exposed by              
// the CoClass Parametro. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoParametro = class
    class function Create: IParametro;
    class function CreateRemote(const MachineName: string): IParametro;
  end;

// *********************************************************************//
// The Class CoGrandezasResumo provides a Create and CreateRemote method to          
// create instances of the default interface IGrandezasResumo exposed by              
// the CoClass GrandezasResumo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoGrandezasResumo = class
    class function Create: IGrandezasResumo;
    class function CreateRemote(const MachineName: string): IGrandezasResumo;
  end;

// *********************************************************************//
// The Class CoGruposEvento provides a Create and CreateRemote method to          
// create instances of the default interface IGruposEvento exposed by              
// the CoClass GruposEvento. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoGruposEvento = class
    class function Create: IGruposEvento;
    class function CreateRemote(const MachineName: string): IGruposEvento;
  end;

// *********************************************************************//
// The Class CoTiposEvento provides a Create and CreateRemote method to          
// create instances of the default interface ITiposEvento exposed by              
// the CoClass TiposEvento. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposEvento = class
    class function Create: ITiposEvento;
    class function CreateRemote(const MachineName: string): ITiposEvento;
  end;

// *********************************************************************//
// The Class CoTipoInsumo provides a Create and CreateRemote method to          
// create instances of the default interface ITipoInsumo exposed by              
// the CoClass TipoInsumo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTipoInsumo = class
    class function Create: ITipoInsumo;
    class function CreateRemote(const MachineName: string): ITipoInsumo;
  end;

// *********************************************************************//
// The Class CoTiposInsumo provides a Create and CreateRemote method to          
// create instances of the default interface ITiposInsumo exposed by              
// the CoClass TiposInsumo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposInsumo = class
    class function Create: ITiposInsumo;
    class function CreateRemote(const MachineName: string): ITiposInsumo;
  end;

// *********************************************************************//
// The Class CoSubTipoInsumo provides a Create and CreateRemote method to          
// create instances of the default interface ISubTipoInsumo exposed by              
// the CoClass SubTipoInsumo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSubTipoInsumo = class
    class function Create: ISubTipoInsumo;
    class function CreateRemote(const MachineName: string): ISubTipoInsumo;
  end;

// *********************************************************************//
// The Class CoSubTiposInsumo provides a Create and CreateRemote method to          
// create instances of the default interface ISubTiposInsumo exposed by              
// the CoClass SubTiposInsumo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSubTiposInsumo = class
    class function Create: ISubTiposInsumo;
    class function CreateRemote(const MachineName: string): ISubTiposInsumo;
  end;

// *********************************************************************//
// The Class CoUnidadeMedida provides a Create and CreateRemote method to          
// create instances of the default interface IUnidadeMedida exposed by              
// the CoClass UnidadeMedida. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoUnidadeMedida = class
    class function Create: IUnidadeMedida;
    class function CreateRemote(const MachineName: string): IUnidadeMedida;
  end;

// *********************************************************************//
// The Class CoUnidadesMedida provides a Create and CreateRemote method to          
// create instances of the default interface IUnidadesMedida exposed by              
// the CoClass UnidadesMedida. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoUnidadesMedida = class
    class function Create: IUnidadesMedida;
    class function CreateRemote(const MachineName: string): IUnidadesMedida;
  end;

// *********************************************************************//
// The Class CoFabricanteInsumo provides a Create and CreateRemote method to          
// create instances of the default interface IFabricanteInsumo exposed by              
// the CoClass FabricanteInsumo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoFabricanteInsumo = class
    class function Create: IFabricanteInsumo;
    class function CreateRemote(const MachineName: string): IFabricanteInsumo;
  end;

// *********************************************************************//
// The Class CoFabricantesInsumo provides a Create and CreateRemote method to          
// create instances of the default interface IFabricantesInsumo exposed by              
// the CoClass FabricantesInsumo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoFabricantesInsumo = class
    class function Create: IFabricantesInsumo;
    class function CreateRemote(const MachineName: string): IFabricantesInsumo;
  end;

// *********************************************************************//
// The Class CoEvento provides a Create and CreateRemote method to          
// create instances of the default interface IEvento exposed by              
// the CoClass Evento. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoEvento = class
    class function Create: IEvento;
    class function CreateRemote(const MachineName: string): IEvento;
  end;

// *********************************************************************//
// The Class CoEventos provides a Create and CreateRemote method to          
// create instances of the default interface IEventos exposed by              
// the CoClass Eventos. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoEventos = class
    class function Create: IEventos;
    class function CreateRemote(const MachineName: string): IEventos;
  end;

// *********************************************************************//
// The Class CoMudancasCategoriaAnimal provides a Create and CreateRemote method to          
// create instances of the default interface IMudancasCategoriaAnimal exposed by              
// the CoClass MudancasCategoriaAnimal. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoMudancasCategoriaAnimal = class
    class function Create: IMudancasCategoriaAnimal;
    class function CreateRemote(const MachineName: string): IMudancasCategoriaAnimal;
  end;

// *********************************************************************//
// The Class CoInsumo provides a Create and CreateRemote method to          
// create instances of the default interface IInsumo exposed by              
// the CoClass Insumo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoInsumo = class
    class function Create: IInsumo;
    class function CreateRemote(const MachineName: string): IInsumo;
  end;

// *********************************************************************//
// The Class CoInsumos provides a Create and CreateRemote method to          
// create instances of the default interface IInsumos exposed by              
// the CoClass Insumos. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoInsumos = class
    class function Create: IInsumos;
    class function CreateRemote(const MachineName: string): IInsumos;
  end;

// *********************************************************************//
// The Class CoEntradaInsumo provides a Create and CreateRemote method to          
// create instances of the default interface IEntradaInsumo exposed by              
// the CoClass EntradaInsumo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoEntradaInsumo = class
    class function Create: IEntradaInsumo;
    class function CreateRemote(const MachineName: string): IEntradaInsumo;
  end;

// *********************************************************************//
// The Class CoEntradasInsumo provides a Create and CreateRemote method to          
// create instances of the default interface IEntradasInsumo exposed by              
// the CoClass EntradasInsumo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoEntradasInsumo = class
    class function Create: IEntradasInsumo;
    class function CreateRemote(const MachineName: string): IEntradasInsumo;
  end;

// *********************************************************************//
// The Class CoRelatorios provides a Create and CreateRemote method to          
// create instances of the default interface IRelatorios exposed by              
// the CoClass Relatorios. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRelatorios = class
    class function Create: IRelatorios;
    class function CreateRemote(const MachineName: string): IRelatorios;
  end;

// *********************************************************************//
// The Class CoRelatorio provides a Create and CreateRemote method to          
// create instances of the default interface IRelatorio exposed by              
// the CoClass Relatorio. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRelatorio = class
    class function Create: IRelatorio;
    class function CreateRemote(const MachineName: string): IRelatorio;
  end;

// *********************************************************************//
// The Class CoOrientacoes provides a Create and CreateRemote method to          
// create instances of the default interface IOrientacoes exposed by              
// the CoClass Orientacoes. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoOrientacoes = class
    class function Create: IOrientacoes;
    class function CreateRemote(const MachineName: string): IOrientacoes;
  end;

// *********************************************************************//
// The Class CoTamanhosFonte provides a Create and CreateRemote method to          
// create instances of the default interface ITamanhosFonte exposed by              
// the CoClass TamanhosFonte. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTamanhosFonte = class
    class function Create: ITamanhosFonte;
    class function CreateRemote(const MachineName: string): ITamanhosFonte;
  end;

// *********************************************************************//
// The Class CoLargurasLinhaRelatorio provides a Create and CreateRemote method to          
// create instances of the default interface ILargurasLinhaRelatorio exposed by              
// the CoClass LargurasLinhaRelatorio. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoLargurasLinhaRelatorio = class
    class function Create: ILargurasLinhaRelatorio;
    class function CreateRemote(const MachineName: string): ILargurasLinhaRelatorio;
  end;

// *********************************************************************//
// The Class CoInterfaceSisbov provides a Create and CreateRemote method to          
// create instances of the default interface IInterfaceSisbov exposed by              
// the CoClass InterfaceSisbov. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoInterfaceSisbov = class
    class function Create: IInterfaceSisbov;
    class function CreateRemote(const MachineName: string): IInterfaceSisbov;
  end;

// *********************************************************************//
// The Class CoTiposArquivoSisBov provides a Create and CreateRemote method to          
// create instances of the default interface ITiposArquivoSisBov exposed by              
// the CoClass TiposArquivoSisBov. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposArquivoSisBov = class
    class function Create: ITiposArquivoSisBov;
    class function CreateRemote(const MachineName: string): ITiposArquivoSisBov;
  end;

// *********************************************************************//
// The Class CoTiposSubEventoSanitario provides a Create and CreateRemote method to          
// create instances of the default interface ITiposSubEventoSanitario exposed by              
// the CoClass TiposSubEventoSanitario. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposSubEventoSanitario = class
    class function Create: ITiposSubEventoSanitario;
    class function CreateRemote(const MachineName: string): ITiposSubEventoSanitario;
  end;

// *********************************************************************//
// The Class CoArquivoSisbov provides a Create and CreateRemote method to          
// create instances of the default interface IArquivoSisbov exposed by              
// the CoClass ArquivoSisbov. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoArquivoSisbov = class
    class function Create: IArquivoSisbov;
    class function CreateRemote(const MachineName: string): IArquivoSisbov;
  end;

// *********************************************************************//
// The Class CoAnimaisVisita provides a Create and CreateRemote method to          
// create instances of the default interface IAnimaisVisita exposed by              
// the CoClass AnimaisVisita. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAnimaisVisita = class
    class function Create: IAnimaisVisita;
    class function CreateRemote(const MachineName: string): IAnimaisVisita;
  end;

// *********************************************************************//
// The Class CoAnimalVisita provides a Create and CreateRemote method to          
// create instances of the default interface IAnimalVisita exposed by              
// the CoClass AnimalVisita. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAnimalVisita = class
    class function Create: IAnimalVisita;
    class function CreateRemote(const MachineName: string): IAnimalVisita;
  end;

// *********************************************************************//
// The Class CoReprodutorMultiplo provides a Create and CreateRemote method to          
// create instances of the default interface IReprodutorMultiplo exposed by              
// the CoClass ReprodutorMultiplo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoReprodutorMultiplo = class
    class function Create: IReprodutorMultiplo;
    class function CreateRemote(const MachineName: string): IReprodutorMultiplo;
  end;

// *********************************************************************//
// The Class CoReprodutoresMultiplos provides a Create and CreateRemote method to          
// create instances of the default interface IReprodutoresMultiplos exposed by              
// the CoClass ReprodutoresMultiplos. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoReprodutoresMultiplos = class
    class function Create: IReprodutoresMultiplos;
    class function CreateRemote(const MachineName: string): IReprodutoresMultiplos;
  end;

// *********************************************************************//
// The Class CoParametrosPesoAjustado provides a Create and CreateRemote method to          
// create instances of the default interface IParametrosPesoAjustado exposed by              
// the CoClass ParametrosPesoAjustado. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoParametrosPesoAjustado = class
    class function Create: IParametrosPesoAjustado;
    class function CreateRemote(const MachineName: string): IParametrosPesoAjustado;
  end;

// *********************************************************************//
// The Class CoModelosCertificado provides a Create and CreateRemote method to          
// create instances of the default interface IModelosCertificado exposed by              
// the CoClass ModelosCertificado. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoModelosCertificado = class
    class function Create: IModelosCertificado;
    class function CreateRemote(const MachineName: string): IModelosCertificado;
  end;

// *********************************************************************//
// The Class CoImportacoes provides a Create and CreateRemote method to          
// create instances of the default interface IImportacoes exposed by              
// the CoClass Importacoes. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoImportacoes = class
    class function Create: IImportacoes;
    class function CreateRemote(const MachineName: string): IImportacoes;
  end;

// *********************************************************************//
// The Class CoImportacao provides a Create and CreateRemote method to          
// create instances of the default interface IImportacao exposed by              
// the CoClass Importacao. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoImportacao = class
    class function Create: IImportacao;
    class function CreateRemote(const MachineName: string): IImportacao;
  end;

// *********************************************************************//
// The Class CoTipoAgrupamentoRacas provides a Create and CreateRemote method to          
// create instances of the default interface ITipoAgrupamentoRacas exposed by              
// the CoClass TipoAgrupamentoRacas. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTipoAgrupamentoRacas = class
    class function Create: ITipoAgrupamentoRacas;
    class function CreateRemote(const MachineName: string): ITipoAgrupamentoRacas;
  end;

// *********************************************************************//
// The Class CoTiposAgrupamentoRacas provides a Create and CreateRemote method to          
// create instances of the default interface ITiposAgrupamentoRacas exposed by              
// the CoClass TiposAgrupamentoRacas. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposAgrupamentoRacas = class
    class function Create: ITiposAgrupamentoRacas;
    class function CreateRemote(const MachineName: string): ITiposAgrupamentoRacas;
  end;

// *********************************************************************//
// The Class CoAgrupamentoRacas provides a Create and CreateRemote method to          
// create instances of the default interface IAgrupamentoRacas exposed by              
// the CoClass AgrupamentoRacas. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAgrupamentoRacas = class
    class function Create: IAgrupamentoRacas;
    class function CreateRemote(const MachineName: string): IAgrupamentoRacas;
  end;

// *********************************************************************//
// The Class CoAgrupamentosRacas provides a Create and CreateRemote method to          
// create instances of the default interface IAgrupamentosRacas exposed by              
// the CoClass AgrupamentosRacas. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAgrupamentosRacas = class
    class function Create: IAgrupamentosRacas;
    class function CreateRemote(const MachineName: string): IAgrupamentosRacas;
  end;

// *********************************************************************//
// The Class CoTarefa provides a Create and CreateRemote method to          
// create instances of the default interface ITarefa exposed by              
// the CoClass Tarefa. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTarefa = class
    class function Create: ITarefa;
    class function CreateRemote(const MachineName: string): ITarefa;
  end;

// *********************************************************************//
// The Class CoTarefas provides a Create and CreateRemote method to          
// create instances of the default interface ITarefas exposed by              
// the CoClass Tarefas. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTarefas = class
    class function Create: ITarefas;
    class function CreateRemote(const MachineName: string): ITarefas;
  end;

// *********************************************************************//
// The Class CoSituacoesTarefa provides a Create and CreateRemote method to          
// create instances of the default interface ISituacoesTarefa exposed by              
// the CoClass SituacoesTarefa. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSituacoesTarefa = class
    class function Create: ISituacoesTarefa;
    class function CreateRemote(const MachineName: string): ISituacoesTarefa;
  end;

// *********************************************************************//
// The Class CoMovimentoEstoqueSemen provides a Create and CreateRemote method to          
// create instances of the default interface IMovimentoEstoqueSemen exposed by              
// the CoClass MovimentoEstoqueSemen. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoMovimentoEstoqueSemen = class
    class function Create: IMovimentoEstoqueSemen;
    class function CreateRemote(const MachineName: string): IMovimentoEstoqueSemen;
  end;

// *********************************************************************//
// The Class CoEstoqueSemen provides a Create and CreateRemote method to          
// create instances of the default interface IEstoqueSemen exposed by              
// the CoClass EstoqueSemen. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoEstoqueSemen = class
    class function Create: IEstoqueSemen;
    class function CreateRemote(const MachineName: string): IEstoqueSemen;
  end;

// *********************************************************************//
// The Class CoTiposMovimentoEstoqueSemen provides a Create and CreateRemote method to          
// create instances of the default interface ITiposMovimentoEstoqueSemen exposed by              
// the CoClass TiposMovimentoEstoqueSemen. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposMovimentoEstoqueSemen = class
    class function Create: ITiposMovimentoEstoqueSemen;
    class function CreateRemote(const MachineName: string): ITiposMovimentoEstoqueSemen;
  end;

// *********************************************************************//
// The Class CoTiposAvaliacao provides a Create and CreateRemote method to          
// create instances of the default interface ITiposAvaliacao exposed by              
// the CoClass TiposAvaliacao. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposAvaliacao = class
    class function Create: ITiposAvaliacao;
    class function CreateRemote(const MachineName: string): ITiposAvaliacao;
  end;

// *********************************************************************//
// The Class CoTipoAvaliacao provides a Create and CreateRemote method to          
// create instances of the default interface ITipoAvaliacao exposed by              
// the CoClass TipoAvaliacao. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTipoAvaliacao = class
    class function Create: ITipoAvaliacao;
    class function CreateRemote(const MachineName: string): ITipoAvaliacao;
  end;

// *********************************************************************//
// The Class CoCaracteristicasAvaliacao provides a Create and CreateRemote method to          
// create instances of the default interface ICaracteristicasAvaliacao exposed by              
// the CoClass CaracteristicasAvaliacao. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCaracteristicasAvaliacao = class
    class function Create: ICaracteristicasAvaliacao;
    class function CreateRemote(const MachineName: string): ICaracteristicasAvaliacao;
  end;

// *********************************************************************//
// The Class CoCaracteristicaAvaliacao provides a Create and CreateRemote method to          
// create instances of the default interface ICaracteristicaAvaliacao exposed by              
// the CoClass CaracteristicaAvaliacao. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCaracteristicaAvaliacao = class
    class function Create: ICaracteristicaAvaliacao;
    class function CreateRemote(const MachineName: string): ICaracteristicaAvaliacao;
  end;

// *********************************************************************//
// The Class CoSituacoesCria provides a Create and CreateRemote method to          
// create instances of the default interface ISituacoesCria exposed by              
// the CoClass SituacoesCria. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSituacoesCria = class
    class function Create: ISituacoesCria;
    class function CreateRemote(const MachineName: string): ISituacoesCria;
  end;

// *********************************************************************//
// The Class CoGrausDificuldade provides a Create and CreateRemote method to          
// create instances of the default interface IGrausDificuldade exposed by              
// the CoClass GrausDificuldade. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoGrausDificuldade = class
    class function Create: IGrausDificuldade;
    class function CreateRemote(const MachineName: string): IGrausDificuldade;
  end;

// *********************************************************************//
// The Class CoMotivosDescarte provides a Create and CreateRemote method to          
// create instances of the default interface IMotivosDescarte exposed by              
// the CoClass MotivosDescarte. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoMotivosDescarte = class
    class function Create: IMotivosDescarte;
    class function CreateRemote(const MachineName: string): IMotivosDescarte;
  end;

// *********************************************************************//
// The Class CoImportacoesDadoGeral provides a Create and CreateRemote method to          
// create instances of the default interface IImportacoesDadoGeral exposed by              
// the CoClass ImportacoesDadoGeral. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoImportacoesDadoGeral = class
    class function Create: IImportacoesDadoGeral;
    class function CreateRemote(const MachineName: string): IImportacoesDadoGeral;
  end;

// *********************************************************************//
// The Class CoImportacaoDadoGeral provides a Create and CreateRemote method to          
// create instances of the default interface IImportacaoDadoGeral exposed by              
// the CoClass ImportacaoDadoGeral. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoImportacaoDadoGeral = class
    class function Create: IImportacaoDadoGeral;
    class function CreateRemote(const MachineName: string): IImportacaoDadoGeral;
  end;

// *********************************************************************//
// The Class CoImportacaoSISBOV provides a Create and CreateRemote method to          
// create instances of the default interface IImportacaoSISBOV exposed by              
// the CoClass ImportacaoSISBOV. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoImportacaoSISBOV = class
    class function Create: IImportacaoSISBOV;
    class function CreateRemote(const MachineName: string): IImportacaoSISBOV;
  end;

// *********************************************************************//
// The Class CoImportacoesSISBOV provides a Create and CreateRemote method to          
// create instances of the default interface IImportacoesSISBOV exposed by              
// the CoClass ImportacoesSISBOV. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoImportacoesSISBOV = class
    class function Create: IImportacoesSISBOV;
    class function CreateRemote(const MachineName: string): IImportacoesSISBOV;
  end;

// *********************************************************************//
// The Class CoTipoOrigemArqImport provides a Create and CreateRemote method to          
// create instances of the default interface ITipoOrigemArqImport exposed by              
// the CoClass TipoOrigemArqImport. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTipoOrigemArqImport = class
    class function Create: ITipoOrigemArqImport;
    class function CreateRemote(const MachineName: string): ITipoOrigemArqImport;
  end;

// *********************************************************************//
// The Class CoTiposOrigemArqImport provides a Create and CreateRemote method to          
// create instances of the default interface ITiposOrigemArqImport exposed by              
// the CoClass TiposOrigemArqImport. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposOrigemArqImport = class
    class function Create: ITiposOrigemArqImport;
    class function CreateRemote(const MachineName: string): ITiposOrigemArqImport;
  end;

// *********************************************************************//
// The Class CoRegimesPosseUso provides a Create and CreateRemote method to          
// create instances of the default interface IRegimesPosseUso exposed by              
// the CoClass RegimesPosseUso. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRegimesPosseUso = class
    class function Create: IRegimesPosseUso;
    class function CreateRemote(const MachineName: string): IRegimesPosseUso;
  end;

// *********************************************************************//
// The Class CoArquivoFTPEnvio provides a Create and CreateRemote method to          
// create instances of the default interface IArquivoFTPEnvio exposed by              
// the CoClass ArquivoFTPEnvio. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoArquivoFTPEnvio = class
    class function Create: IArquivoFTPEnvio;
    class function CreateRemote(const MachineName: string): IArquivoFTPEnvio;
  end;

// *********************************************************************//
// The Class CoArquivosFTPEnvio provides a Create and CreateRemote method to          
// create instances of the default interface IArquivosFTPEnvio exposed by              
// the CoClass ArquivosFTPEnvio. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoArquivosFTPEnvio = class
    class function Create: IArquivosFTPEnvio;
    class function CreateRemote(const MachineName: string): IArquivosFTPEnvio;
  end;

// *********************************************************************//
// The Class CoFormasPagamentoIdentificador provides a Create and CreateRemote method to          
// create instances of the default interface IFormasPagamentoIdentificador exposed by              
// the CoClass FormasPagamentoIdentificador. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoFormasPagamentoIdentificador = class
    class function Create: IFormasPagamentoIdentificador;
    class function CreateRemote(const MachineName: string): IFormasPagamentoIdentificador;
  end;

// *********************************************************************//
// The Class CoOcorrenciaSistema provides a Create and CreateRemote method to          
// create instances of the default interface IOcorrenciaSistema exposed by              
// the CoClass OcorrenciaSistema. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoOcorrenciaSistema = class
    class function Create: IOcorrenciaSistema;
    class function CreateRemote(const MachineName: string): IOcorrenciaSistema;
  end;

// *********************************************************************//
// The Class CoOcorrenciasSistema provides a Create and CreateRemote method to          
// create instances of the default interface IOcorrenciasSistema exposed by              
// the CoClass OcorrenciasSistema. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoOcorrenciasSistema = class
    class function Create: IOcorrenciasSistema;
    class function CreateRemote(const MachineName: string): IOcorrenciasSistema;
  end;

// *********************************************************************//
// The Class CoFormasPagamentoOS provides a Create and CreateRemote method to          
// create instances of the default interface IFormasPagamentoOS exposed by              
// the CoClass FormasPagamentoOS. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoFormasPagamentoOS = class
    class function Create: IFormasPagamentoOS;
    class function CreateRemote(const MachineName: string): IFormasPagamentoOS;
  end;

// *********************************************************************//
// The Class CoFabricanteIdentificador provides a Create and CreateRemote method to          
// create instances of the default interface IFabricanteIdentificador exposed by              
// the CoClass FabricanteIdentificador. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoFabricanteIdentificador = class
    class function Create: IFabricanteIdentificador;
    class function CreateRemote(const MachineName: string): IFabricanteIdentificador;
  end;

// *********************************************************************//
// The Class CoFabricantesIdentificador provides a Create and CreateRemote method to          
// create instances of the default interface IFabricantesIdentificador exposed by              
// the CoClass FabricantesIdentificador. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoFabricantesIdentificador = class
    class function Create: IFabricantesIdentificador;
    class function CreateRemote(const MachineName: string): IFabricantesIdentificador;
  end;

// *********************************************************************//
// The Class CoIdentificacoesDuplas provides a Create and CreateRemote method to          
// create instances of the default interface IIdentificacoesDuplas exposed by              
// the CoClass IdentificacoesDuplas. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoIdentificacoesDuplas = class
    class function Create: IIdentificacoesDuplas;
    class function CreateRemote(const MachineName: string): IIdentificacoesDuplas;
  end;

// *********************************************************************//
// The Class CoProdutosAcessorios provides a Create and CreateRemote method to          
// create instances of the default interface IProdutosAcessorios exposed by              
// the CoClass ProdutosAcessorios. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoProdutosAcessorios = class
    class function Create: IProdutosAcessorios;
    class function CreateRemote(const MachineName: string): IProdutosAcessorios;
  end;

// *********************************************************************//
// The Class CoSituacoesOS provides a Create and CreateRemote method to          
// create instances of the default interface ISituacoesOS exposed by              
// the CoClass SituacoesOS. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSituacoesOS = class
    class function Create: ISituacoesOS;
    class function CreateRemote(const MachineName: string): ISituacoesOS;
  end;

// *********************************************************************//
// The Class CoEndereco provides a Create and CreateRemote method to          
// create instances of the default interface IEndereco exposed by              
// the CoClass Endereco. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoEndereco = class
    class function Create: IEndereco;
    class function CreateRemote(const MachineName: string): IEndereco;
  end;

// *********************************************************************//
// The Class CoOrdemServico provides a Create and CreateRemote method to          
// create instances of the default interface IOrdemServico exposed by              
// the CoClass OrdemServico. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoOrdemServico = class
    class function Create: IOrdemServico;
    class function CreateRemote(const MachineName: string): IOrdemServico;
  end;

// *********************************************************************//
// The Class CoOrdensServico provides a Create and CreateRemote method to          
// create instances of the default interface IOrdensServico exposed by              
// the CoClass OrdensServico. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoOrdensServico = class
    class function Create: IOrdensServico;
    class function CreateRemote(const MachineName: string): IOrdensServico;
  end;

// *********************************************************************//
// The Class CoOrdemServicoResumida provides a Create and CreateRemote method to          
// create instances of the default interface IOrdemServicoResumida exposed by              
// the CoClass OrdemServicoResumida. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoOrdemServicoResumida = class
    class function Create: IOrdemServicoResumida;
    class function CreateRemote(const MachineName: string): IOrdemServicoResumida;
  end;

// *********************************************************************//
// The Class CoArquivoRemessaPedido provides a Create and CreateRemote method to          
// create instances of the default interface IArquivoRemessaPedido exposed by              
// the CoClass ArquivoRemessaPedido. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoArquivoRemessaPedido = class
    class function Create: IArquivoRemessaPedido;
    class function CreateRemote(const MachineName: string): IArquivoRemessaPedido;
  end;

// *********************************************************************//
// The Class CoArquivosRemessaPedido provides a Create and CreateRemote method to          
// create instances of the default interface IArquivosRemessaPedido exposed by              
// the CoClass ArquivosRemessaPedido. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoArquivosRemessaPedido = class
    class function Create: IArquivosRemessaPedido;
    class function CreateRemote(const MachineName: string): IArquivosRemessaPedido;
  end;

// *********************************************************************//
// The Class CoArquivoFTPRetorno provides a Create and CreateRemote method to          
// create instances of the default interface IArquivoFTPRetorno exposed by              
// the CoClass ArquivoFTPRetorno. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoArquivoFTPRetorno = class
    class function Create: IArquivoFTPRetorno;
    class function CreateRemote(const MachineName: string): IArquivoFTPRetorno;
  end;

// *********************************************************************//
// The Class CoArquivosFTPRetorno provides a Create and CreateRemote method to          
// create instances of the default interface IArquivosFTPRetorno exposed by              
// the CoClass ArquivosFTPRetorno. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoArquivosFTPRetorno = class
    class function Create: IArquivosFTPRetorno;
    class function CreateRemote(const MachineName: string): IArquivosFTPRetorno;
  end;

// *********************************************************************//
// The Class CoEnderecos provides a Create and CreateRemote method to          
// create instances of the default interface IEnderecos exposed by              
// the CoClass Enderecos. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoEnderecos = class
    class function Create: IEnderecos;
    class function CreateRemote(const MachineName: string): IEnderecos;
  end;

// *********************************************************************//
// The Class CoRotinasFTPRetorno provides a Create and CreateRemote method to          
// create instances of the default interface IRotinasFTPRetorno exposed by              
// the CoClass RotinasFTPRetorno. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRotinasFTPRetorno = class
    class function Create: IRotinasFTPRetorno;
    class function CreateRemote(const MachineName: string): IRotinasFTPRetorno;
  end;

// *********************************************************************//
// The Class CoEmailEnvio provides a Create and CreateRemote method to          
// create instances of the default interface IEmailEnvio exposed by              
// the CoClass EmailEnvio. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoEmailEnvio = class
    class function Create: IEmailEnvio;
    class function CreateRemote(const MachineName: string): IEmailEnvio;
  end;

// *********************************************************************//
// The Class CoEmailsEnvio provides a Create and CreateRemote method to          
// create instances of the default interface IEmailsEnvio exposed by              
// the CoClass EmailsEnvio. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoEmailsEnvio = class
    class function Create: IEmailsEnvio;
    class function CreateRemote(const MachineName: string): IEmailsEnvio;
  end;

// *********************************************************************//
// The Class CoSituacoesCodigoSISBOV provides a Create and CreateRemote method to          
// create instances of the default interface ISituacoesCodigoSISBOV exposed by              
// the CoClass SituacoesCodigoSISBOV. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSituacoesCodigoSISBOV = class
    class function Create: ISituacoesCodigoSISBOV;
    class function CreateRemote(const MachineName: string): ISituacoesCodigoSISBOV;
  end;

// *********************************************************************//
// The Class CoTiposEmail provides a Create and CreateRemote method to          
// create instances of the default interface ITiposEmail exposed by              
// the CoClass TiposEmail. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposEmail = class
    class function Create: ITiposEmail;
    class function CreateRemote(const MachineName: string): ITiposEmail;
  end;

// *********************************************************************//
// The Class CoSituacoesEmail provides a Create and CreateRemote method to          
// create instances of the default interface ISituacoesEmail exposed by              
// the CoClass SituacoesEmail. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSituacoesEmail = class
    class function Create: ISituacoesEmail;
    class function CreateRemote(const MachineName: string): ISituacoesEmail;
  end;

// *********************************************************************//
// The Class CoSituacoesFTP provides a Create and CreateRemote method to          
// create instances of the default interface ISituacoesFTP exposed by              
// the CoClass SituacoesFTP. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSituacoesFTP = class
    class function Create: ISituacoesFTP;
    class function CreateRemote(const MachineName: string): ISituacoesFTP;
  end;

// *********************************************************************//
// The Class CoTiposMensagem provides a Create and CreateRemote method to          
// create instances of the default interface ITiposMensagem exposed by              
// the CoClass TiposMensagem. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposMensagem = class
    class function Create: ITiposMensagem;
    class function CreateRemote(const MachineName: string): ITiposMensagem;
  end;

// *********************************************************************//
// The Class CoRotinasFTPEnvio provides a Create and CreateRemote method to          
// create instances of the default interface IRotinasFTPEnvio exposed by              
// the CoClass RotinasFTPEnvio. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRotinasFTPEnvio = class
    class function Create: IRotinasFTPEnvio;
    class function CreateRemote(const MachineName: string): IRotinasFTPEnvio;
  end;

// *********************************************************************//
// The Class CoAplicativos provides a Create and CreateRemote method to          
// create instances of the default interface IAplicativos exposed by              
// the CoClass Aplicativos. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAplicativos = class
    class function Create: IAplicativos;
    class function CreateRemote(const MachineName: string): IAplicativos;
  end;

// *********************************************************************//
// The Class CoImportacoesFabricante provides a Create and CreateRemote method to          
// create instances of the default interface IImportacoesFabricante exposed by              
// the CoClass ImportacoesFabricante. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoImportacoesFabricante = class
    class function Create: IImportacoesFabricante;
    class function CreateRemote(const MachineName: string): IImportacoesFabricante;
  end;

// *********************************************************************//
// The Class CoImportacaoFabricante provides a Create and CreateRemote method to          
// create instances of the default interface IImportacaoFabricante exposed by              
// the CoClass ImportacaoFabricante. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoImportacaoFabricante = class
    class function Create: IImportacaoFabricante;
    class function CreateRemote(const MachineName: string): IImportacaoFabricante;
  end;

// *********************************************************************//
// The Class CoSituacoesArqImport provides a Create and CreateRemote method to          
// create instances of the default interface ISituacoesArqImport exposed by              
// the CoClass SituacoesArqImport. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSituacoesArqImport = class
    class function Create: ISituacoesArqImport;
    class function CreateRemote(const MachineName: string): ISituacoesArqImport;
  end;

// *********************************************************************//
// The Class CoMenus provides a Create and CreateRemote method to          
// create instances of the default interface IMenus exposed by              
// the CoClass Menus. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoMenus = class
    class function Create: IMenus;
    class function CreateRemote(const MachineName: string): IMenus;
  end;

// *********************************************************************//
// The Class CoBoletoBancario provides a Create and CreateRemote method to          
// create instances of the default interface IBoletoBancario exposed by              
// the CoClass BoletoBancario. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoBoletoBancario = class
    class function Create: IBoletoBancario;
    class function CreateRemote(const MachineName: string): IBoletoBancario;
  end;

// *********************************************************************//
// The Class CoBoletosBancario provides a Create and CreateRemote method to          
// create instances of the default interface IBoletosBancario exposed by              
// the CoClass BoletosBancario. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoBoletosBancario = class
    class function Create: IBoletosBancario;
    class function CreateRemote(const MachineName: string): IBoletosBancario;
  end;

// *********************************************************************//
// The Class CoIdentificacoesBancarias provides a Create and CreateRemote method to          
// create instances of the default interface IIdentificacoesBancarias exposed by              
// the CoClass IdentificacoesBancarias. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoIdentificacoesBancarias = class
    class function Create: IIdentificacoesBancarias;
    class function CreateRemote(const MachineName: string): IIdentificacoesBancarias;
  end;

// *********************************************************************//
// The Class CoDownloads provides a Create and CreateRemote method to          
// create instances of the default interface IDownloads exposed by              
// the CoClass Downloads. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDownloads = class
    class function Create: IDownloads;
    class function CreateRemote(const MachineName: string): IDownloads;
  end;

// *********************************************************************//
// The Class CoTiposPropriedades provides a Create and CreateRemote method to          
// create instances of the default interface ITiposPropriedades exposed by              
// the CoClass TiposPropriedades. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTiposPropriedades = class
    class function Create: ITiposPropriedades;
    class function CreateRemote(const MachineName: string): ITiposPropriedades;
  end;

// *********************************************************************//
// The Class CoInventariosAnimais provides a Create and CreateRemote method to          
// create instances of the default interface IInventariosAnimais exposed by              
// the CoClass InventariosAnimais. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoInventariosAnimais = class
    class function Create: IInventariosAnimais;
    class function CreateRemote(const MachineName: string): IInventariosAnimais;
  end;

// *********************************************************************//
// The Class CoInventariosCodigosSisbov provides a Create and CreateRemote method to          
// create instances of the default interface IInventariosCodigosSisbov exposed by              
// the CoClass InventariosCodigosSisbov. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoInventariosCodigosSisbov = class
    class function Create: IInventariosCodigosSisbov;
    class function CreateRemote(const MachineName: string): IInventariosCodigosSisbov;
  end;

// *********************************************************************//
// The Class CoTmpAplicaEvento provides a Create and CreateRemote method to          
// create instances of the default interface ITmpAplicaEvento exposed by              
// the CoClass TmpAplicaEvento. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTmpAplicaEvento = class
    class function Create: ITmpAplicaEvento;
    class function CreateRemote(const MachineName: string): ITmpAplicaEvento;
  end;

// *********************************************************************//
// The Class CoTipoPropriedade provides a Create and CreateRemote method to          
// create instances of the default interface ITipoPropriedade exposed by              
// the CoClass TipoPropriedade. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTipoPropriedade = class
    class function Create: ITipoPropriedade;
    class function CreateRemote(const MachineName: string): ITipoPropriedade;
  end;

// *********************************************************************//
// The Class CoTipoPropriedades provides a Create and CreateRemote method to          
// create instances of the default interface ITipoPropriedades exposed by              
// the CoClass TipoPropriedades. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTipoPropriedades = class
    class function Create: ITipoPropriedades;
    class function CreateRemote(const MachineName: string): ITipoPropriedades;
  end;

// *********************************************************************//
// The Class CoSolicitacaoReimpressao provides a Create and CreateRemote method to          
// create instances of the default interface ISolicitacaoReimpressao exposed by              
// the CoClass SolicitacaoReimpressao. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSolicitacaoReimpressao = class
    class function Create: ISolicitacaoReimpressao;
    class function CreateRemote(const MachineName: string): ISolicitacaoReimpressao;
  end;

// *********************************************************************//
// The Class CoCriptografia provides a Create and CreateRemote method to          
// create instances of the default interface ICriptografia exposed by              
// the CoClass Criptografia. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCriptografia = class
    class function Create: ICriptografia;
    class function CreateRemote(const MachineName: string): ICriptografia;
  end;

implementation

uses ComObj;

class function CoSessao.Create: ISessao;
begin
  Result := CreateComObject(CLASS_Sessao) as ISessao;
end;

class function CoSessao.CreateRemote(const MachineName: string): ISessao;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Sessao) as ISessao;
end;

class function CoVisita.Create: IVisita;
begin
  Result := CreateComObject(CLASS_Visita) as IVisita;
end;

class function CoVisita.CreateRemote(const MachineName: string): IVisita;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Visita) as IVisita;
end;

class function CoMensagem.Create: IMensagem;
begin
  Result := CreateComObject(CLASS_Mensagem) as IMensagem;
end;

class function CoMensagem.CreateRemote(const MachineName: string): IMensagem;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Mensagem) as IMensagem;
end;

class function CoMensagens.Create: IMensagens;
begin
  Result := CreateComObject(CLASS_Mensagens) as IMensagens;
end;

class function CoMensagens.CreateRemote(const MachineName: string): IMensagens;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Mensagens) as IMensagens;
end;

class function CoBanner.Create: IBanner;
begin
  Result := CreateComObject(CLASS_Banner) as IBanner;
end;

class function CoBanner.CreateRemote(const MachineName: string): IBanner;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Banner) as IBanner;
end;

class function CoBanners.Create: IBanners;
begin
  Result := CreateComObject(CLASS_Banners) as IBanners;
end;

class function CoBanners.CreateRemote(const MachineName: string): IBanners;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Banners) as IBanners;
end;

class function CoBannersVisita.Create: IBannersVisita;
begin
  Result := CreateComObject(CLASS_BannersVisita) as IBannersVisita;
end;

class function CoBannersVisita.CreateRemote(const MachineName: string): IBannersVisita;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_BannersVisita) as IBannersVisita;
end;

class function CoTiposBanner.Create: ITiposBanner;
begin
  Result := CreateComObject(CLASS_TiposBanner) as ITiposBanner;
end;

class function CoTiposBanner.CreateRemote(const MachineName: string): ITiposBanner;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposBanner) as ITiposBanner;
end;

class function CoTiposPagina.Create: ITiposPagina;
begin
  Result := CreateComObject(CLASS_TiposPagina) as ITiposPagina;
end;

class function CoTiposPagina.CreateRemote(const MachineName: string): ITiposPagina;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposPagina) as ITiposPagina;
end;

class function CoLayoutsPagina.Create: ILayoutsPagina;
begin
  Result := CreateComObject(CLASS_LayoutsPagina) as ILayoutsPagina;
end;

class function CoLayoutsPagina.CreateRemote(const MachineName: string): ILayoutsPagina;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_LayoutsPagina) as ILayoutsPagina;
end;

class function CoGrupoPaginas.Create: IGrupoPaginas;
begin
  Result := CreateComObject(CLASS_GrupoPaginas) as IGrupoPaginas;
end;

class function CoGrupoPaginas.CreateRemote(const MachineName: string): IGrupoPaginas;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_GrupoPaginas) as IGrupoPaginas;
end;

class function CoGruposPaginas.Create: IGruposPaginas;
begin
  Result := CreateComObject(CLASS_GruposPaginas) as IGruposPaginas;
end;

class function CoGruposPaginas.CreateRemote(const MachineName: string): IGruposPaginas;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_GruposPaginas) as IGruposPaginas;
end;

class function CoBannersDefault.Create: IBannersDefault;
begin
  Result := CreateComObject(CLASS_BannersDefault) as IBannersDefault;
end;

class function CoBannersDefault.CreateRemote(const MachineName: string): IBannersDefault;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_BannersDefault) as IBannersDefault;
end;

class function CoPaginas.Create: IPaginas;
begin
  Result := CreateComObject(CLASS_Paginas) as IPaginas;
end;

class function CoPaginas.CreateRemote(const MachineName: string): IPaginas;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Paginas) as IPaginas;
end;

class function CoTiposTarget.Create: ITiposTarget;
begin
  Result := CreateComObject(CLASS_TiposTarget) as ITiposTarget;
end;

class function CoTiposTarget.CreateRemote(const MachineName: string): ITiposTarget;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposTarget) as ITiposTarget;
end;

class function CoAnunciante.Create: IAnunciante;
begin
  Result := CreateComObject(CLASS_Anunciante) as IAnunciante;
end;

class function CoAnunciante.CreateRemote(const MachineName: string): IAnunciante;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Anunciante) as IAnunciante;
end;

class function CoAnunciantes.Create: IAnunciantes;
begin
  Result := CreateComObject(CLASS_Anunciantes) as IAnunciantes;
end;

class function CoAnunciantes.CreateRemote(const MachineName: string): IAnunciantes;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Anunciantes) as IAnunciantes;
end;

class function CoPrograma.Create: IPrograma;
begin
  Result := CreateComObject(CLASS_Programa) as IPrograma;
end;

class function CoPrograma.CreateRemote(const MachineName: string): IPrograma;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Programa) as IPrograma;
end;

class function CoProgramas.Create: IProgramas;
begin
  Result := CreateComObject(CLASS_Programas) as IProgramas;
end;

class function CoProgramas.CreateRemote(const MachineName: string): IProgramas;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Programas) as IProgramas;
end;

class function CoResultadosAnuncio.Create: IResultadosAnuncio;
begin
  Result := CreateComObject(CLASS_ResultadosAnuncio) as IResultadosAnuncio;
end;

class function CoResultadosAnuncio.CreateRemote(const MachineName: string): IResultadosAnuncio;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ResultadosAnuncio) as IResultadosAnuncio;
end;

class function CoUsuario.Create: IUsuario;
begin
  Result := CreateComObject(CLASS_Usuario) as IUsuario;
end;

class function CoUsuario.CreateRemote(const MachineName: string): IUsuario;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Usuario) as IUsuario;
end;

class function CoItemMenu.Create: IItemMenu;
begin
  Result := CreateComObject(CLASS_ItemMenu) as IItemMenu;
end;

class function CoItemMenu.CreateRemote(const MachineName: string): IItemMenu;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ItemMenu) as IItemMenu;
end;

class function CoBloqueio.Create: IBloqueio;
begin
  Result := CreateComObject(CLASS_Bloqueio) as IBloqueio;
end;

class function CoBloqueio.CreateRemote(const MachineName: string): IBloqueio;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Bloqueio) as IBloqueio;
end;

class function CoProdutor.Create: IProdutor;
begin
  Result := CreateComObject(CLASS_Produtor) as IProdutor;
end;

class function CoProdutor.CreateRemote(const MachineName: string): IProdutor;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Produtor) as IProdutor;
end;

class function CoAcesso.Create: IAcesso;
begin
  Result := CreateComObject(CLASS_Acesso) as IAcesso;
end;

class function CoAcesso.CreateRemote(const MachineName: string): IAcesso;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Acesso) as IAcesso;
end;

class function CoPessoas.Create: IPessoas;
begin
  Result := CreateComObject(CLASS_Pessoas) as IPessoas;
end;

class function CoPessoas.CreateRemote(const MachineName: string): IPessoas;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Pessoas) as IPessoas;
end;

class function CoPapeis.Create: IPapeis;
begin
  Result := CreateComObject(CLASS_Papeis) as IPapeis;
end;

class function CoPapeis.CreateRemote(const MachineName: string): IPapeis;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Papeis) as IPapeis;
end;

class function CoUsuarios.Create: IUsuarios;
begin
  Result := CreateComObject(CLASS_Usuarios) as IUsuarios;
end;

class function CoUsuarios.CreateRemote(const MachineName: string): IUsuarios;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Usuarios) as IUsuarios;
end;

class function CoComunicado.Create: IComunicado;
begin
  Result := CreateComObject(CLASS_Comunicado) as IComunicado;
end;

class function CoComunicado.CreateRemote(const MachineName: string): IComunicado;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Comunicado) as IComunicado;
end;

class function CoComunicados.Create: IComunicados;
begin
  Result := CreateComObject(CLASS_Comunicados) as IComunicados;
end;

class function CoComunicados.CreateRemote(const MachineName: string): IComunicados;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Comunicados) as IComunicados;
end;

class function CoBloqueios.Create: IBloqueios;
begin
  Result := CreateComObject(CLASS_Bloqueios) as IBloqueios;
end;

class function CoBloqueios.CreateRemote(const MachineName: string): IBloqueios;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Bloqueios) as IBloqueios;
end;

class function CoPerfil.Create: IPerfil;
begin
  Result := CreateComObject(CLASS_Perfil) as IPerfil;
end;

class function CoPerfil.CreateRemote(const MachineName: string): IPerfil;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Perfil) as IPerfil;
end;

class function CoAcessoTecnicoProdutor.Create: IAcessoTecnicoProdutor;
begin
  Result := CreateComObject(CLASS_AcessoTecnicoProdutor) as IAcessoTecnicoProdutor;
end;

class function CoAcessoTecnicoProdutor.CreateRemote(const MachineName: string): IAcessoTecnicoProdutor;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AcessoTecnicoProdutor) as IAcessoTecnicoProdutor;
end;

class function CoAcessoAssociacaoProdutor.Create: IAcessoAssociacaoProdutor;
begin
  Result := CreateComObject(CLASS_AcessoAssociacaoProdutor) as IAcessoAssociacaoProdutor;
end;

class function CoAcessoAssociacaoProdutor.CreateRemote(const MachineName: string): IAcessoAssociacaoProdutor;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AcessoAssociacaoProdutor) as IAcessoAssociacaoProdutor;
end;

class function CoPerfis.Create: IPerfis;
begin
  Result := CreateComObject(CLASS_Perfis) as IPerfis;
end;

class function CoPerfis.CreateRemote(const MachineName: string): IPerfis;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Perfis) as IPerfis;
end;

class function CoMotivoBloqueio.Create: IMotivoBloqueio;
begin
  Result := CreateComObject(CLASS_MotivoBloqueio) as IMotivoBloqueio;
end;

class function CoMotivoBloqueio.CreateRemote(const MachineName: string): IMotivoBloqueio;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_MotivoBloqueio) as IMotivoBloqueio;
end;

class function CoMotivosBloqueio.Create: IMotivosBloqueio;
begin
  Result := CreateComObject(CLASS_MotivosBloqueio) as IMotivosBloqueio;
end;

class function CoMotivosBloqueio.CreateRemote(const MachineName: string): IMotivosBloqueio;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_MotivosBloqueio) as IMotivosBloqueio;
end;

class function CoPaises.Create: IPaises;
begin
  Result := CreateComObject(CLASS_Paises) as IPaises;
end;

class function CoPaises.CreateRemote(const MachineName: string): IPaises;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Paises) as IPaises;
end;

class function CoCodigosSisbov.Create: ICodigosSisbov;
begin
  Result := CreateComObject(CLASS_CodigosSisbov) as ICodigosSisbov;
end;

class function CoCodigosSisbov.CreateRemote(const MachineName: string): ICodigosSisbov;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CodigosSisbov) as ICodigosSisbov;
end;

class function CoEstados.Create: IEstados;
begin
  Result := CreateComObject(CLASS_Estados) as IEstados;
end;

class function CoEstados.CreateRemote(const MachineName: string): IEstados;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Estados) as IEstados;
end;

class function CoMicroRegioes.Create: IMicroRegioes;
begin
  Result := CreateComObject(CLASS_MicroRegioes) as IMicroRegioes;
end;

class function CoMicroRegioes.CreateRemote(const MachineName: string): IMicroRegioes;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_MicroRegioes) as IMicroRegioes;
end;

class function CoRacas.Create: IRacas;
begin
  Result := CreateComObject(CLASS_Racas) as IRacas;
end;

class function CoRacas.CreateRemote(const MachineName: string): IRacas;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Racas) as IRacas;
end;

class function CoPelagens.Create: IPelagens;
begin
  Result := CreateComObject(CLASS_Pelagens) as IPelagens;
end;

class function CoPelagens.CreateRemote(const MachineName: string): IPelagens;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Pelagens) as IPelagens;
end;

class function CoLocal.Create: ILocal;
begin
  Result := CreateComObject(CLASS_Local) as ILocal;
end;

class function CoLocal.CreateRemote(const MachineName: string): ILocal;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Local) as ILocal;
end;

class function CoLocais.Create: ILocais;
begin
  Result := CreateComObject(CLASS_Locais) as ILocais;
end;

class function CoLocais.CreateRemote(const MachineName: string): ILocais;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Locais) as ILocais;
end;

class function CoTiposOrigem.Create: ITiposOrigem;
begin
  Result := CreateComObject(CLASS_TiposOrigem) as ITiposOrigem;
end;

class function CoTiposOrigem.CreateRemote(const MachineName: string): ITiposOrigem;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposOrigem) as ITiposOrigem;
end;

class function CoFazendas.Create: IFazendas;
begin
  Result := CreateComObject(CLASS_Fazendas) as IFazendas;
end;

class function CoFazendas.CreateRemote(const MachineName: string): IFazendas;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Fazendas) as IFazendas;
end;

class function CoFazenda.Create: IFazenda;
begin
  Result := CreateComObject(CLASS_Fazenda) as IFazenda;
end;

class function CoFazenda.CreateRemote(const MachineName: string): IFazenda;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Fazenda) as IFazenda;
end;

class function CoRegimesAlimentares.Create: IRegimesAlimentares;
begin
  Result := CreateComObject(CLASS_RegimesAlimentares) as IRegimesAlimentares;
end;

class function CoRegimesAlimentares.CreateRemote(const MachineName: string): IRegimesAlimentares;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RegimesAlimentares) as IRegimesAlimentares;
end;

class function CoAssociacoesRaca.Create: IAssociacoesRaca;
begin
  Result := CreateComObject(CLASS_AssociacoesRaca) as IAssociacoesRaca;
end;

class function CoAssociacoesRaca.CreateRemote(const MachineName: string): IAssociacoesRaca;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AssociacoesRaca) as IAssociacoesRaca;
end;

class function CoGrausSangue.Create: IGrausSangue;
begin
  Result := CreateComObject(CLASS_GrausSangue) as IGrausSangue;
end;

class function CoGrausSangue.CreateRemote(const MachineName: string): IGrausSangue;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_GrausSangue) as IGrausSangue;
end;

class function CoTiposIdentificador.Create: ITiposIdentificador;
begin
  Result := CreateComObject(CLASS_TiposIdentificador) as ITiposIdentificador;
end;

class function CoTiposIdentificador.CreateRemote(const MachineName: string): ITiposIdentificador;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposIdentificador) as ITiposIdentificador;
end;

class function CoCategoriasAnimal.Create: ICategoriasAnimal;
begin
  Result := CreateComObject(CLASS_CategoriasAnimal) as ICategoriasAnimal;
end;

class function CoCategoriasAnimal.CreateRemote(const MachineName: string): ICategoriasAnimal;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CategoriasAnimal) as ICategoriasAnimal;
end;

class function CoTiposFonteAgua.Create: ITiposFonteAgua;
begin
  Result := CreateComObject(CLASS_TiposFonteAgua) as ITiposFonteAgua;
end;

class function CoTiposFonteAgua.CreateRemote(const MachineName: string): ITiposFonteAgua;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposFonteAgua) as ITiposFonteAgua;
end;

class function CoAnimal.Create: IAnimal;
begin
  Result := CreateComObject(CLASS_Animal) as IAnimal;
end;

class function CoAnimal.CreateRemote(const MachineName: string): IAnimal;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Animal) as IAnimal;
end;

class function CoAnimais.Create: IAnimais;
begin
  Result := CreateComObject(CLASS_Animais) as IAnimais;
end;

class function CoAnimais.CreateRemote(const MachineName: string): IAnimais;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Animais) as IAnimais;
end;

class function CoLote.Create: ILote;
begin
  Result := CreateComObject(CLASS_Lote) as ILote;
end;

class function CoLote.CreateRemote(const MachineName: string): ILote;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Lote) as ILote;
end;

class function CoLotes.Create: ILotes;
begin
  Result := CreateComObject(CLASS_Lotes) as ILotes;
end;

class function CoLotes.CreateRemote(const MachineName: string): ILotes;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Lotes) as ILotes;
end;

class function CoRaca.Create: IRaca;
begin
  Result := CreateComObject(CLASS_Raca) as IRaca;
end;

class function CoRaca.CreateRemote(const MachineName: string): IRaca;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Raca) as IRaca;
end;

class function CoLocalidade.Create: ILocalidade;
begin
  Result := CreateComObject(CLASS_Localidade) as ILocalidade;
end;

class function CoLocalidade.CreateRemote(const MachineName: string): ILocalidade;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Localidade) as ILocalidade;
end;

class function CoLocalidades.Create: ILocalidades;
begin
  Result := CreateComObject(CLASS_Localidades) as ILocalidades;
end;

class function CoLocalidades.CreateRemote(const MachineName: string): ILocalidades;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Localidades) as ILocalidades;
end;

class function CoPelagem.Create: IPelagem;
begin
  Result := CreateComObject(CLASS_Pelagem) as IPelagem;
end;

class function CoPelagem.CreateRemote(const MachineName: string): IPelagem;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Pelagem) as IPelagem;
end;

class function CoPessoaSecundaria.Create: IPessoaSecundaria;
begin
  Result := CreateComObject(CLASS_PessoaSecundaria) as IPessoaSecundaria;
end;

class function CoPessoaSecundaria.CreateRemote(const MachineName: string): IPessoaSecundaria;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_PessoaSecundaria) as IPessoaSecundaria;
end;

class function CoPapeisSecundarios.Create: IPapeisSecundarios;
begin
  Result := CreateComObject(CLASS_PapeisSecundarios) as IPapeisSecundarios;
end;

class function CoPapeisSecundarios.CreateRemote(const MachineName: string): IPapeisSecundarios;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_PapeisSecundarios) as IPapeisSecundarios;
end;

class function CoPessoasSecundarias.Create: IPessoasSecundarias;
begin
  Result := CreateComObject(CLASS_PessoasSecundarias) as IPessoasSecundarias;
end;

class function CoPessoasSecundarias.CreateRemote(const MachineName: string): IPessoasSecundarias;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_PessoasSecundarias) as IPessoasSecundarias;
end;

class function CoFazendaTrabalho.Create: IFazendaTrabalho;
begin
  Result := CreateComObject(CLASS_FazendaTrabalho) as IFazendaTrabalho;
end;

class function CoFazendaTrabalho.CreateRemote(const MachineName: string): IFazendaTrabalho;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_FazendaTrabalho) as IFazendaTrabalho;
end;

class function CoOpcoesEnvioComunicado.Create: IOpcoesEnvioComunicado;
begin
  Result := CreateComObject(CLASS_OpcoesEnvioComunicado) as IOpcoesEnvioComunicado;
end;

class function CoOpcoesEnvioComunicado.CreateRemote(const MachineName: string): IOpcoesEnvioComunicado;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_OpcoesEnvioComunicado) as IOpcoesEnvioComunicado;
end;

class function CoPessoa.Create: IPessoa;
begin
  Result := CreateComObject(CLASS_Pessoa) as IPessoa;
end;

class function CoPessoa.CreateRemote(const MachineName: string): IPessoa;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Pessoa) as IPessoa;
end;

class function CoPais.Create: IPais;
begin
  Result := CreateComObject(CLASS_Pais) as IPais;
end;

class function CoPais.CreateRemote(const MachineName: string): IPais;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Pais) as IPais;
end;

class function CoEstado.Create: IEstado;
begin
  Result := CreateComObject(CLASS_Estado) as IEstado;
end;

class function CoEstado.CreateRemote(const MachineName: string): IEstado;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Estado) as IEstado;
end;

class function CoTiposContato.Create: ITiposContato;
begin
  Result := CreateComObject(CLASS_TiposContato) as ITiposContato;
end;

class function CoTiposContato.CreateRemote(const MachineName: string): ITiposContato;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposContato) as ITiposContato;
end;

class function CoTiposEndereco.Create: ITiposEndereco;
begin
  Result := CreateComObject(CLASS_TiposEndereco) as ITiposEndereco;
end;

class function CoTiposEndereco.CreateRemote(const MachineName: string): ITiposEndereco;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposEndereco) as ITiposEndereco;
end;

class function CoMicroRegiao.Create: IMicroRegiao;
begin
  Result := CreateComObject(CLASS_MicroRegiao) as IMicroRegiao;
end;

class function CoMicroRegiao.CreateRemote(const MachineName: string): IMicroRegiao;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_MicroRegiao) as IMicroRegiao;
end;

class function CoPropriedadeRural.Create: IPropriedadeRural;
begin
  Result := CreateComObject(CLASS_PropriedadeRural) as IPropriedadeRural;
end;

class function CoPropriedadeRural.CreateRemote(const MachineName: string): IPropriedadeRural;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_PropriedadeRural) as IPropriedadeRural;
end;

class function CoPropriedadesRurais.Create: IPropriedadesRurais;
begin
  Result := CreateComObject(CLASS_PropriedadesRurais) as IPropriedadesRurais;
end;

class function CoPropriedadesRurais.CreateRemote(const MachineName: string): IPropriedadesRurais;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_PropriedadesRurais) as IPropriedadesRurais;
end;

class function CoAptidoes.Create: IAptidoes;
begin
  Result := CreateComObject(CLASS_Aptidoes) as IAptidoes;
end;

class function CoAptidoes.CreateRemote(const MachineName: string): IAptidoes;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Aptidoes) as IAptidoes;
end;

class function CoEspecies.Create: IEspecies;
begin
  Result := CreateComObject(CLASS_Especies) as IEspecies;
end;

class function CoEspecies.CreateRemote(const MachineName: string): IEspecies;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Especies) as IEspecies;
end;

class function CoTiposMorte.Create: ITiposMorte;
begin
  Result := CreateComObject(CLASS_TiposMorte) as ITiposMorte;
end;

class function CoTiposMorte.CreateRemote(const MachineName: string): ITiposMorte;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposMorte) as ITiposMorte;
end;

class function CoCausasMorte.Create: ICausasMorte;
begin
  Result := CreateComObject(CLASS_CausasMorte) as ICausasMorte;
end;

class function CoCausasMorte.CreateRemote(const MachineName: string): ICausasMorte;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CausasMorte) as ICausasMorte;
end;

class function CoGrausInstrucao.Create: IGrausInstrucao;
begin
  Result := CreateComObject(CLASS_GrausInstrucao) as IGrausInstrucao;
end;

class function CoGrausInstrucao.CreateRemote(const MachineName: string): IGrausInstrucao;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_GrausInstrucao) as IGrausInstrucao;
end;

class function CoPosicoesIdentificador.Create: IPosicoesIdentificador;
begin
  Result := CreateComObject(CLASS_PosicoesIdentificador) as IPosicoesIdentificador;
end;

class function CoPosicoesIdentificador.CreateRemote(const MachineName: string): IPosicoesIdentificador;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_PosicoesIdentificador) as IPosicoesIdentificador;
end;

class function CoAnimalResumido.Create: IAnimalResumido;
begin
  Result := CreateComObject(CLASS_AnimalResumido) as IAnimalResumido;
end;

class function CoAnimalResumido.CreateRemote(const MachineName: string): IAnimalResumido;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AnimalResumido) as IAnimalResumido;
end;

class function CoFiliacao.Create: IFiliacao;
begin
  Result := CreateComObject(CLASS_Filiacao) as IFiliacao;
end;

class function CoFiliacao.CreateRemote(const MachineName: string): IFiliacao;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Filiacao) as IFiliacao;
end;

class function CoRegistro.Create: IRegistro;
begin
  Result := CreateComObject(CLASS_Registro) as IRegistro;
end;

class function CoRegistro.CreateRemote(const MachineName: string): IRegistro;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Registro) as IRegistro;
end;

class function CoAssociacaoRaca.Create: IAssociacaoRaca;
begin
  Result := CreateComObject(CLASS_AssociacaoRaca) as IAssociacaoRaca;
end;

class function CoAssociacaoRaca.CreateRemote(const MachineName: string): IAssociacaoRaca;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AssociacaoRaca) as IAssociacaoRaca;
end;

class function CoGrauSangue.Create: IGrauSangue;
begin
  Result := CreateComObject(CLASS_GrauSangue) as IGrauSangue;
end;

class function CoGrauSangue.CreateRemote(const MachineName: string): IGrauSangue;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_GrauSangue) as IGrauSangue;
end;

class function CoTiposLugar.Create: ITiposLugar;
begin
  Result := CreateComObject(CLASS_TiposLugar) as ITiposLugar;
end;

class function CoTiposLugar.CreateRemote(const MachineName: string): ITiposLugar;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposLugar) as ITiposLugar;
end;

class function CoSituacoesSisBov.Create: ISituacoesSisBov;
begin
  Result := CreateComObject(CLASS_SituacoesSisBov) as ISituacoesSisBov;
end;

class function CoSituacoesSisBov.CreateRemote(const MachineName: string): ISituacoesSisBov;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SituacoesSisBov) as ISituacoesSisBov;
end;

class function CoPessoasContatos.Create: IPessoasContatos;
begin
  Result := CreateComObject(CLASS_PessoasContatos) as IPessoasContatos;
end;

class function CoPessoasContatos.CreateRemote(const MachineName: string): IPessoasContatos;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_PessoasContatos) as IPessoasContatos;
end;

class function CoIdentificadorDoProdutor.Create: IIdentificadorDoProdutor;
begin
  Result := CreateComObject(CLASS_IdentificadorDoProdutor) as IIdentificadorDoProdutor;
end;

class function CoIdentificadorDoProdutor.CreateRemote(const MachineName: string): IIdentificadorDoProdutor;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_IdentificadorDoProdutor) as IIdentificadorDoProdutor;
end;

class function CoParametro.Create: IParametro;
begin
  Result := CreateComObject(CLASS_Parametro) as IParametro;
end;

class function CoParametro.CreateRemote(const MachineName: string): IParametro;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Parametro) as IParametro;
end;

class function CoGrandezasResumo.Create: IGrandezasResumo;
begin
  Result := CreateComObject(CLASS_GrandezasResumo) as IGrandezasResumo;
end;

class function CoGrandezasResumo.CreateRemote(const MachineName: string): IGrandezasResumo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_GrandezasResumo) as IGrandezasResumo;
end;

class function CoGruposEvento.Create: IGruposEvento;
begin
  Result := CreateComObject(CLASS_GruposEvento) as IGruposEvento;
end;

class function CoGruposEvento.CreateRemote(const MachineName: string): IGruposEvento;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_GruposEvento) as IGruposEvento;
end;

class function CoTiposEvento.Create: ITiposEvento;
begin
  Result := CreateComObject(CLASS_TiposEvento) as ITiposEvento;
end;

class function CoTiposEvento.CreateRemote(const MachineName: string): ITiposEvento;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposEvento) as ITiposEvento;
end;

class function CoTipoInsumo.Create: ITipoInsumo;
begin
  Result := CreateComObject(CLASS_TipoInsumo) as ITipoInsumo;
end;

class function CoTipoInsumo.CreateRemote(const MachineName: string): ITipoInsumo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TipoInsumo) as ITipoInsumo;
end;

class function CoTiposInsumo.Create: ITiposInsumo;
begin
  Result := CreateComObject(CLASS_TiposInsumo) as ITiposInsumo;
end;

class function CoTiposInsumo.CreateRemote(const MachineName: string): ITiposInsumo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposInsumo) as ITiposInsumo;
end;

class function CoSubTipoInsumo.Create: ISubTipoInsumo;
begin
  Result := CreateComObject(CLASS_SubTipoInsumo) as ISubTipoInsumo;
end;

class function CoSubTipoInsumo.CreateRemote(const MachineName: string): ISubTipoInsumo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SubTipoInsumo) as ISubTipoInsumo;
end;

class function CoSubTiposInsumo.Create: ISubTiposInsumo;
begin
  Result := CreateComObject(CLASS_SubTiposInsumo) as ISubTiposInsumo;
end;

class function CoSubTiposInsumo.CreateRemote(const MachineName: string): ISubTiposInsumo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SubTiposInsumo) as ISubTiposInsumo;
end;

class function CoUnidadeMedida.Create: IUnidadeMedida;
begin
  Result := CreateComObject(CLASS_UnidadeMedida) as IUnidadeMedida;
end;

class function CoUnidadeMedida.CreateRemote(const MachineName: string): IUnidadeMedida;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_UnidadeMedida) as IUnidadeMedida;
end;

class function CoUnidadesMedida.Create: IUnidadesMedida;
begin
  Result := CreateComObject(CLASS_UnidadesMedida) as IUnidadesMedida;
end;

class function CoUnidadesMedida.CreateRemote(const MachineName: string): IUnidadesMedida;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_UnidadesMedida) as IUnidadesMedida;
end;

class function CoFabricanteInsumo.Create: IFabricanteInsumo;
begin
  Result := CreateComObject(CLASS_FabricanteInsumo) as IFabricanteInsumo;
end;

class function CoFabricanteInsumo.CreateRemote(const MachineName: string): IFabricanteInsumo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_FabricanteInsumo) as IFabricanteInsumo;
end;

class function CoFabricantesInsumo.Create: IFabricantesInsumo;
begin
  Result := CreateComObject(CLASS_FabricantesInsumo) as IFabricantesInsumo;
end;

class function CoFabricantesInsumo.CreateRemote(const MachineName: string): IFabricantesInsumo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_FabricantesInsumo) as IFabricantesInsumo;
end;

class function CoEvento.Create: IEvento;
begin
  Result := CreateComObject(CLASS_Evento) as IEvento;
end;

class function CoEvento.CreateRemote(const MachineName: string): IEvento;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Evento) as IEvento;
end;

class function CoEventos.Create: IEventos;
begin
  Result := CreateComObject(CLASS_Eventos) as IEventos;
end;

class function CoEventos.CreateRemote(const MachineName: string): IEventos;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Eventos) as IEventos;
end;

class function CoMudancasCategoriaAnimal.Create: IMudancasCategoriaAnimal;
begin
  Result := CreateComObject(CLASS_MudancasCategoriaAnimal) as IMudancasCategoriaAnimal;
end;

class function CoMudancasCategoriaAnimal.CreateRemote(const MachineName: string): IMudancasCategoriaAnimal;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_MudancasCategoriaAnimal) as IMudancasCategoriaAnimal;
end;

class function CoInsumo.Create: IInsumo;
begin
  Result := CreateComObject(CLASS_Insumo) as IInsumo;
end;

class function CoInsumo.CreateRemote(const MachineName: string): IInsumo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Insumo) as IInsumo;
end;

class function CoInsumos.Create: IInsumos;
begin
  Result := CreateComObject(CLASS_Insumos) as IInsumos;
end;

class function CoInsumos.CreateRemote(const MachineName: string): IInsumos;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Insumos) as IInsumos;
end;

class function CoEntradaInsumo.Create: IEntradaInsumo;
begin
  Result := CreateComObject(CLASS_EntradaInsumo) as IEntradaInsumo;
end;

class function CoEntradaInsumo.CreateRemote(const MachineName: string): IEntradaInsumo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_EntradaInsumo) as IEntradaInsumo;
end;

class function CoEntradasInsumo.Create: IEntradasInsumo;
begin
  Result := CreateComObject(CLASS_EntradasInsumo) as IEntradasInsumo;
end;

class function CoEntradasInsumo.CreateRemote(const MachineName: string): IEntradasInsumo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_EntradasInsumo) as IEntradasInsumo;
end;

class function CoRelatorios.Create: IRelatorios;
begin
  Result := CreateComObject(CLASS_Relatorios) as IRelatorios;
end;

class function CoRelatorios.CreateRemote(const MachineName: string): IRelatorios;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Relatorios) as IRelatorios;
end;

class function CoRelatorio.Create: IRelatorio;
begin
  Result := CreateComObject(CLASS_Relatorio) as IRelatorio;
end;

class function CoRelatorio.CreateRemote(const MachineName: string): IRelatorio;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Relatorio) as IRelatorio;
end;

class function CoOrientacoes.Create: IOrientacoes;
begin
  Result := CreateComObject(CLASS_Orientacoes) as IOrientacoes;
end;

class function CoOrientacoes.CreateRemote(const MachineName: string): IOrientacoes;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Orientacoes) as IOrientacoes;
end;

class function CoTamanhosFonte.Create: ITamanhosFonte;
begin
  Result := CreateComObject(CLASS_TamanhosFonte) as ITamanhosFonte;
end;

class function CoTamanhosFonte.CreateRemote(const MachineName: string): ITamanhosFonte;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TamanhosFonte) as ITamanhosFonte;
end;

class function CoLargurasLinhaRelatorio.Create: ILargurasLinhaRelatorio;
begin
  Result := CreateComObject(CLASS_LargurasLinhaRelatorio) as ILargurasLinhaRelatorio;
end;

class function CoLargurasLinhaRelatorio.CreateRemote(const MachineName: string): ILargurasLinhaRelatorio;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_LargurasLinhaRelatorio) as ILargurasLinhaRelatorio;
end;

class function CoInterfaceSisbov.Create: IInterfaceSisbov;
begin
  Result := CreateComObject(CLASS_InterfaceSisbov) as IInterfaceSisbov;
end;

class function CoInterfaceSisbov.CreateRemote(const MachineName: string): IInterfaceSisbov;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_InterfaceSisbov) as IInterfaceSisbov;
end;

class function CoTiposArquivoSisBov.Create: ITiposArquivoSisBov;
begin
  Result := CreateComObject(CLASS_TiposArquivoSisBov) as ITiposArquivoSisBov;
end;

class function CoTiposArquivoSisBov.CreateRemote(const MachineName: string): ITiposArquivoSisBov;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposArquivoSisBov) as ITiposArquivoSisBov;
end;

class function CoTiposSubEventoSanitario.Create: ITiposSubEventoSanitario;
begin
  Result := CreateComObject(CLASS_TiposSubEventoSanitario) as ITiposSubEventoSanitario;
end;

class function CoTiposSubEventoSanitario.CreateRemote(const MachineName: string): ITiposSubEventoSanitario;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposSubEventoSanitario) as ITiposSubEventoSanitario;
end;

class function CoArquivoSisbov.Create: IArquivoSisbov;
begin
  Result := CreateComObject(CLASS_ArquivoSisbov) as IArquivoSisbov;
end;

class function CoArquivoSisbov.CreateRemote(const MachineName: string): IArquivoSisbov;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ArquivoSisbov) as IArquivoSisbov;
end;

class function CoAnimaisVisita.Create: IAnimaisVisita;
begin
  Result := CreateComObject(CLASS_AnimaisVisita) as IAnimaisVisita;
end;

class function CoAnimaisVisita.CreateRemote(const MachineName: string): IAnimaisVisita;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AnimaisVisita) as IAnimaisVisita;
end;

class function CoAnimalVisita.Create: IAnimalVisita;
begin
  Result := CreateComObject(CLASS_AnimalVisita) as IAnimalVisita;
end;

class function CoAnimalVisita.CreateRemote(const MachineName: string): IAnimalVisita;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AnimalVisita) as IAnimalVisita;
end;

class function CoReprodutorMultiplo.Create: IReprodutorMultiplo;
begin
  Result := CreateComObject(CLASS_ReprodutorMultiplo) as IReprodutorMultiplo;
end;

class function CoReprodutorMultiplo.CreateRemote(const MachineName: string): IReprodutorMultiplo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ReprodutorMultiplo) as IReprodutorMultiplo;
end;

class function CoReprodutoresMultiplos.Create: IReprodutoresMultiplos;
begin
  Result := CreateComObject(CLASS_ReprodutoresMultiplos) as IReprodutoresMultiplos;
end;

class function CoReprodutoresMultiplos.CreateRemote(const MachineName: string): IReprodutoresMultiplos;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ReprodutoresMultiplos) as IReprodutoresMultiplos;
end;

class function CoParametrosPesoAjustado.Create: IParametrosPesoAjustado;
begin
  Result := CreateComObject(CLASS_ParametrosPesoAjustado) as IParametrosPesoAjustado;
end;

class function CoParametrosPesoAjustado.CreateRemote(const MachineName: string): IParametrosPesoAjustado;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ParametrosPesoAjustado) as IParametrosPesoAjustado;
end;

class function CoModelosCertificado.Create: IModelosCertificado;
begin
  Result := CreateComObject(CLASS_ModelosCertificado) as IModelosCertificado;
end;

class function CoModelosCertificado.CreateRemote(const MachineName: string): IModelosCertificado;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ModelosCertificado) as IModelosCertificado;
end;

class function CoImportacoes.Create: IImportacoes;
begin
  Result := CreateComObject(CLASS_Importacoes) as IImportacoes;
end;

class function CoImportacoes.CreateRemote(const MachineName: string): IImportacoes;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Importacoes) as IImportacoes;
end;

class function CoImportacao.Create: IImportacao;
begin
  Result := CreateComObject(CLASS_Importacao) as IImportacao;
end;

class function CoImportacao.CreateRemote(const MachineName: string): IImportacao;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Importacao) as IImportacao;
end;

class function CoTipoAgrupamentoRacas.Create: ITipoAgrupamentoRacas;
begin
  Result := CreateComObject(CLASS_TipoAgrupamentoRacas) as ITipoAgrupamentoRacas;
end;

class function CoTipoAgrupamentoRacas.CreateRemote(const MachineName: string): ITipoAgrupamentoRacas;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TipoAgrupamentoRacas) as ITipoAgrupamentoRacas;
end;

class function CoTiposAgrupamentoRacas.Create: ITiposAgrupamentoRacas;
begin
  Result := CreateComObject(CLASS_TiposAgrupamentoRacas) as ITiposAgrupamentoRacas;
end;

class function CoTiposAgrupamentoRacas.CreateRemote(const MachineName: string): ITiposAgrupamentoRacas;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposAgrupamentoRacas) as ITiposAgrupamentoRacas;
end;

class function CoAgrupamentoRacas.Create: IAgrupamentoRacas;
begin
  Result := CreateComObject(CLASS_AgrupamentoRacas) as IAgrupamentoRacas;
end;

class function CoAgrupamentoRacas.CreateRemote(const MachineName: string): IAgrupamentoRacas;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AgrupamentoRacas) as IAgrupamentoRacas;
end;

class function CoAgrupamentosRacas.Create: IAgrupamentosRacas;
begin
  Result := CreateComObject(CLASS_AgrupamentosRacas) as IAgrupamentosRacas;
end;

class function CoAgrupamentosRacas.CreateRemote(const MachineName: string): IAgrupamentosRacas;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AgrupamentosRacas) as IAgrupamentosRacas;
end;

class function CoTarefa.Create: ITarefa;
begin
  Result := CreateComObject(CLASS_Tarefa) as ITarefa;
end;

class function CoTarefa.CreateRemote(const MachineName: string): ITarefa;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Tarefa) as ITarefa;
end;

class function CoTarefas.Create: ITarefas;
begin
  Result := CreateComObject(CLASS_Tarefas) as ITarefas;
end;

class function CoTarefas.CreateRemote(const MachineName: string): ITarefas;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Tarefas) as ITarefas;
end;

class function CoSituacoesTarefa.Create: ISituacoesTarefa;
begin
  Result := CreateComObject(CLASS_SituacoesTarefa) as ISituacoesTarefa;
end;

class function CoSituacoesTarefa.CreateRemote(const MachineName: string): ISituacoesTarefa;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SituacoesTarefa) as ISituacoesTarefa;
end;

class function CoMovimentoEstoqueSemen.Create: IMovimentoEstoqueSemen;
begin
  Result := CreateComObject(CLASS_MovimentoEstoqueSemen) as IMovimentoEstoqueSemen;
end;

class function CoMovimentoEstoqueSemen.CreateRemote(const MachineName: string): IMovimentoEstoqueSemen;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_MovimentoEstoqueSemen) as IMovimentoEstoqueSemen;
end;

class function CoEstoqueSemen.Create: IEstoqueSemen;
begin
  Result := CreateComObject(CLASS_EstoqueSemen) as IEstoqueSemen;
end;

class function CoEstoqueSemen.CreateRemote(const MachineName: string): IEstoqueSemen;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_EstoqueSemen) as IEstoqueSemen;
end;

class function CoTiposMovimentoEstoqueSemen.Create: ITiposMovimentoEstoqueSemen;
begin
  Result := CreateComObject(CLASS_TiposMovimentoEstoqueSemen) as ITiposMovimentoEstoqueSemen;
end;

class function CoTiposMovimentoEstoqueSemen.CreateRemote(const MachineName: string): ITiposMovimentoEstoqueSemen;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposMovimentoEstoqueSemen) as ITiposMovimentoEstoqueSemen;
end;

class function CoTiposAvaliacao.Create: ITiposAvaliacao;
begin
  Result := CreateComObject(CLASS_TiposAvaliacao) as ITiposAvaliacao;
end;

class function CoTiposAvaliacao.CreateRemote(const MachineName: string): ITiposAvaliacao;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposAvaliacao) as ITiposAvaliacao;
end;

class function CoTipoAvaliacao.Create: ITipoAvaliacao;
begin
  Result := CreateComObject(CLASS_TipoAvaliacao) as ITipoAvaliacao;
end;

class function CoTipoAvaliacao.CreateRemote(const MachineName: string): ITipoAvaliacao;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TipoAvaliacao) as ITipoAvaliacao;
end;

class function CoCaracteristicasAvaliacao.Create: ICaracteristicasAvaliacao;
begin
  Result := CreateComObject(CLASS_CaracteristicasAvaliacao) as ICaracteristicasAvaliacao;
end;

class function CoCaracteristicasAvaliacao.CreateRemote(const MachineName: string): ICaracteristicasAvaliacao;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CaracteristicasAvaliacao) as ICaracteristicasAvaliacao;
end;

class function CoCaracteristicaAvaliacao.Create: ICaracteristicaAvaliacao;
begin
  Result := CreateComObject(CLASS_CaracteristicaAvaliacao) as ICaracteristicaAvaliacao;
end;

class function CoCaracteristicaAvaliacao.CreateRemote(const MachineName: string): ICaracteristicaAvaliacao;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CaracteristicaAvaliacao) as ICaracteristicaAvaliacao;
end;

class function CoSituacoesCria.Create: ISituacoesCria;
begin
  Result := CreateComObject(CLASS_SituacoesCria) as ISituacoesCria;
end;

class function CoSituacoesCria.CreateRemote(const MachineName: string): ISituacoesCria;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SituacoesCria) as ISituacoesCria;
end;

class function CoGrausDificuldade.Create: IGrausDificuldade;
begin
  Result := CreateComObject(CLASS_GrausDificuldade) as IGrausDificuldade;
end;

class function CoGrausDificuldade.CreateRemote(const MachineName: string): IGrausDificuldade;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_GrausDificuldade) as IGrausDificuldade;
end;

class function CoMotivosDescarte.Create: IMotivosDescarte;
begin
  Result := CreateComObject(CLASS_MotivosDescarte) as IMotivosDescarte;
end;

class function CoMotivosDescarte.CreateRemote(const MachineName: string): IMotivosDescarte;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_MotivosDescarte) as IMotivosDescarte;
end;

class function CoImportacoesDadoGeral.Create: IImportacoesDadoGeral;
begin
  Result := CreateComObject(CLASS_ImportacoesDadoGeral) as IImportacoesDadoGeral;
end;

class function CoImportacoesDadoGeral.CreateRemote(const MachineName: string): IImportacoesDadoGeral;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ImportacoesDadoGeral) as IImportacoesDadoGeral;
end;

class function CoImportacaoDadoGeral.Create: IImportacaoDadoGeral;
begin
  Result := CreateComObject(CLASS_ImportacaoDadoGeral) as IImportacaoDadoGeral;
end;

class function CoImportacaoDadoGeral.CreateRemote(const MachineName: string): IImportacaoDadoGeral;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ImportacaoDadoGeral) as IImportacaoDadoGeral;
end;

class function CoImportacaoSISBOV.Create: IImportacaoSISBOV;
begin
  Result := CreateComObject(CLASS_ImportacaoSISBOV) as IImportacaoSISBOV;
end;

class function CoImportacaoSISBOV.CreateRemote(const MachineName: string): IImportacaoSISBOV;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ImportacaoSISBOV) as IImportacaoSISBOV;
end;

class function CoImportacoesSISBOV.Create: IImportacoesSISBOV;
begin
  Result := CreateComObject(CLASS_ImportacoesSISBOV) as IImportacoesSISBOV;
end;

class function CoImportacoesSISBOV.CreateRemote(const MachineName: string): IImportacoesSISBOV;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ImportacoesSISBOV) as IImportacoesSISBOV;
end;

class function CoTipoOrigemArqImport.Create: ITipoOrigemArqImport;
begin
  Result := CreateComObject(CLASS_TipoOrigemArqImport) as ITipoOrigemArqImport;
end;

class function CoTipoOrigemArqImport.CreateRemote(const MachineName: string): ITipoOrigemArqImport;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TipoOrigemArqImport) as ITipoOrigemArqImport;
end;

class function CoTiposOrigemArqImport.Create: ITiposOrigemArqImport;
begin
  Result := CreateComObject(CLASS_TiposOrigemArqImport) as ITiposOrigemArqImport;
end;

class function CoTiposOrigemArqImport.CreateRemote(const MachineName: string): ITiposOrigemArqImport;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposOrigemArqImport) as ITiposOrigemArqImport;
end;

class function CoRegimesPosseUso.Create: IRegimesPosseUso;
begin
  Result := CreateComObject(CLASS_RegimesPosseUso) as IRegimesPosseUso;
end;

class function CoRegimesPosseUso.CreateRemote(const MachineName: string): IRegimesPosseUso;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RegimesPosseUso) as IRegimesPosseUso;
end;

class function CoArquivoFTPEnvio.Create: IArquivoFTPEnvio;
begin
  Result := CreateComObject(CLASS_ArquivoFTPEnvio) as IArquivoFTPEnvio;
end;

class function CoArquivoFTPEnvio.CreateRemote(const MachineName: string): IArquivoFTPEnvio;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ArquivoFTPEnvio) as IArquivoFTPEnvio;
end;

class function CoArquivosFTPEnvio.Create: IArquivosFTPEnvio;
begin
  Result := CreateComObject(CLASS_ArquivosFTPEnvio) as IArquivosFTPEnvio;
end;

class function CoArquivosFTPEnvio.CreateRemote(const MachineName: string): IArquivosFTPEnvio;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ArquivosFTPEnvio) as IArquivosFTPEnvio;
end;

class function CoFormasPagamentoIdentificador.Create: IFormasPagamentoIdentificador;
begin
  Result := CreateComObject(CLASS_FormasPagamentoIdentificador) as IFormasPagamentoIdentificador;
end;

class function CoFormasPagamentoIdentificador.CreateRemote(const MachineName: string): IFormasPagamentoIdentificador;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_FormasPagamentoIdentificador) as IFormasPagamentoIdentificador;
end;

class function CoOcorrenciaSistema.Create: IOcorrenciaSistema;
begin
  Result := CreateComObject(CLASS_OcorrenciaSistema) as IOcorrenciaSistema;
end;

class function CoOcorrenciaSistema.CreateRemote(const MachineName: string): IOcorrenciaSistema;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_OcorrenciaSistema) as IOcorrenciaSistema;
end;

class function CoOcorrenciasSistema.Create: IOcorrenciasSistema;
begin
  Result := CreateComObject(CLASS_OcorrenciasSistema) as IOcorrenciasSistema;
end;

class function CoOcorrenciasSistema.CreateRemote(const MachineName: string): IOcorrenciasSistema;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_OcorrenciasSistema) as IOcorrenciasSistema;
end;

class function CoFormasPagamentoOS.Create: IFormasPagamentoOS;
begin
  Result := CreateComObject(CLASS_FormasPagamentoOS) as IFormasPagamentoOS;
end;

class function CoFormasPagamentoOS.CreateRemote(const MachineName: string): IFormasPagamentoOS;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_FormasPagamentoOS) as IFormasPagamentoOS;
end;

class function CoFabricanteIdentificador.Create: IFabricanteIdentificador;
begin
  Result := CreateComObject(CLASS_FabricanteIdentificador) as IFabricanteIdentificador;
end;

class function CoFabricanteIdentificador.CreateRemote(const MachineName: string): IFabricanteIdentificador;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_FabricanteIdentificador) as IFabricanteIdentificador;
end;

class function CoFabricantesIdentificador.Create: IFabricantesIdentificador;
begin
  Result := CreateComObject(CLASS_FabricantesIdentificador) as IFabricantesIdentificador;
end;

class function CoFabricantesIdentificador.CreateRemote(const MachineName: string): IFabricantesIdentificador;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_FabricantesIdentificador) as IFabricantesIdentificador;
end;

class function CoIdentificacoesDuplas.Create: IIdentificacoesDuplas;
begin
  Result := CreateComObject(CLASS_IdentificacoesDuplas) as IIdentificacoesDuplas;
end;

class function CoIdentificacoesDuplas.CreateRemote(const MachineName: string): IIdentificacoesDuplas;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_IdentificacoesDuplas) as IIdentificacoesDuplas;
end;

class function CoProdutosAcessorios.Create: IProdutosAcessorios;
begin
  Result := CreateComObject(CLASS_ProdutosAcessorios) as IProdutosAcessorios;
end;

class function CoProdutosAcessorios.CreateRemote(const MachineName: string): IProdutosAcessorios;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ProdutosAcessorios) as IProdutosAcessorios;
end;

class function CoSituacoesOS.Create: ISituacoesOS;
begin
  Result := CreateComObject(CLASS_SituacoesOS) as ISituacoesOS;
end;

class function CoSituacoesOS.CreateRemote(const MachineName: string): ISituacoesOS;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SituacoesOS) as ISituacoesOS;
end;

class function CoEndereco.Create: IEndereco;
begin
  Result := CreateComObject(CLASS_Endereco) as IEndereco;
end;

class function CoEndereco.CreateRemote(const MachineName: string): IEndereco;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Endereco) as IEndereco;
end;

class function CoOrdemServico.Create: IOrdemServico;
begin
  Result := CreateComObject(CLASS_OrdemServico) as IOrdemServico;
end;

class function CoOrdemServico.CreateRemote(const MachineName: string): IOrdemServico;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_OrdemServico) as IOrdemServico;
end;

class function CoOrdensServico.Create: IOrdensServico;
begin
  Result := CreateComObject(CLASS_OrdensServico) as IOrdensServico;
end;

class function CoOrdensServico.CreateRemote(const MachineName: string): IOrdensServico;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_OrdensServico) as IOrdensServico;
end;

class function CoOrdemServicoResumida.Create: IOrdemServicoResumida;
begin
  Result := CreateComObject(CLASS_OrdemServicoResumida) as IOrdemServicoResumida;
end;

class function CoOrdemServicoResumida.CreateRemote(const MachineName: string): IOrdemServicoResumida;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_OrdemServicoResumida) as IOrdemServicoResumida;
end;

class function CoArquivoRemessaPedido.Create: IArquivoRemessaPedido;
begin
  Result := CreateComObject(CLASS_ArquivoRemessaPedido) as IArquivoRemessaPedido;
end;

class function CoArquivoRemessaPedido.CreateRemote(const MachineName: string): IArquivoRemessaPedido;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ArquivoRemessaPedido) as IArquivoRemessaPedido;
end;

class function CoArquivosRemessaPedido.Create: IArquivosRemessaPedido;
begin
  Result := CreateComObject(CLASS_ArquivosRemessaPedido) as IArquivosRemessaPedido;
end;

class function CoArquivosRemessaPedido.CreateRemote(const MachineName: string): IArquivosRemessaPedido;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ArquivosRemessaPedido) as IArquivosRemessaPedido;
end;

class function CoArquivoFTPRetorno.Create: IArquivoFTPRetorno;
begin
  Result := CreateComObject(CLASS_ArquivoFTPRetorno) as IArquivoFTPRetorno;
end;

class function CoArquivoFTPRetorno.CreateRemote(const MachineName: string): IArquivoFTPRetorno;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ArquivoFTPRetorno) as IArquivoFTPRetorno;
end;

class function CoArquivosFTPRetorno.Create: IArquivosFTPRetorno;
begin
  Result := CreateComObject(CLASS_ArquivosFTPRetorno) as IArquivosFTPRetorno;
end;

class function CoArquivosFTPRetorno.CreateRemote(const MachineName: string): IArquivosFTPRetorno;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ArquivosFTPRetorno) as IArquivosFTPRetorno;
end;

class function CoEnderecos.Create: IEnderecos;
begin
  Result := CreateComObject(CLASS_Enderecos) as IEnderecos;
end;

class function CoEnderecos.CreateRemote(const MachineName: string): IEnderecos;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Enderecos) as IEnderecos;
end;

class function CoRotinasFTPRetorno.Create: IRotinasFTPRetorno;
begin
  Result := CreateComObject(CLASS_RotinasFTPRetorno) as IRotinasFTPRetorno;
end;

class function CoRotinasFTPRetorno.CreateRemote(const MachineName: string): IRotinasFTPRetorno;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RotinasFTPRetorno) as IRotinasFTPRetorno;
end;

class function CoEmailEnvio.Create: IEmailEnvio;
begin
  Result := CreateComObject(CLASS_EmailEnvio) as IEmailEnvio;
end;

class function CoEmailEnvio.CreateRemote(const MachineName: string): IEmailEnvio;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_EmailEnvio) as IEmailEnvio;
end;

class function CoEmailsEnvio.Create: IEmailsEnvio;
begin
  Result := CreateComObject(CLASS_EmailsEnvio) as IEmailsEnvio;
end;

class function CoEmailsEnvio.CreateRemote(const MachineName: string): IEmailsEnvio;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_EmailsEnvio) as IEmailsEnvio;
end;

class function CoSituacoesCodigoSISBOV.Create: ISituacoesCodigoSISBOV;
begin
  Result := CreateComObject(CLASS_SituacoesCodigoSISBOV) as ISituacoesCodigoSISBOV;
end;

class function CoSituacoesCodigoSISBOV.CreateRemote(const MachineName: string): ISituacoesCodigoSISBOV;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SituacoesCodigoSISBOV) as ISituacoesCodigoSISBOV;
end;

class function CoTiposEmail.Create: ITiposEmail;
begin
  Result := CreateComObject(CLASS_TiposEmail) as ITiposEmail;
end;

class function CoTiposEmail.CreateRemote(const MachineName: string): ITiposEmail;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposEmail) as ITiposEmail;
end;

class function CoSituacoesEmail.Create: ISituacoesEmail;
begin
  Result := CreateComObject(CLASS_SituacoesEmail) as ISituacoesEmail;
end;

class function CoSituacoesEmail.CreateRemote(const MachineName: string): ISituacoesEmail;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SituacoesEmail) as ISituacoesEmail;
end;

class function CoSituacoesFTP.Create: ISituacoesFTP;
begin
  Result := CreateComObject(CLASS_SituacoesFTP) as ISituacoesFTP;
end;

class function CoSituacoesFTP.CreateRemote(const MachineName: string): ISituacoesFTP;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SituacoesFTP) as ISituacoesFTP;
end;

class function CoTiposMensagem.Create: ITiposMensagem;
begin
  Result := CreateComObject(CLASS_TiposMensagem) as ITiposMensagem;
end;

class function CoTiposMensagem.CreateRemote(const MachineName: string): ITiposMensagem;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposMensagem) as ITiposMensagem;
end;

class function CoRotinasFTPEnvio.Create: IRotinasFTPEnvio;
begin
  Result := CreateComObject(CLASS_RotinasFTPEnvio) as IRotinasFTPEnvio;
end;

class function CoRotinasFTPEnvio.CreateRemote(const MachineName: string): IRotinasFTPEnvio;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RotinasFTPEnvio) as IRotinasFTPEnvio;
end;

class function CoAplicativos.Create: IAplicativos;
begin
  Result := CreateComObject(CLASS_Aplicativos) as IAplicativos;
end;

class function CoAplicativos.CreateRemote(const MachineName: string): IAplicativos;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Aplicativos) as IAplicativos;
end;

class function CoImportacoesFabricante.Create: IImportacoesFabricante;
begin
  Result := CreateComObject(CLASS_ImportacoesFabricante) as IImportacoesFabricante;
end;

class function CoImportacoesFabricante.CreateRemote(const MachineName: string): IImportacoesFabricante;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ImportacoesFabricante) as IImportacoesFabricante;
end;

class function CoImportacaoFabricante.Create: IImportacaoFabricante;
begin
  Result := CreateComObject(CLASS_ImportacaoFabricante) as IImportacaoFabricante;
end;

class function CoImportacaoFabricante.CreateRemote(const MachineName: string): IImportacaoFabricante;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ImportacaoFabricante) as IImportacaoFabricante;
end;

class function CoSituacoesArqImport.Create: ISituacoesArqImport;
begin
  Result := CreateComObject(CLASS_SituacoesArqImport) as ISituacoesArqImport;
end;

class function CoSituacoesArqImport.CreateRemote(const MachineName: string): ISituacoesArqImport;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SituacoesArqImport) as ISituacoesArqImport;
end;

class function CoMenus.Create: IMenus;
begin
  Result := CreateComObject(CLASS_Menus) as IMenus;
end;

class function CoMenus.CreateRemote(const MachineName: string): IMenus;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Menus) as IMenus;
end;

class function CoBoletoBancario.Create: IBoletoBancario;
begin
  Result := CreateComObject(CLASS_BoletoBancario) as IBoletoBancario;
end;

class function CoBoletoBancario.CreateRemote(const MachineName: string): IBoletoBancario;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_BoletoBancario) as IBoletoBancario;
end;

class function CoBoletosBancario.Create: IBoletosBancario;
begin
  Result := CreateComObject(CLASS_BoletosBancario) as IBoletosBancario;
end;

class function CoBoletosBancario.CreateRemote(const MachineName: string): IBoletosBancario;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_BoletosBancario) as IBoletosBancario;
end;

class function CoIdentificacoesBancarias.Create: IIdentificacoesBancarias;
begin
  Result := CreateComObject(CLASS_IdentificacoesBancarias) as IIdentificacoesBancarias;
end;

class function CoIdentificacoesBancarias.CreateRemote(const MachineName: string): IIdentificacoesBancarias;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_IdentificacoesBancarias) as IIdentificacoesBancarias;
end;

class function CoDownloads.Create: IDownloads;
begin
  Result := CreateComObject(CLASS_Downloads) as IDownloads;
end;

class function CoDownloads.CreateRemote(const MachineName: string): IDownloads;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Downloads) as IDownloads;
end;

class function CoTiposPropriedades.Create: ITiposPropriedades;
begin
  Result := CreateComObject(CLASS_TiposPropriedades) as ITiposPropriedades;
end;

class function CoTiposPropriedades.CreateRemote(const MachineName: string): ITiposPropriedades;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TiposPropriedades) as ITiposPropriedades;
end;

class function CoInventariosAnimais.Create: IInventariosAnimais;
begin
  Result := CreateComObject(CLASS_InventariosAnimais) as IInventariosAnimais;
end;

class function CoInventariosAnimais.CreateRemote(const MachineName: string): IInventariosAnimais;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_InventariosAnimais) as IInventariosAnimais;
end;

class function CoInventariosCodigosSisbov.Create: IInventariosCodigosSisbov;
begin
  Result := CreateComObject(CLASS_InventariosCodigosSisbov) as IInventariosCodigosSisbov;
end;

class function CoInventariosCodigosSisbov.CreateRemote(const MachineName: string): IInventariosCodigosSisbov;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_InventariosCodigosSisbov) as IInventariosCodigosSisbov;
end;

class function CoTmpAplicaEvento.Create: ITmpAplicaEvento;
begin
  Result := CreateComObject(CLASS_TmpAplicaEvento) as ITmpAplicaEvento;
end;

class function CoTmpAplicaEvento.CreateRemote(const MachineName: string): ITmpAplicaEvento;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TmpAplicaEvento) as ITmpAplicaEvento;
end;

class function CoTipoPropriedade.Create: ITipoPropriedade;
begin
  Result := CreateComObject(CLASS_TipoPropriedade) as ITipoPropriedade;
end;

class function CoTipoPropriedade.CreateRemote(const MachineName: string): ITipoPropriedade;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TipoPropriedade) as ITipoPropriedade;
end;

class function CoTipoPropriedades.Create: ITipoPropriedades;
begin
  Result := CreateComObject(CLASS_TipoPropriedades) as ITipoPropriedades;
end;

class function CoTipoPropriedades.CreateRemote(const MachineName: string): ITipoPropriedades;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TipoPropriedades) as ITipoPropriedades;
end;

class function CoSolicitacaoReimpressao.Create: ISolicitacaoReimpressao;
begin
  Result := CreateComObject(CLASS_SolicitacaoReimpressao) as ISolicitacaoReimpressao;
end;

class function CoSolicitacaoReimpressao.CreateRemote(const MachineName: string): ISolicitacaoReimpressao;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SolicitacaoReimpressao) as ISolicitacaoReimpressao;
end;

class function CoCriptografia.Create: ICriptografia;
begin
  Result := CreateComObject(CLASS_Criptografia) as ICriptografia;
end;

class function CoCriptografia.CreateRemote(const MachineName: string): ICriptografia;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Criptografia) as ICriptografia;
end;

end.
